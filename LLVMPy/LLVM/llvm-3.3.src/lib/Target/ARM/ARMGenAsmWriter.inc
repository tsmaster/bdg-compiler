/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void ARMInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    576U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    569U,	// BUNDLE
    586U,	// LIFETIME_START
    556U,	// LIFETIME_END
    0U,	// ABS
    4975U,	// ADCri
    4975U,	// ADCrr
    9071U,	// ADCrsi
    13167U,	// ADCrsr
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    5036U,	// ADDri
    5036U,	// ADDrr
    9132U,	// ADDrsi
    13228U,	// ADDrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    17989U,	// ADR
    5095U,	// ANDri
    5095U,	// ANDrr
    9191U,	// ANDrsi
    13287U,	// ANDrsr
    136819U,	// ASRi
    136819U,	// ASRr
    0U,	// ATOMADD6432
    0U,	// ATOMAND6432
    0U,	// ATOMCMPXCHG6432
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATOMMAX6432
    0U,	// ATOMMIN6432
    0U,	// ATOMNAND6432
    0U,	// ATOMOR6432
    0U,	// ATOMSUB6432
    0U,	// ATOMSWAP6432
    0U,	// ATOMUMAX6432
    0U,	// ATOMUMIN6432
    0U,	// ATOMXOR6432
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    21367U,	// BFC
    25760U,	// BFI
    4988U,	// BICri
    4988U,	// BICrr
    9084U,	// BICrsi
    13180U,	// BICrsr
    536901453U,	// BKPT
    295043U,	// BL
    295090U,	// BLX
    536901709U,	// BLX_pred
    295090U,	// BLXi
    536900853U,	// BL_pred
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm
    0U,	// BR_JTr
    295086U,	// BX
    536900790U,	// BXJ
    0U,	// BX_CALL
    432130U,	// BX_RET
    536901634U,	// BX_pred
    536900271U,	// Bcc
    1082172940U,	// CDP
    17346586U,	// CDP2
    2103U,	// CLREX
    18546U,	// CLZ
    17842U,	// CMNri
    17842U,	// CMNzrr
    21938U,	// CMNzrsi
    26034U,	// CMNzrsr
    17942U,	// CMPri
    17942U,	// CMPrr
    22038U,	// CMPrsi
    26134U,	// CMPrsr
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    295063U,	// CPS1p
    562087613U,	// CPS2p
    25216701U,	// CPS3p
    536900669U,	// DBG
    53321U,	// DMB
    53326U,	// DSB
    5729U,	// EORri
    5729U,	// EORrr
    9825U,	// EORrsi
    13921U,	// EORrsr
    1644840894U,	// FCONSTD
    1644971966U,	// FCONSTS
    956097U,	// FMSTAT
    536901448U,	// HINT
    53331U,	// ISB
    42133302U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    51425397U,	// LDC2L_OFFSET
    2207297653U,	// LDC2L_OPTION
    2744168565U,	// LDC2L_POST
    68202613U,	// LDC2L_PRE
    51425281U,	// LDC2_OFFSET
    2207297537U,	// LDC2_OPTION
    2744168449U,	// LDC2_POST
    68202497U,	// LDC2_PRE
    3229639934U,	// LDCL_OFFSET
    3229639934U,	// LDCL_OPTION
    3229639934U,	// LDCL_POST
    3229639934U,	// LDCL_PRE
    3229639539U,	// LDC_OFFSET
    3229639539U,	// LDC_OPTION
    3229639539U,	// LDC_POST
    3229639539U,	// LDC_PRE
    29278U,	// LDMDA
    3833610846U,	// LDMDA_UPD
    29400U,	// LDMDB
    3833610968U,	// LDMDB_UPD
    30081U,	// LDMIA
    0U,	// LDMIA_RET
    3833611649U,	// LDMIA_UPD
    29419U,	// LDMIB
    3833610987U,	// LDMIB_UPD
    63235U,	// LDRBT_POST_IMM
    63235U,	// LDRBT_POST_REG
    62204U,	// LDRB_POST_IMM
    62204U,	// LDRB_POST_REG
    25340U,	// LDRB_PRE_IMM
    62204U,	// LDRB_PRE_REG
    21244U,	// LDRBi12
    25340U,	// LDRBrs
    62443U,	// LDRD
    41963U,	// LDRD_POST
    41963U,	// LDRD_PRE
    18481U,	// LDREX
    17245U,	// LDREXB
    83903489U,	// LDREXD
    17554U,	// LDREXH
    25709U,	// LDRH
    26401U,	// LDRHTi
    63265U,	// LDRHTr
    62573U,	// LDRH_POST
    62573U,	// LDRH_PRE
    25350U,	// LDRSB
    26383U,	// LDRSBTi
    63247U,	// LDRSBTr
    62214U,	// LDRSB_POST
    62214U,	// LDRSB_PRE
    25719U,	// LDRSH
    26413U,	// LDRSHTi
    63277U,	// LDRSHTr
    62583U,	// LDRSH_POST
    62583U,	// LDRSH_PRE
    63314U,	// LDRT_POST_IMM
    63314U,	// LDRT_POST_REG
    63050U,	// LDR_POST_IMM
    63050U,	// LDR_POST_REG
    26186U,	// LDR_PRE_IMM
    63050U,	// LDR_PRE_REG
    22090U,	// LDRcp
    22090U,	// LDRi12
    26186U,	// LDRrs
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    136544U,	// LSLi
    136544U,	// LSLr
    136826U,	// LSRi
    136826U,	// LSRr
    1082172993U,	// MCR
    92844064U,	// MCR2
    1082193513U,	// MCRR
    92844070U,	// MCRR2
    8838U,	// MLA
    0U,	// MLAv5
    26272U,	// MLS
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    1218495U,	// MOVPCLR
    0U,	// MOVPCRX
    22408U,	// MOVTi16
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_dyn
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    67519U,	// MOVi
    18388U,	// MOVi16
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    67519U,	// MOVr
    67519U,	// MOVr_TC
    6079U,	// MOVsi
    10175U,	// MOVsr
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    100705156U,	// MRC
    69639U,	// MRC2
    1082192776U,	// MRRC
    92844045U,	// MRRC2
    30402U,	// MRS
    536901314U,	// MRSsys
    109069951U,	// MSR
    109069951U,	// MSRi
    5484U,	// MUL
    0U,	// MULv5
    0U,	// MVNCCi
    67062U,	// MVNi
    67062U,	// MVNr
    5622U,	// MVNsi
    9718U,	// MVNsr
    5743U,	// ORRri
    5743U,	// ORRrr
    9839U,	// ORRrsi
    13935U,	// ORRrsr
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    26350U,	// PKHBT
    25363U,	// PKHTB
    73896U,	// PLDWi12
    77992U,	// PLDWrs
    73827U,	// PLDi12
    77923U,	// PLDrs
    73840U,	// PLIi12
    77936U,	// PLIrs
    21444U,	// QADD
    20915U,	// QADD16
    21018U,	// QADD8
    22626U,	// QASX
    21418U,	// QDADD
    21304U,	// QDSUB
    22513U,	// QSAX
    21317U,	// QSUB
    20877U,	// QSUB16
    20979U,	// QSUB8
    18228U,	// RBIT
    18343U,	// REV
    16855U,	// REV16
    17538U,	// REVSH
    294957U,	// RFEDA
    1343533U,	// RFEDA_UPD
    294971U,	// RFEDB
    1343547U,	// RFEDB_UPD
    294964U,	// RFEIA
    1343540U,	// RFEIA_UPD
    294978U,	// RFEIB
    1343554U,	// RFEIB_UPD
    136805U,	// RORi
    136805U,	// RORr
    0U,	// RRX
    198737U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    4872U,	// RSBri
    4872U,	// RSBrr
    8968U,	// RSBrsi
    13064U,	// RSBrsr
    5005U,	// RSCri
    5005U,	// RSCrr
    9101U,	// RSCrsi
    13197U,	// RSCrsr
    20922U,	// SADD16
    21024U,	// SADD8
    22631U,	// SASX
    4971U,	// SBCri
    4971U,	// SBCrr
    9067U,	// SBCrsi
    13163U,	// SBCrsr
    26691U,	// SBFX
    22447U,	// SDIV
    21787U,	// SEL
    82024U,	// SETEND
    20898U,	// SHADD16
    21003U,	// SHADD8
    22613U,	// SHASX
    22500U,	// SHSAX
    20860U,	// SHSUB16
    20964U,	// SHSUB8
    536900480U,	// SMC
    25271U,	// SMLABB
    26343U,	// SMLABT
    25497U,	// SMLAD
    26629U,	// SMLADX
    87265U,	// SMLAL
    25278U,	// SMLALBB
    26356U,	// SMLALBT
    25550U,	// SMLALD
    26643U,	// SMLALDX
    25369U,	// SMLALTB
    26478U,	// SMLALTT
    0U,	// SMLALv5
    25356U,	// SMLATB
    26471U,	// SMLATT
    25423U,	// SMLAWB
    26509U,	// SMLAWT
    25589U,	// SMLSD
    26659U,	// SMLSDX
    25567U,	// SMLSLD
    26651U,	// SMLSLDX
    25220U,	// SMMLA
    26170U,	// SMMLAR
    26270U,	// SMMLS
    26231U,	// SMMLSR
    21866U,	// SMMUL
    22105U,	// SMMULR
    21407U,	// SMUAD
    22540U,	// SMUADX
    21190U,	// SMULBB
    22268U,	// SMULBT
    9541U,	// SMULL
    0U,	// SMULLv5
    21281U,	// SMULTB
    22390U,	// SMULTT
    21334U,	// SMULWB
    22420U,	// SMULWT
    21499U,	// SMUSD
    22570U,	// SMUSDX
    295154U,	// SRSDA
    295106U,	// SRSDA_UPD
    295176U,	// SRSDB
    295130U,	// SRSDB_UPD
    295165U,	// SRSIA
    295118U,	// SRSIA_UPD
    295187U,	// SRSIB
    295142U,	// SRSIB_UPD
    26333U,	// SSAT
    20936U,	// SSAT16
    22518U,	// SSAX
    20884U,	// SSUB16
    20985U,	// SSUB8
    51425404U,	// STC2L_OFFSET
    2207297660U,	// STC2L_OPTION
    2744168572U,	// STC2L_POST
    68202620U,	// STC2L_PRE
    51425300U,	// STC2_OFFSET
    2207297556U,	// STC2_OPTION
    2744168468U,	// STC2_POST
    68202516U,	// STC2_PRE
    3229639939U,	// STCL_OFFSET
    3229639939U,	// STCL_OPTION
    3229639939U,	// STCL_POST
    3229639939U,	// STCL_PRE
    3229639569U,	// STC_OFFSET
    3229639569U,	// STC_OPTION
    3229639569U,	// STC_POST
    3229639569U,	// STC_PRE
    29284U,	// STMDA
    3833610852U,	// STMDA_UPD
    29407U,	// STMDB
    3833610975U,	// STMDB_UPD
    30085U,	// STMIA
    3833611653U,	// STMIA_UPD
    29425U,	// STMIB
    3833610993U,	// STMIB_UPD
    75560713U,	// STRBT_POST_IMM
    75560713U,	// STRBT_POST_REG
    75559681U,	// STRB_POST_IMM
    75559681U,	// STRB_POST_REG
    75522817U,	// STRB_PRE_IMM
    75559681U,	// STRB_PRE_REG
    21249U,	// STRBi12
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    25345U,	// STRBrs
    62448U,	// STRD
    75539440U,	// STRD_POST
    75539440U,	// STRD_PRE
    22589U,	// STREX
    21348U,	// STREXB
    21512U,	// STREXD
    21657U,	// STREXH
    25714U,	// STRH
    75523879U,	// STRHTi
    75560743U,	// STRHTr
    75560050U,	// STRH_POST
    75560050U,	// STRH_PRE
    0U,	// STRH_preidx
    75560797U,	// STRT_POST_IMM
    75560797U,	// STRT_POST_REG
    75560580U,	// STR_POST_IMM
    75560580U,	// STR_POST_REG
    75523716U,	// STR_PRE_IMM
    75560580U,	// STR_PRE_REG
    22148U,	// STRi12
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    26244U,	// STRrs
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    4922U,	// SUBri
    4922U,	// SUBrr
    9018U,	// SUBrsi
    13114U,	// SUBrsr
    536900501U,	// SVC
    22056U,	// SWP
    21239U,	// SWPB
    25259U,	// SXTAB
    24926U,	// SXTAB16
    25676U,	// SXTAH
    21294U,	// SXTB
    20846U,	// SXTB16
    21640U,	// SXTH
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    17974U,	// TEQri
    17974U,	// TEQrr
    22070U,	// TEQrsi
    26166U,	// TEQrsr
    0U,	// TPsoft
    1543U,	// TRAP
    1543U,	// TRAPNaCl
    18275U,	// TSTri
    18275U,	// TSTrr
    22371U,	// TSTrsi
    26467U,	// TSTrsr
    20929U,	// UADD16
    21030U,	// UADD8
    22636U,	// UASX
    26696U,	// UBFX
    22452U,	// UDIV
    20906U,	// UHADD16
    21010U,	// UHADD8
    22619U,	// UHASX
    22506U,	// UHSAX
    20868U,	// UHSUB16
    20971U,	// UHSUB8
    25798U,	// UMAAL
    0U,	// UMAALv5
    87271U,	// UMLAL
    0U,	// UMLALv5
    9547U,	// UMULL
    0U,	// UMULLv5
    20914U,	// UQADD16
    21017U,	// UQADD8
    22625U,	// UQASX
    22512U,	// UQSAX
    20876U,	// UQSUB16
    20978U,	// UQSUB8
    20997U,	// USAD8
    25053U,	// USADA8
    26338U,	// USAT
    20943U,	// USAT16
    22523U,	// USAX
    20891U,	// USUB16
    20991U,	// USUB8
    25265U,	// UXTAB
    24934U,	// UXTAB16
    25682U,	// UXTAH
    21299U,	// UXTB
    20853U,	// UXTB16
    21645U,	// UXTH
    93742284U,	// VABALsv2i64
    93873356U,	// VABALsv4i32
    94004428U,	// VABALsv8i16
    94135500U,	// VABALuv2i64
    94266572U,	// VABALuv4i32
    94397644U,	// VABALuv8i16
    94003801U,	// VABAsv16i8
    93741657U,	// VABAsv2i32
    93872729U,	// VABAsv4i16
    93741657U,	// VABAsv4i32
    93872729U,	// VABAsv8i16
    94003801U,	// VABAsv8i8
    94397017U,	// VABAuv16i8
    94134873U,	// VABAuv2i32
    94265945U,	// VABAuv4i16
    94134873U,	// VABAuv4i32
    94265945U,	// VABAuv8i16
    94397017U,	// VABAuv8i8
    76961032U,	// VABDLsv2i64
    77092104U,	// VABDLsv4i32
    77223176U,	// VABDLsv8i16
    77354248U,	// VABDLuv2i64
    77485320U,	// VABDLuv4i32
    77616392U,	// VABDLuv8i16
    1108104101U,	// VABDfd
    1108104101U,	// VABDfq
    77222821U,	// VABDsv16i8
    76960677U,	// VABDsv2i32
    77091749U,	// VABDsv4i16
    76960677U,	// VABDsv4i32
    77091749U,	// VABDsv8i16
    77222821U,	// VABDsv8i8
    77616037U,	// VABDuv16i8
    77353893U,	// VABDuv2i32
    77484965U,	// VABDuv4i16
    77353893U,	// VABDuv4i32
    77484965U,	// VABDuv8i16
    77616037U,	// VABDuv8i8
    1107969684U,	// VABSD
    1108100756U,	// VABSS
    1108100756U,	// VABSfd
    1108100756U,	// VABSfq
    614090388U,	// VABSv16i8
    613828244U,	// VABSv2i32
    613959316U,	// VABSv4i16
    613828244U,	// VABSv4i32
    613959316U,	// VABSv8i16
    614090388U,	// VABSv8i8
    1108104211U,	// VACGEd
    1108104211U,	// VACGEq
    1108104982U,	// VACGTd
    1108104982U,	// VACGTq
    1107973065U,	// VADDD
    77747616U,	// VADDHNv2i32
    77878688U,	// VADDHNv4i16
    78009760U,	// VADDHNv8i8
    76961045U,	// VADDLsv2i64
    77092117U,	// VADDLsv4i32
    77223189U,	// VADDLsv8i16
    77354261U,	// VADDLuv2i64
    77485333U,	// VADDLuv4i32
    77616405U,	// VADDLuv8i16
    1108104137U,	// VADDS
    76961737U,	// VADDWsv2i64
    77092809U,	// VADDWsv4i32
    77223881U,	// VADDWsv8i16
    77354953U,	// VADDWuv2i64
    77486025U,	// VADDWuv4i32
    77617097U,	// VADDWuv8i16
    1108104137U,	// VADDfd
    1108104137U,	// VADDfq
    78140361U,	// VADDv16i8
    77747145U,	// VADDv1i64
    77878217U,	// VADDv2i32
    77747145U,	// VADDv2i64
    78009289U,	// VADDv4i16
    77878217U,	// VADDv4i32
    78009289U,	// VADDv8i16
    78140361U,	// VADDv8i8
    21478U,	// VANDd
    21478U,	// VANDq
    21371U,	// VBICd
    119821179U,	// VBICiv2i32
    119952251U,	// VBICiv4i16
    119821179U,	// VBICiv4i32
    119952251U,	// VBICiv8i16
    21371U,	// VBICq
    25656U,	// VBIFd
    25656U,	// VBIFq
    26425U,	// VBITd
    26425U,	// VBITq
    25943U,	// VBSLd
    25943U,	// VBSLq
    1108104753U,	// VCEQfd
    1108104753U,	// VCEQfq
    78140977U,	// VCEQv16i8
    77878833U,	// VCEQv2i32
    78009905U,	// VCEQv4i16
    77878833U,	// VCEQv4i32
    78009905U,	// VCEQv8i16
    78140977U,	// VCEQv8i8
    1151878705U,	// VCEQzv16i8
    1108100657U,	// VCEQzv2f32
    1151616561U,	// VCEQzv2i32
    1108100657U,	// VCEQzv4f32
    1151747633U,	// VCEQzv4i16
    1151616561U,	// VCEQzv4i32
    1151747633U,	// VCEQzv8i16
    1151878705U,	// VCEQzv8i8
    1108104217U,	// VCGEfd
    1108104217U,	// VCGEfq
    77222937U,	// VCGEsv16i8
    76960793U,	// VCGEsv2i32
    77091865U,	// VCGEsv4i16
    76960793U,	// VCGEsv4i32
    77091865U,	// VCGEsv8i16
    77222937U,	// VCGEsv8i8
    77616153U,	// VCGEuv16i8
    77354009U,	// VCGEuv2i32
    77485081U,	// VCGEuv4i16
    77354009U,	// VCGEuv4i32
    77485081U,	// VCGEuv8i16
    77616153U,	// VCGEuv8i8
    1150960665U,	// VCGEzv16i8
    1108100121U,	// VCGEzv2f32
    1150698521U,	// VCGEzv2i32
    1108100121U,	// VCGEzv4f32
    1150829593U,	// VCGEzv4i16
    1150698521U,	// VCGEzv4i32
    1150829593U,	// VCGEzv8i16
    1150960665U,	// VCGEzv8i8
    1108104988U,	// VCGTfd
    1108104988U,	// VCGTfq
    77223708U,	// VCGTsv16i8
    76961564U,	// VCGTsv2i32
    77092636U,	// VCGTsv4i16
    76961564U,	// VCGTsv4i32
    77092636U,	// VCGTsv8i16
    77223708U,	// VCGTsv8i8
    77616924U,	// VCGTuv16i8
    77354780U,	// VCGTuv2i32
    77485852U,	// VCGTuv4i16
    77354780U,	// VCGTuv4i32
    77485852U,	// VCGTuv8i16
    77616924U,	// VCGTuv8i8
    1150961436U,	// VCGTzv16i8
    1108100892U,	// VCGTzv2f32
    1150699292U,	// VCGTzv2i32
    1108100892U,	// VCGTzv4f32
    1150830364U,	// VCGTzv4i16
    1150699292U,	// VCGTzv4i32
    1150830364U,	// VCGTzv8i16
    1150961436U,	// VCGTzv8i8
    1150960670U,	// VCLEzv16i8
    1108100126U,	// VCLEzv2f32
    1150698526U,	// VCLEzv2i32
    1108100126U,	// VCLEzv4f32
    1150829598U,	// VCLEzv4i16
    1150698526U,	// VCLEzv4i32
    1150829598U,	// VCLEzv8i16
    1150960670U,	// VCLEzv8i8
    614090393U,	// VCLSv16i8
    613828249U,	// VCLSv2i32
    613959321U,	// VCLSv4i16
    613828249U,	// VCLSv4i32
    613959321U,	// VCLSv8i16
    614090393U,	// VCLSv8i8
    1150961470U,	// VCLTzv16i8
    1108100926U,	// VCLTzv2f32
    1150699326U,	// VCLTzv2i32
    1108100926U,	// VCLTzv4f32
    1150830398U,	// VCLTzv4i16
    1150699326U,	// VCLTzv4i32
    1150830398U,	// VCLTzv8i16
    1150961470U,	// VCLTzv8i8
    615008369U,	// VCLZv16i8
    614746225U,	// VCLZv2i32
    614877297U,	// VCLZv4i16
    614746225U,	// VCLZv4i32
    614877297U,	// VCLZv8i16
    615008369U,	// VCLZv8i8
    1107969557U,	// VCMPD
    1107969066U,	// VCMPED
    1108100138U,	// VCMPES
    126514218U,	// VCMPEZD
    126645290U,	// VCMPEZS
    1108100629U,	// VCMPS
    126514709U,	// VCMPZD
    126645781U,	// VCMPZS
    2770755U,	// VCNTd
    2770755U,	// VCNTq
    2900776U,	// VCVTBHS
    3031848U,	// VCVTBSH
    3164035U,	// VCVTDS
    3295107U,	// VCVTSD
    2901885U,	// VCVTTHS
    3032957U,	// VCVTTSH
    3032963U,	// VCVTf2h
    137643907U,	// VCVTf2sd
    137643907U,	// VCVTf2sq
    137774979U,	// VCVTf2ud
    137774979U,	// VCVTf2uq
    1647597443U,	// VCVTf2xsd
    1647597443U,	// VCVTf2xsq
    1647728515U,	// VCVTf2xud
    1647728515U,	// VCVTf2xuq
    2901891U,	// VCVTh2f
    137906051U,	// VCVTs2fd
    137906051U,	// VCVTs2fq
    138037123U,	// VCVTu2fd
    138037123U,	// VCVTu2fq
    1647859587U,	// VCVTxs2fd
    1647859587U,	// VCVTxs2fq
    1647990659U,	// VCVTxu2fd
    1647990659U,	// VCVTxu2fq
    1107974073U,	// VDIVD
    1108105145U,	// VDIVS
    3950114U,	// VDUP16d
    3950114U,	// VDUP16q
    4081186U,	// VDUP32d
    4081186U,	// VDUP32q
    2770466U,	// VDUP8d
    2770466U,	// VDUP8q
    3954210U,	// VDUPLN16d
    3954210U,	// VDUPLN16q
    4085282U,	// VDUPLN32d
    4085282U,	// VDUPLN32q
    2774562U,	// VDUPLN8d
    2774562U,	// VDUPLN8q
    0U,	// VDUPfdf
    0U,	// VDUPfqf
    22112U,	// VEORd
    22112U,	// VEORq
    3958683U,	// VEXTd16
    4089755U,	// VEXTd32
    2779035U,	// VEXTd8
    3958683U,	// VEXTq16
    4089755U,	// VEXTq32
    4220827U,	// VEXTq64
    2779035U,	// VEXTq8
    1644847765U,	// VFMAD
    1644978837U,	// VFMAS
    1644978837U,	// VFMAfd
    1644978837U,	// VFMAfq
    1644848815U,	// VFMSD
    1644979887U,	// VFMSS
    1644979887U,	// VFMSfd
    1644979887U,	// VFMSfq
    1644847770U,	// VFNMAD
    1644978842U,	// VFNMAS
    1644848820U,	// VFNMSD
    1644979892U,	// VFNMSS
    4085694U,	// VGETLNi32
    2224576446U,	// VGETLNs16
    2224707518U,	// VGETLNs8
    2224969662U,	// VGETLNu16
    2225100734U,	// VGETLNu8
    77222839U,	// VHADDsv16i8
    76960695U,	// VHADDsv2i32
    77091767U,	// VHADDsv4i16
    76960695U,	// VHADDsv4i32
    77091767U,	// VHADDsv8i16
    77222839U,	// VHADDsv8i8
    77616055U,	// VHADDuv16i8
    77353911U,	// VHADDuv2i32
    77484983U,	// VHADDuv4i16
    77353911U,	// VHADDuv4i32
    77484983U,	// VHADDuv8i16
    77616055U,	// VHADDuv8i8
    77222718U,	// VHSUBsv16i8
    76960574U,	// VHSUBsv2i32
    77091646U,	// VHSUBsv4i16
    76960574U,	// VHSUBsv4i32
    77091646U,	// VHSUBsv8i16
    77222718U,	// VHSUBsv8i8
    77615934U,	// VHSUBuv16i8
    77353790U,	// VHSUBuv2i32
    77484862U,	// VHSUBuv4i16
    77353790U,	// VHSUBuv4i32
    77484862U,	// VHSUBuv8i16
    77615934U,	// VHSUBuv8i8
    2830913822U,	// VLD1DUPd16
    3367788830U,	// VLD1DUPd16wb_fixed
    3367825694U,	// VLD1DUPd16wb_register
    2831044894U,	// VLD1DUPd32
    3367919902U,	// VLD1DUPd32wb_fixed
    3367956766U,	// VLD1DUPd32wb_register
    2829734174U,	// VLD1DUPd8
    3366609182U,	// VLD1DUPd8wb_fixed
    3366646046U,	// VLD1DUPd8wb_register
    2839302430U,	// VLD1DUPq16
    3376177438U,	// VLD1DUPq16wb_fixed
    3376214302U,	// VLD1DUPq16wb_register
    2839433502U,	// VLD1DUPq32
    3376308510U,	// VLD1DUPq32wb_fixed
    3376345374U,	// VLD1DUPq32wb_register
    2838122782U,	// VLD1DUPq8
    3374997790U,	// VLD1DUPq8wb_fixed
    3375034654U,	// VLD1DUPq8wb_register
    3762483486U,	// VLD1LNd16
    3762512158U,	// VLD1LNd16_UPD
    3762614558U,	// VLD1LNd32
    3762643230U,	// VLD1LNd32_UPD
    3762745630U,	// VLD1LNd8
    3762774302U,	// VLD1LNd8_UPD
    3957022U,	// VLD1LNdAsm_16
    4088094U,	// VLD1LNdAsm_32
    2777374U,	// VLD1LNdAsm_8
    3957022U,	// VLD1LNdWB_fixed_Asm_16
    4088094U,	// VLD1LNdWB_fixed_Asm_32
    2777374U,	// VLD1LNdWB_fixed_Asm_8
    3993886U,	// VLD1LNdWB_register_Asm_16
    4124958U,	// VLD1LNdWB_register_Asm_32
    2814238U,	// VLD1LNdWB_register_Asm_8
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    2847691038U,	// VLD1d16
    2856079646U,	// VLD1d16Q
    3392954654U,	// VLD1d16Qwb_fixed
    3392991518U,	// VLD1d16Qwb_register
    2864468254U,	// VLD1d16T
    3401343262U,	// VLD1d16Twb_fixed
    3401380126U,	// VLD1d16Twb_register
    3384566046U,	// VLD1d16wb_fixed
    3384602910U,	// VLD1d16wb_register
    2847822110U,	// VLD1d32
    2856210718U,	// VLD1d32Q
    3393085726U,	// VLD1d32Qwb_fixed
    3393122590U,	// VLD1d32Qwb_register
    2864599326U,	// VLD1d32T
    3401474334U,	// VLD1d32Twb_fixed
    3401511198U,	// VLD1d32Twb_register
    3384697118U,	// VLD1d32wb_fixed
    3384733982U,	// VLD1d32wb_register
    2847953182U,	// VLD1d64
    2856341790U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    3393216798U,	// VLD1d64Qwb_fixed
    3393253662U,	// VLD1d64Qwb_register
    2864730398U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    3401605406U,	// VLD1d64Twb_fixed
    3401642270U,	// VLD1d64Twb_register
    3384828190U,	// VLD1d64wb_fixed
    3384865054U,	// VLD1d64wb_register
    2846511390U,	// VLD1d8
    2854899998U,	// VLD1d8Q
    3391775006U,	// VLD1d8Qwb_fixed
    3391811870U,	// VLD1d8Qwb_register
    2863288606U,	// VLD1d8T
    3400163614U,	// VLD1d8Twb_fixed
    3400200478U,	// VLD1d8Twb_register
    3383386398U,	// VLD1d8wb_fixed
    3383423262U,	// VLD1d8wb_register
    2872856862U,	// VLD1q16
    3409731870U,	// VLD1q16wb_fixed
    3409768734U,	// VLD1q16wb_register
    2872987934U,	// VLD1q32
    3409862942U,	// VLD1q32wb_fixed
    3409899806U,	// VLD1q32wb_register
    2873119006U,	// VLD1q64
    3409994014U,	// VLD1q64wb_fixed
    3410030878U,	// VLD1q64wb_register
    2871677214U,	// VLD1q8
    3408552222U,	// VLD1q8wb_fixed
    3408589086U,	// VLD1q8wb_register
    2839302457U,	// VLD2DUPd16
    3376177465U,	// VLD2DUPd16wb_fixed
    3376214329U,	// VLD2DUPd16wb_register
    2881245497U,	// VLD2DUPd16x2
    3418120505U,	// VLD2DUPd16x2wb_fixed
    3418157369U,	// VLD2DUPd16x2wb_register
    2839433529U,	// VLD2DUPd32
    3376308537U,	// VLD2DUPd32wb_fixed
    3376345401U,	// VLD2DUPd32wb_register
    2881376569U,	// VLD2DUPd32x2
    3418251577U,	// VLD2DUPd32x2wb_fixed
    3418288441U,	// VLD2DUPd32x2wb_register
    2838122809U,	// VLD2DUPd8
    3374997817U,	// VLD2DUPd8wb_fixed
    3375034681U,	// VLD2DUPd8wb_register
    2880065849U,	// VLD2DUPd8x2
    3416940857U,	// VLD2DUPd8x2wb_fixed
    3416977721U,	// VLD2DUPd8x2wb_register
    3762512185U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    3762516281U,	// VLD2LNd16_UPD
    3762643257U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    3762647353U,	// VLD2LNd32_UPD
    3762774329U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    3762778425U,	// VLD2LNd8_UPD
    3957049U,	// VLD2LNdAsm_16
    4088121U,	// VLD2LNdAsm_32
    2777401U,	// VLD2LNdAsm_8
    3957049U,	// VLD2LNdWB_fixed_Asm_16
    4088121U,	// VLD2LNdWB_fixed_Asm_32
    2777401U,	// VLD2LNdWB_fixed_Asm_8
    3993913U,	// VLD2LNdWB_register_Asm_16
    4124985U,	// VLD2LNdWB_register_Asm_32
    2814265U,	// VLD2LNdWB_register_Asm_8
    3762512185U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    3762516281U,	// VLD2LNq16_UPD
    3762643257U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    3762647353U,	// VLD2LNq32_UPD
    3957049U,	// VLD2LNqAsm_16
    4088121U,	// VLD2LNqAsm_32
    3957049U,	// VLD2LNqWB_fixed_Asm_16
    4088121U,	// VLD2LNqWB_fixed_Asm_32
    3993913U,	// VLD2LNqWB_register_Asm_16
    4124985U,	// VLD2LNqWB_register_Asm_32
    2889634105U,	// VLD2b16
    3426509113U,	// VLD2b16wb_fixed
    3426545977U,	// VLD2b16wb_register
    2889765177U,	// VLD2b32
    3426640185U,	// VLD2b32wb_fixed
    3426677049U,	// VLD2b32wb_register
    2888454457U,	// VLD2b8
    3425329465U,	// VLD2b8wb_fixed
    3425366329U,	// VLD2b8wb_register
    2872856889U,	// VLD2d16
    3409731897U,	// VLD2d16wb_fixed
    3409768761U,	// VLD2d16wb_register
    2872987961U,	// VLD2d32
    3409862969U,	// VLD2d32wb_fixed
    3409899833U,	// VLD2d32wb_register
    2871677241U,	// VLD2d8
    3408552249U,	// VLD2d8wb_fixed
    3408589113U,	// VLD2d8wb_register
    2856079673U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    3392954681U,	// VLD2q16wb_fixed
    3392991545U,	// VLD2q16wb_register
    2856210745U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    3393085753U,	// VLD2q32wb_fixed
    3393122617U,	// VLD2q32wb_register
    2854900025U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    3391775033U,	// VLD2q8wb_fixed
    3391811897U,	// VLD2q8wb_register
    4387139U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    4415811U,	// VLD3DUPd16_UPD
    4518211U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    4546883U,	// VLD3DUPd32_UPD
    4649283U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    4677955U,	// VLD3DUPd8_UPD
    750539075U,	// VLD3DUPdAsm_16
    750670147U,	// VLD3DUPdAsm_32
    749359427U,	// VLD3DUPdAsm_8
    750539075U,	// VLD3DUPdWB_fixed_Asm_16
    750670147U,	// VLD3DUPdWB_fixed_Asm_32
    749359427U,	// VLD3DUPdWB_fixed_Asm_8
    213672259U,	// VLD3DUPdWB_register_Asm_16
    213803331U,	// VLD3DUPdWB_register_Asm_32
    212492611U,	// VLD3DUPdWB_register_Asm_8
    4387139U,	// VLD3DUPq16
    4415811U,	// VLD3DUPq16_UPD
    4518211U,	// VLD3DUPq32
    4546883U,	// VLD3DUPq32_UPD
    4649283U,	// VLD3DUPq8
    4677955U,	// VLD3DUPq8_UPD
    758927683U,	// VLD3DUPqAsm_16
    759058755U,	// VLD3DUPqAsm_32
    757748035U,	// VLD3DUPqAsm_8
    758927683U,	// VLD3DUPqWB_fixed_Asm_16
    759058755U,	// VLD3DUPqWB_fixed_Asm_32
    757748035U,	// VLD3DUPqWB_fixed_Asm_8
    222060867U,	// VLD3DUPqWB_register_Asm_16
    222191939U,	// VLD3DUPqWB_register_Asm_32
    220881219U,	// VLD3DUPqWB_register_Asm_8
    3762516291U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    3762520387U,	// VLD3LNd16_UPD
    3762647363U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    3762651459U,	// VLD3LNd32_UPD
    3762778435U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    3762782531U,	// VLD3LNd8_UPD
    3957059U,	// VLD3LNdAsm_16
    4088131U,	// VLD3LNdAsm_32
    2777411U,	// VLD3LNdAsm_8
    3957059U,	// VLD3LNdWB_fixed_Asm_16
    4088131U,	// VLD3LNdWB_fixed_Asm_32
    2777411U,	// VLD3LNdWB_fixed_Asm_8
    3993923U,	// VLD3LNdWB_register_Asm_16
    4124995U,	// VLD3LNdWB_register_Asm_32
    2814275U,	// VLD3LNdWB_register_Asm_8
    3762516291U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    3762520387U,	// VLD3LNq16_UPD
    3762647363U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    3762651459U,	// VLD3LNq32_UPD
    3957059U,	// VLD3LNqAsm_16
    4088131U,	// VLD3LNqAsm_32
    3957059U,	// VLD3LNqWB_fixed_Asm_16
    4088131U,	// VLD3LNqWB_fixed_Asm_32
    3993923U,	// VLD3LNqWB_register_Asm_16
    4124995U,	// VLD3LNqWB_register_Asm_32
    4387139U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    4415811U,	// VLD3d16_UPD
    4518211U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    4546883U,	// VLD3d32_UPD
    4649283U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    4677955U,	// VLD3d8_UPD
    2864468291U,	// VLD3dAsm_16
    2864599363U,	// VLD3dAsm_32
    2863288643U,	// VLD3dAsm_8
    2864468291U,	// VLD3dWB_fixed_Asm_16
    2864599363U,	// VLD3dWB_fixed_Asm_32
    2863288643U,	// VLD3dWB_fixed_Asm_8
    2864472387U,	// VLD3dWB_register_Asm_16
    2864603459U,	// VLD3dWB_register_Asm_32
    2863292739U,	// VLD3dWB_register_Asm_8
    4387139U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    4415811U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    4518211U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    4546883U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    4649283U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    4677955U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    767316291U,	// VLD3qAsm_16
    767447363U,	// VLD3qAsm_32
    766136643U,	// VLD3qAsm_8
    767316291U,	// VLD3qWB_fixed_Asm_16
    767447363U,	// VLD3qWB_fixed_Asm_32
    766136643U,	// VLD3qWB_fixed_Asm_8
    230449475U,	// VLD3qWB_register_Asm_16
    230580547U,	// VLD3qWB_register_Asm_32
    229269827U,	// VLD3qWB_register_Asm_8
    4366676U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    4428116U,	// VLD4DUPd16_UPD
    4497748U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    4559188U,	// VLD4DUPd32_UPD
    4628820U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    4690260U,	// VLD4DUPd8_UPD
    775704916U,	// VLD4DUPdAsm_16
    775835988U,	// VLD4DUPdAsm_32
    774525268U,	// VLD4DUPdAsm_8
    775704916U,	// VLD4DUPdWB_fixed_Asm_16
    775835988U,	// VLD4DUPdWB_fixed_Asm_32
    774525268U,	// VLD4DUPdWB_fixed_Asm_8
    238838100U,	// VLD4DUPdWB_register_Asm_16
    238969172U,	// VLD4DUPdWB_register_Asm_32
    237658452U,	// VLD4DUPdWB_register_Asm_8
    4366676U,	// VLD4DUPq16
    4428116U,	// VLD4DUPq16_UPD
    4497748U,	// VLD4DUPq32
    4559188U,	// VLD4DUPq32_UPD
    4628820U,	// VLD4DUPq8
    4690260U,	// VLD4DUPq8_UPD
    784093524U,	// VLD4DUPqAsm_16
    784224596U,	// VLD4DUPqAsm_32
    782913876U,	// VLD4DUPqAsm_8
    784093524U,	// VLD4DUPqWB_fixed_Asm_16
    784224596U,	// VLD4DUPqWB_fixed_Asm_32
    782913876U,	// VLD4DUPqWB_fixed_Asm_8
    247226708U,	// VLD4DUPqWB_register_Asm_16
    247357780U,	// VLD4DUPqWB_register_Asm_32
    246047060U,	// VLD4DUPqWB_register_Asm_8
    3762520404U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    3762528596U,	// VLD4LNd16_UPD
    3762651476U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    3762659668U,	// VLD4LNd32_UPD
    3762782548U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    3762790740U,	// VLD4LNd8_UPD
    3957076U,	// VLD4LNdAsm_16
    4088148U,	// VLD4LNdAsm_32
    2777428U,	// VLD4LNdAsm_8
    3957076U,	// VLD4LNdWB_fixed_Asm_16
    4088148U,	// VLD4LNdWB_fixed_Asm_32
    2777428U,	// VLD4LNdWB_fixed_Asm_8
    3993940U,	// VLD4LNdWB_register_Asm_16
    4125012U,	// VLD4LNdWB_register_Asm_32
    2814292U,	// VLD4LNdWB_register_Asm_8
    3762520404U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    3762528596U,	// VLD4LNq16_UPD
    3762651476U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    3762659668U,	// VLD4LNq32_UPD
    3957076U,	// VLD4LNqAsm_16
    4088148U,	// VLD4LNqAsm_32
    3957076U,	// VLD4LNqWB_fixed_Asm_16
    4088148U,	// VLD4LNqWB_fixed_Asm_32
    3993940U,	// VLD4LNqWB_register_Asm_16
    4125012U,	// VLD4LNqWB_register_Asm_32
    4366676U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    4428116U,	// VLD4d16_UPD
    4497748U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    4559188U,	// VLD4d32_UPD
    4628820U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    4690260U,	// VLD4d8_UPD
    2856079700U,	// VLD4dAsm_16
    2856210772U,	// VLD4dAsm_32
    2854900052U,	// VLD4dAsm_8
    2856079700U,	// VLD4dWB_fixed_Asm_16
    2856210772U,	// VLD4dWB_fixed_Asm_32
    2854900052U,	// VLD4dWB_fixed_Asm_8
    2856083796U,	// VLD4dWB_register_Asm_16
    2856214868U,	// VLD4dWB_register_Asm_32
    2854904148U,	// VLD4dWB_register_Asm_8
    4366676U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    4428116U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    4497748U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    4559188U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    4628820U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    4690260U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    792482132U,	// VLD4qAsm_16
    792613204U,	// VLD4qAsm_32
    791302484U,	// VLD4qAsm_8
    792482132U,	// VLD4qWB_fixed_Asm_16
    792613204U,	// VLD4qWB_fixed_Asm_32
    791302484U,	// VLD4qWB_fixed_Asm_8
    255615316U,	// VLD4qWB_register_Asm_16
    255746388U,	// VLD4qWB_register_Asm_32
    254435668U,	// VLD4qWB_register_Asm_8
    3833610967U,	// VLDMDDB_UPD
    29296U,	// VLDMDIA
    3833610864U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    3833610967U,	// VLDMSDB_UPD
    29296U,	// VLDMSIA
    3833610864U,	// VLDMSIA_UPD
    22089U,	// VLDRD
    22089U,	// VLDRS
    1108105183U,	// VMAXfd
    1108105183U,	// VMAXfq
    77223903U,	// VMAXsv16i8
    76961759U,	// VMAXsv2i32
    77092831U,	// VMAXsv4i16
    76961759U,	// VMAXsv4i32
    77092831U,	// VMAXsv8i16
    77223903U,	// VMAXsv8i8
    77617119U,	// VMAXuv16i8
    77354975U,	// VMAXuv2i32
    77486047U,	// VMAXuv4i16
    77354975U,	// VMAXuv4i32
    77486047U,	// VMAXuv8i16
    77617119U,	// VMAXuv8i8
    1108104621U,	// VMINfd
    1108104621U,	// VMINfq
    77223341U,	// VMINsv16i8
    76961197U,	// VMINsv2i32
    77092269U,	// VMINsv4i16
    76961197U,	// VMINsv4i32
    77092269U,	// VMINsv8i16
    77223341U,	// VMINsv8i8
    77616557U,	// VMINuv16i8
    77354413U,	// VMINuv2i32
    77485485U,	// VMINuv4i16
    77354413U,	// VMINuv4i32
    77485485U,	// VMINuv8i16
    77616557U,	// VMINuv8i8
    1644847760U,	// VMLAD
    93779181U,	// VMLALslsv2i32
    93910253U,	// VMLALslsv4i16
    94172397U,	// VMLALsluv2i32
    94303469U,	// VMLALsluv4i16
    93742317U,	// VMLALsv2i64
    93873389U,	// VMLALsv4i32
    94004461U,	// VMLALsv8i16
    94135533U,	// VMLALuv2i64
    94266605U,	// VMLALuv4i32
    94397677U,	// VMLALuv8i16
    1644978832U,	// VMLAS
    1644978832U,	// VMLAfd
    1644978832U,	// VMLAfq
    1645015696U,	// VMLAslfd
    1645015696U,	// VMLAslfq
    94696080U,	// VMLAslv2i32
    94827152U,	// VMLAslv4i16
    94696080U,	// VMLAslv4i32
    94827152U,	// VMLAslv8i16
    94921360U,	// VMLAv16i8
    94659216U,	// VMLAv2i32
    94790288U,	// VMLAv4i16
    94659216U,	// VMLAv4i32
    94790288U,	// VMLAv8i16
    94921360U,	// VMLAv8i8
    1644848810U,	// VMLSD
    93779300U,	// VMLSLslsv2i32
    93910372U,	// VMLSLslsv4i16
    94172516U,	// VMLSLsluv2i32
    94303588U,	// VMLSLsluv4i16
    93742436U,	// VMLSLsv2i64
    93873508U,	// VMLSLsv4i32
    94004580U,	// VMLSLsv8i16
    94135652U,	// VMLSLuv2i64
    94266724U,	// VMLSLuv4i32
    94397796U,	// VMLSLuv8i16
    1644979882U,	// VMLSS
    1644979882U,	// VMLSfd
    1644979882U,	// VMLSfq
    1645016746U,	// VMLSslfd
    1645016746U,	// VMLSslfq
    94697130U,	// VMLSslv2i32
    94828202U,	// VMLSslv4i16
    94697130U,	// VMLSslv4i32
    94828202U,	// VMLSslv8i16
    94922410U,	// VMLSv16i8
    94660266U,	// VMLSv2i32
    94791338U,	// VMLSv4i16
    94660266U,	// VMLSv4i32
    94791338U,	// VMLSv8i16
    94922410U,	// VMLSv8i8
    1107969982U,	// VMOVD
    22462U,	// VMOVDRR
    0U,	// VMOVDcc
    613827963U,	// VMOVLsv2i64
    613959035U,	// VMOVLsv4i32
    614090107U,	// VMOVLsv8i16
    614221179U,	// VMOVLuv2i64
    614352251U,	// VMOVLuv4i32
    614483323U,	// VMOVLuv8i16
    614614529U,	// VMOVNv2i32
    614745601U,	// VMOVNv4i16
    614876673U,	// VMOVNv8i8
    22462U,	// VMOVRRD
    26558U,	// VMOVRRS
    18366U,	// VMOVRS
    1108101054U,	// VMOVS
    18366U,	// VMOVSR
    26558U,	// VMOVSRR
    0U,	// VMOVScc
    120080318U,	// VMOVv16i8
    119687102U,	// VMOVv1i64
    1644971966U,	// VMOVv2f32
    119818174U,	// VMOVv2i32
    119687102U,	// VMOVv2i64
    1644971966U,	// VMOVv4f32
    119949246U,	// VMOVv4i16
    119818174U,	// VMOVv4i32
    119949246U,	// VMOVv8i16
    120080318U,	// VMOVv8i8
    1073772225U,	// VMRS
    1610643137U,	// VMRS_FPEXC
    2147514049U,	// VMRS_FPSID
    2684384961U,	// VMRS_MVFR0
    3221255873U,	// VMRS_MVFR1
    4748926U,	// VMSR
    4879998U,	// VMSR_FPEXC
    5011070U,	// VMSR_FPSID
    1107973494U,	// VMULD
    5133649U,	// VMULLp
    76965201U,	// VMULLslsv2i32
    77096273U,	// VMULLslsv4i16
    77358417U,	// VMULLsluv2i32
    77489489U,	// VMULLsluv4i16
    76961105U,	// VMULLsv2i64
    77092177U,	// VMULLsv4i32
    77223249U,	// VMULLsv8i16
    77354321U,	// VMULLuv2i64
    77485393U,	// VMULLuv4i32
    77616465U,	// VMULLuv8i16
    1108104566U,	// VMULS
    1108104566U,	// VMULfd
    1108104566U,	// VMULfq
    5133686U,	// VMULpd
    5133686U,	// VMULpq
    1108108662U,	// VMULslfd
    1108108662U,	// VMULslfq
    77882742U,	// VMULslv2i32
    78013814U,	// VMULslv4i16
    77882742U,	// VMULslv4i32
    78013814U,	// VMULslv8i16
    78140790U,	// VMULv16i8
    77878646U,	// VMULv2i32
    78009718U,	// VMULv4i16
    77878646U,	// VMULv4i32
    78009718U,	// VMULv8i16
    78140790U,	// VMULv8i8
    17909U,	// VMVNd
    17909U,	// VMVNq
    119817717U,	// VMVNv2i32
    119948789U,	// VMVNv4i16
    119817717U,	// VMVNv4i32
    119948789U,	// VMVNv8i16
    1107969095U,	// VNEGD
    1108100167U,	// VNEGS
    1108100167U,	// VNEGf32q
    1108100167U,	// VNEGfd
    613958727U,	// VNEGs16d
    613958727U,	// VNEGs16q
    613827655U,	// VNEGs32d
    613827655U,	// VNEGs32q
    614089799U,	// VNEGs8d
    614089799U,	// VNEGs8q
    1644847754U,	// VNMLAD
    1644978826U,	// VNMLAS
    1644848804U,	// VNMLSD
    1644979876U,	// VNMLSS
    1107973488U,	// VNMULD
    1108104560U,	// VNMULS
    21970U,	// VORNd
    21970U,	// VORNq
    22126U,	// VORRd
    119821934U,	// VORRiv2i32
    119953006U,	// VORRiv4i16
    119821934U,	// VORRiv4i32
    119953006U,	// VORRiv8i16
    22126U,	// VORRq
    630871250U,	// VPADALsv16i8
    630609106U,	// VPADALsv2i32
    630740178U,	// VPADALsv4i16
    630609106U,	// VPADALsv4i32
    630740178U,	// VPADALsv8i16
    630871250U,	// VPADALsv8i8
    631264466U,	// VPADALuv16i8
    631002322U,	// VPADALuv2i32
    631133394U,	// VPADALuv4i16
    631002322U,	// VPADALuv4i32
    631133394U,	// VPADALuv8i16
    631264466U,	// VPADALuv8i8
    614089998U,	// VPADDLsv16i8
    613827854U,	// VPADDLsv2i32
    613958926U,	// VPADDLsv4i16
    613827854U,	// VPADDLsv4i32
    613958926U,	// VPADDLsv8i16
    614089998U,	// VPADDLsv8i8
    614483214U,	// VPADDLuv16i8
    614221070U,	// VPADDLuv2i32
    614352142U,	// VPADDLuv4i16
    614221070U,	// VPADDLuv4i32
    614352142U,	// VPADDLuv8i16
    614483214U,	// VPADDLuv8i8
    1108104125U,	// VPADDf
    78009277U,	// VPADDi16
    77878205U,	// VPADDi32
    78140349U,	// VPADDi8
    1108105177U,	// VPMAXf
    77092825U,	// VPMAXs16
    76961753U,	// VPMAXs32
    77223897U,	// VPMAXs8
    77486041U,	// VPMAXu16
    77354969U,	// VPMAXu32
    77617113U,	// VPMAXu8
    1108104615U,	// VPMINf
    77092263U,	// VPMINs16
    76961191U,	// VPMINs32
    77223335U,	// VPMINs8
    77485479U,	// VPMINu16
    77354407U,	// VPMINu32
    77616551U,	// VPMINu8
    614090382U,	// VQABSv16i8
    613828238U,	// VQABSv2i32
    613959310U,	// VQABSv4i16
    613828238U,	// VQABSv4i32
    613959310U,	// VQABSv8i16
    614090382U,	// VQABSv8i8
    77222851U,	// VQADDsv16i8
    80761795U,	// VQADDsv1i64
    76960707U,	// VQADDsv2i32
    80761795U,	// VQADDsv2i64
    77091779U,	// VQADDsv4i16
    76960707U,	// VQADDsv4i32
    77091779U,	// VQADDsv8i16
    77222851U,	// VQADDsv8i8
    77616067U,	// VQADDuv16i8
    80892867U,	// VQADDuv1i64
    77353923U,	// VQADDuv2i32
    80892867U,	// VQADDuv2i64
    77484995U,	// VQADDuv4i16
    77353923U,	// VQADDuv4i32
    77484995U,	// VQADDuv8i16
    77616067U,	// VQADDuv8i8
    93779161U,	// VQDMLALslv2i32
    93910233U,	// VQDMLALslv4i16
    93742297U,	// VQDMLALv2i64
    93873369U,	// VQDMLALv4i32
    93779292U,	// VQDMLSLslv2i32
    93910364U,	// VQDMLSLslv4i16
    93742428U,	// VQDMLSLv2i64
    93873500U,	// VQDMLSLv4i32
    76964956U,	// VQDMULHslv2i32
    77096028U,	// VQDMULHslv4i16
    76964956U,	// VQDMULHslv4i32
    77096028U,	// VQDMULHslv8i16
    76960860U,	// VQDMULHv2i32
    77091932U,	// VQDMULHv4i16
    76960860U,	// VQDMULHv4i32
    77091932U,	// VQDMULHv8i16
    76965181U,	// VQDMULLslv2i32
    77096253U,	// VQDMULLslv4i16
    76961085U,	// VQDMULLv2i64
    77092157U,	// VQDMULLv4i32
    617629165U,	// VQMOVNsuv2i32
    613828077U,	// VQMOVNsuv4i16
    613959149U,	// VQMOVNsuv8i8
    617629178U,	// VQMOVNsv2i32
    613828090U,	// VQMOVNsv4i16
    613959162U,	// VQMOVNsv8i8
    617760250U,	// VQMOVNuv2i32
    614221306U,	// VQMOVNuv4i16
    614352378U,	// VQMOVNuv8i8
    614089793U,	// VQNEGv16i8
    613827649U,	// VQNEGv2i32
    613958721U,	// VQNEGv4i16
    613827649U,	// VQNEGv4i32
    613958721U,	// VQNEGv8i16
    614089793U,	// VQNEGv8i8
    76964964U,	// VQRDMULHslv2i32
    77096036U,	// VQRDMULHslv4i16
    76964964U,	// VQRDMULHslv4i32
    77096036U,	// VQRDMULHslv8i16
    76960868U,	// VQRDMULHv2i32
    77091940U,	// VQRDMULHv4i16
    76960868U,	// VQRDMULHv4i32
    77091940U,	// VQRDMULHv8i16
    77223205U,	// VQRSHLsv16i8
    80762149U,	// VQRSHLsv1i64
    76961061U,	// VQRSHLsv2i32
    80762149U,	// VQRSHLsv2i64
    77092133U,	// VQRSHLsv4i16
    76961061U,	// VQRSHLsv4i32
    77092133U,	// VQRSHLsv8i16
    77223205U,	// VQRSHLsv8i8
    77616421U,	// VQRSHLuv16i8
    80893221U,	// VQRSHLuv1i64
    77354277U,	// VQRSHLuv2i32
    80893221U,	// VQRSHLuv2i64
    77485349U,	// VQRSHLuv4i16
    77354277U,	// VQRSHLuv4i32
    77485349U,	// VQRSHLuv8i16
    77616421U,	// VQRSHLuv8i8
    80762301U,	// VQRSHRNsv2i32
    76961213U,	// VQRSHRNsv4i16
    77092285U,	// VQRSHRNsv8i8
    80893373U,	// VQRSHRNuv2i32
    77354429U,	// VQRSHRNuv4i16
    77485501U,	// VQRSHRNuv8i8
    80762340U,	// VQRSHRUNv2i32
    76961252U,	// VQRSHRUNv4i16
    77092324U,	// VQRSHRUNv8i8
    77223199U,	// VQSHLsiv16i8
    80762143U,	// VQSHLsiv1i64
    76961055U,	// VQSHLsiv2i32
    80762143U,	// VQSHLsiv2i64
    77092127U,	// VQSHLsiv4i16
    76961055U,	// VQSHLsiv4i32
    77092127U,	// VQSHLsiv8i16
    77223199U,	// VQSHLsiv8i8
    77223840U,	// VQSHLsuv16i8
    80762784U,	// VQSHLsuv1i64
    76961696U,	// VQSHLsuv2i32
    80762784U,	// VQSHLsuv2i64
    77092768U,	// VQSHLsuv4i16
    76961696U,	// VQSHLsuv4i32
    77092768U,	// VQSHLsuv8i16
    77223840U,	// VQSHLsuv8i8
    77223199U,	// VQSHLsv16i8
    80762143U,	// VQSHLsv1i64
    76961055U,	// VQSHLsv2i32
    80762143U,	// VQSHLsv2i64
    77092127U,	// VQSHLsv4i16
    76961055U,	// VQSHLsv4i32
    77092127U,	// VQSHLsv8i16
    77223199U,	// VQSHLsv8i8
    77616415U,	// VQSHLuiv16i8
    80893215U,	// VQSHLuiv1i64
    77354271U,	// VQSHLuiv2i32
    80893215U,	// VQSHLuiv2i64
    77485343U,	// VQSHLuiv4i16
    77354271U,	// VQSHLuiv4i32
    77485343U,	// VQSHLuiv8i16
    77616415U,	// VQSHLuiv8i8
    77616415U,	// VQSHLuv16i8
    80893215U,	// VQSHLuv1i64
    77354271U,	// VQSHLuv2i32
    80893215U,	// VQSHLuv2i64
    77485343U,	// VQSHLuv4i16
    77354271U,	// VQSHLuv4i32
    77485343U,	// VQSHLuv8i16
    77616415U,	// VQSHLuv8i8
    80762294U,	// VQSHRNsv2i32
    76961206U,	// VQSHRNsv4i16
    77092278U,	// VQSHRNsv8i8
    80893366U,	// VQSHRNuv2i32
    77354422U,	// VQSHRNuv4i16
    77485494U,	// VQSHRNuv8i8
    80762332U,	// VQSHRUNv2i32
    76961244U,	// VQSHRUNv4i16
    77092316U,	// VQSHRUNv8i8
    77222724U,	// VQSUBsv16i8
    80761668U,	// VQSUBsv1i64
    76960580U,	// VQSUBsv2i32
    80761668U,	// VQSUBsv2i64
    77091652U,	// VQSUBsv4i16
    76960580U,	// VQSUBsv4i32
    77091652U,	// VQSUBsv8i16
    77222724U,	// VQSUBsv8i8
    77615940U,	// VQSUBuv16i8
    80892740U,	// VQSUBuv1i64
    77353796U,	// VQSUBuv2i32
    80892740U,	// VQSUBuv2i64
    77484868U,	// VQSUBuv4i16
    77353796U,	// VQSUBuv4i32
    77484868U,	// VQSUBuv8i16
    77615940U,	// VQSUBuv8i8
    77747608U,	// VRADDHNv2i32
    77878680U,	// VRADDHNv4i16
    78009752U,	// VRADDHNv8i8
    614220835U,	// VRECPEd
    1108100131U,	// VRECPEfd
    1108100131U,	// VRECPEfq
    614220835U,	// VRECPEq
    1108104890U,	// VRECPSfd
    1108104890U,	// VRECPSfq
    2769366U,	// VREV16d8
    2769366U,	// VREV16q8
    3948840U,	// VREV32d16
    2769192U,	// VREV32d8
    3948840U,	// VREV32q16
    2769192U,	// VREV32q8
    3948877U,	// VREV64d16
    4079949U,	// VREV64d32
    2769229U,	// VREV64d8
    3948877U,	// VREV64q16
    4079949U,	// VREV64q32
    2769229U,	// VREV64q8
    77222832U,	// VRHADDsv16i8
    76960688U,	// VRHADDsv2i32
    77091760U,	// VRHADDsv4i16
    76960688U,	// VRHADDsv4i32
    77091760U,	// VRHADDsv8i16
    77222832U,	// VRHADDsv8i8
    77616048U,	// VRHADDuv16i8
    77353904U,	// VRHADDuv2i32
    77484976U,	// VRHADDuv4i16
    77353904U,	// VRHADDuv4i32
    77484976U,	// VRHADDuv8i16
    77616048U,	// VRHADDuv8i8
    77223212U,	// VRSHLsv16i8
    80762156U,	// VRSHLsv1i64
    76961068U,	// VRSHLsv2i32
    80762156U,	// VRSHLsv2i64
    77092140U,	// VRSHLsv4i16
    76961068U,	// VRSHLsv4i32
    77092140U,	// VRSHLsv8i16
    77223212U,	// VRSHLsv8i8
    77616428U,	// VRSHLuv16i8
    80893228U,	// VRSHLuv1i64
    77354284U,	// VRSHLuv2i32
    80893228U,	// VRSHLuv2i64
    77485356U,	// VRSHLuv4i16
    77354284U,	// VRSHLuv4i32
    77485356U,	// VRSHLuv8i16
    77616428U,	// VRSHLuv8i8
    77747653U,	// VRSHRNv2i32
    77878725U,	// VRSHRNv4i16
    78009797U,	// VRSHRNv8i8
    77223502U,	// VRSHRsv16i8
    80762446U,	// VRSHRsv1i64
    76961358U,	// VRSHRsv2i32
    80762446U,	// VRSHRsv2i64
    77092430U,	// VRSHRsv4i16
    76961358U,	// VRSHRsv4i32
    77092430U,	// VRSHRsv8i16
    77223502U,	// VRSHRsv8i8
    77616718U,	// VRSHRuv16i8
    80893518U,	// VRSHRuv1i64
    77354574U,	// VRSHRuv2i32
    80893518U,	// VRSHRuv2i64
    77485646U,	// VRSHRuv4i16
    77354574U,	// VRSHRuv4i32
    77485646U,	// VRSHRuv8i16
    77616718U,	// VRSHRuv8i8
    614220848U,	// VRSQRTEd
    1108100144U,	// VRSQRTEfd
    1108100144U,	// VRSQRTEfq
    614220848U,	// VRSQRTEq
    1108104912U,	// VRSQRTSfd
    1108104912U,	// VRSQRTSfq
    94003872U,	// VRSRAsv16i8
    97542816U,	// VRSRAsv1i64
    93741728U,	// VRSRAsv2i32
    97542816U,	// VRSRAsv2i64
    93872800U,	// VRSRAsv4i16
    93741728U,	// VRSRAsv4i32
    93872800U,	// VRSRAsv8i16
    94003872U,	// VRSRAsv8i8
    94397088U,	// VRSRAuv16i8
    97673888U,	// VRSRAuv1i64
    94134944U,	// VRSRAuv2i32
    97673888U,	// VRSRAuv2i64
    94266016U,	// VRSRAuv4i16
    94134944U,	// VRSRAuv4i32
    94266016U,	// VRSRAuv8i16
    94397088U,	// VRSRAuv8i8
    77747593U,	// VRSUBHNv2i32
    77878665U,	// VRSUBHNv4i16
    78009737U,	// VRSUBHNv8i8
    3762055102U,	// VSETLNi16
    3762186174U,	// VSETLNi32
    3760875454U,	// VSETLNi8
    78009655U,	// VSHLLi16
    77878583U,	// VSHLLi32
    78140727U,	// VSHLLi8
    76961079U,	// VSHLLsv2i64
    77092151U,	// VSHLLsv4i32
    77223223U,	// VSHLLsv8i16
    77354295U,	// VSHLLuv2i64
    77485367U,	// VSHLLuv4i32
    77616439U,	// VSHLLuv8i16
    78140722U,	// VSHLiv16i8
    77747506U,	// VSHLiv1i64
    77878578U,	// VSHLiv2i32
    77747506U,	// VSHLiv2i64
    78009650U,	// VSHLiv4i16
    77878578U,	// VSHLiv4i32
    78009650U,	// VSHLiv8i16
    78140722U,	// VSHLiv8i8
    77223218U,	// VSHLsv16i8
    80762162U,	// VSHLsv1i64
    76961074U,	// VSHLsv2i32
    80762162U,	// VSHLsv2i64
    77092146U,	// VSHLsv4i16
    76961074U,	// VSHLsv4i32
    77092146U,	// VSHLsv8i16
    77223218U,	// VSHLsv8i8
    77616434U,	// VSHLuv16i8
    80893234U,	// VSHLuv1i64
    77354290U,	// VSHLuv2i32
    80893234U,	// VSHLuv2i64
    77485362U,	// VSHLuv4i16
    77354290U,	// VSHLuv4i32
    77485362U,	// VSHLuv8i16
    77616434U,	// VSHLuv8i8
    77747660U,	// VSHRNv2i32
    77878732U,	// VSHRNv4i16
    78009804U,	// VSHRNv8i8
    77223508U,	// VSHRsv16i8
    80762452U,	// VSHRsv1i64
    76961364U,	// VSHRsv2i32
    80762452U,	// VSHRsv2i64
    77092436U,	// VSHRsv4i16
    76961364U,	// VSHRsv4i32
    77092436U,	// VSHRsv8i16
    77223508U,	// VSHRsv8i8
    77616724U,	// VSHRuv16i8
    80893524U,	// VSHRuv1i64
    77354580U,	// VSHRuv2i32
    80893524U,	// VSHRuv2i64
    77485652U,	// VSHRuv4i16
    77354580U,	// VSHRuv4i32
    77485652U,	// VSHRuv8i16
    77616724U,	// VSHRuv8i8
    5527427U,	// VSHTOD
    5658499U,	// VSHTOS
    140003203U,	// VSITOD
    137906051U,	// VSITOS
    2778284U,	// VSLIv16i8
    4220076U,	// VSLIv1i64
    4089004U,	// VSLIv2i32
    4220076U,	// VSLIv2i64
    3957932U,	// VSLIv4i16
    4089004U,	// VSLIv4i32
    3957932U,	// VSLIv8i16
    2778284U,	// VSLIv8i8
    39344003U,	// VSLTOD
    37246851U,	// VSLTOS
    1107969879U,	// VSQRTD
    1108100951U,	// VSQRTS
    94003878U,	// VSRAsv16i8
    97542822U,	// VSRAsv1i64
    93741734U,	// VSRAsv2i32
    97542822U,	// VSRAsv2i64
    93872806U,	// VSRAsv4i16
    93741734U,	// VSRAsv4i32
    93872806U,	// VSRAsv8i16
    94003878U,	// VSRAsv8i8
    94397094U,	// VSRAuv16i8
    97673894U,	// VSRAuv1i64
    94134950U,	// VSRAuv2i32
    97673894U,	// VSRAuv2i64
    94266022U,	// VSRAuv4i16
    94134950U,	// VSRAuv4i32
    94266022U,	// VSRAuv8i16
    94397094U,	// VSRAuv8i8
    2778289U,	// VSRIv16i8
    4220081U,	// VSRIv1i64
    4089009U,	// VSRIv2i32
    4220081U,	// VSRIv2i64
    3957937U,	// VSRIv4i16
    4089009U,	// VSRIv4i32
    3957937U,	// VSRIv8i16
    2778289U,	// VSRIv8i8
    3854721315U,	// VST1LNd16
    4022509859U,	// VST1LNd16_UPD
    3854852387U,	// VST1LNd32
    4022640931U,	// VST1LNd32_UPD
    3854983459U,	// VST1LNd8
    4022772003U,	// VST1LNd8_UPD
    3957027U,	// VST1LNdAsm_16
    4088099U,	// VST1LNdAsm_32
    2777379U,	// VST1LNdAsm_8
    3957027U,	// VST1LNdWB_fixed_Asm_16
    4088099U,	// VST1LNdWB_fixed_Asm_32
    2777379U,	// VST1LNdWB_fixed_Asm_8
    3993891U,	// VST1LNdWB_register_Asm_16
    4124963U,	// VST1LNdWB_register_Asm_32
    2814243U,	// VST1LNdWB_register_Asm_8
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    272388387U,	// VST1d16
    280776995U,	// VST1d16Q
    289169699U,	// VST1d16Qwb_fixed
    297595171U,	// VST1d16Qwb_register
    305942819U,	// VST1d16T
    314335523U,	// VST1d16Twb_fixed
    322760995U,	// VST1d16Twb_register
    331112739U,	// VST1d16wb_fixed
    339538211U,	// VST1d16wb_register
    272519459U,	// VST1d32
    280908067U,	// VST1d32Q
    289300771U,	// VST1d32Qwb_fixed
    297726243U,	// VST1d32Qwb_register
    306073891U,	// VST1d32T
    314466595U,	// VST1d32Twb_fixed
    322892067U,	// VST1d32Twb_register
    331243811U,	// VST1d32wb_fixed
    339669283U,	// VST1d32wb_register
    272650531U,	// VST1d64
    281039139U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    289431843U,	// VST1d64Qwb_fixed
    297857315U,	// VST1d64Qwb_register
    306204963U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    314597667U,	// VST1d64Twb_fixed
    323023139U,	// VST1d64Twb_register
    331374883U,	// VST1d64wb_fixed
    339800355U,	// VST1d64wb_register
    271208739U,	// VST1d8
    279597347U,	// VST1d8Q
    287990051U,	// VST1d8Qwb_fixed
    296415523U,	// VST1d8Qwb_register
    304763171U,	// VST1d8T
    313155875U,	// VST1d8Twb_fixed
    321581347U,	// VST1d8Twb_register
    329933091U,	// VST1d8wb_fixed
    338358563U,	// VST1d8wb_register
    347885859U,	// VST1q16
    356278563U,	// VST1q16wb_fixed
    364704035U,	// VST1q16wb_register
    348016931U,	// VST1q32
    356409635U,	// VST1q32wb_fixed
    364835107U,	// VST1q32wb_register
    348148003U,	// VST1q64
    356540707U,	// VST1q64wb_fixed
    364966179U,	// VST1q64wb_register
    346706211U,	// VST1q8
    355098915U,	// VST1q8wb_fixed
    363524387U,	// VST1q8wb_register
    3854758206U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    4022559038U,	// VST2LNd16_UPD
    3854889278U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    4022690110U,	// VST2LNd32_UPD
    3855020350U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    4022821182U,	// VST2LNd8_UPD
    3957054U,	// VST2LNdAsm_16
    4088126U,	// VST2LNdAsm_32
    2777406U,	// VST2LNdAsm_8
    3957054U,	// VST2LNdWB_fixed_Asm_16
    4088126U,	// VST2LNdWB_fixed_Asm_32
    2777406U,	// VST2LNdWB_fixed_Asm_8
    3993918U,	// VST2LNdWB_register_Asm_16
    4124990U,	// VST2LNdWB_register_Asm_32
    2814270U,	// VST2LNdWB_register_Asm_8
    3854758206U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    4022559038U,	// VST2LNq16_UPD
    3854889278U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    4022690110U,	// VST2LNq32_UPD
    3957054U,	// VST2LNqAsm_16
    4088126U,	// VST2LNqAsm_32
    3957054U,	// VST2LNqWB_fixed_Asm_16
    4088126U,	// VST2LNqWB_fixed_Asm_32
    3993918U,	// VST2LNqWB_register_Asm_16
    4124990U,	// VST2LNqWB_register_Asm_32
    373051710U,	// VST2b16
    381444414U,	// VST2b16wb_fixed
    389869886U,	// VST2b16wb_register
    373182782U,	// VST2b32
    381575486U,	// VST2b32wb_fixed
    390000958U,	// VST2b32wb_register
    371872062U,	// VST2b8
    380264766U,	// VST2b8wb_fixed
    388690238U,	// VST2b8wb_register
    347885886U,	// VST2d16
    356278590U,	// VST2d16wb_fixed
    364704062U,	// VST2d16wb_register
    348016958U,	// VST2d32
    356409662U,	// VST2d32wb_fixed
    364835134U,	// VST2d32wb_register
    346706238U,	// VST2d8
    355098942U,	// VST2d8wb_fixed
    363524414U,	// VST2d8wb_register
    280777022U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    289169726U,	// VST2q16wb_fixed
    297595198U,	// VST2q16wb_register
    280908094U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    289300798U,	// VST2q32wb_fixed
    297726270U,	// VST2q32wb_register
    279597374U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    287990078U,	// VST2q8wb_fixed
    296415550U,	// VST2q8wb_register
    3854737736U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    4022571336U,	// VST3LNd16_UPD
    3854868808U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    4022702408U,	// VST3LNd32_UPD
    3854999880U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    4022833480U,	// VST3LNd8_UPD
    3957064U,	// VST3LNdAsm_16
    4088136U,	// VST3LNdAsm_32
    2777416U,	// VST3LNdAsm_8
    3957064U,	// VST3LNdWB_fixed_Asm_16
    4088136U,	// VST3LNdWB_fixed_Asm_32
    2777416U,	// VST3LNdWB_fixed_Asm_8
    3993928U,	// VST3LNdWB_register_Asm_16
    4125000U,	// VST3LNdWB_register_Asm_32
    2814280U,	// VST3LNdWB_register_Asm_8
    3854737736U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    4022571336U,	// VST3LNq16_UPD
    3854868808U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    4022702408U,	// VST3LNq32_UPD
    3957064U,	// VST3LNqAsm_16
    4088136U,	// VST3LNqAsm_32
    3957064U,	// VST3LNqWB_fixed_Asm_16
    4088136U,	// VST3LNqWB_fixed_Asm_32
    3993928U,	// VST3LNqWB_register_Asm_16
    4125000U,	// VST3LNqWB_register_Asm_32
    96661832U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    264462664U,	// VST3d16_UPD
    96792904U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    264593736U,	// VST3d32_UPD
    96923976U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    264724808U,	// VST3d8_UPD
    2864468296U,	// VST3dAsm_16
    2864599368U,	// VST3dAsm_32
    2863288648U,	// VST3dAsm_8
    2864468296U,	// VST3dWB_fixed_Asm_16
    2864599368U,	// VST3dWB_fixed_Asm_32
    2863288648U,	// VST3dWB_fixed_Asm_8
    2864472392U,	// VST3dWB_register_Asm_16
    2864603464U,	// VST3dWB_register_Asm_32
    2863292744U,	// VST3dWB_register_Asm_8
    96661832U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    264462664U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    96792904U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    264593736U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    96923976U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    264724808U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    767316296U,	// VST3qAsm_16
    767447368U,	// VST3qAsm_32
    766136648U,	// VST3qAsm_8
    767316296U,	// VST3qWB_fixed_Asm_16
    767447368U,	// VST3qWB_fixed_Asm_32
    766136648U,	// VST3qWB_fixed_Asm_8
    230449480U,	// VST3qWB_register_Asm_16
    230580552U,	// VST3qWB_register_Asm_32
    229269832U,	// VST3qWB_register_Asm_8
    3854786905U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    4022563161U,	// VST4LNd16_UPD
    3854917977U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    4022694233U,	// VST4LNd32_UPD
    3855049049U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    4022825305U,	// VST4LNd8_UPD
    3957081U,	// VST4LNdAsm_16
    4088153U,	// VST4LNdAsm_32
    2777433U,	// VST4LNdAsm_8
    3957081U,	// VST4LNdWB_fixed_Asm_16
    4088153U,	// VST4LNdWB_fixed_Asm_32
    2777433U,	// VST4LNdWB_fixed_Asm_8
    3993945U,	// VST4LNdWB_register_Asm_16
    4125017U,	// VST4LNdWB_register_Asm_32
    2814297U,	// VST4LNdWB_register_Asm_8
    3854786905U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    4022563161U,	// VST4LNq16_UPD
    3854917977U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    4022694233U,	// VST4LNq32_UPD
    3957081U,	// VST4LNqAsm_16
    4088153U,	// VST4LNqAsm_32
    3957081U,	// VST4LNqWB_fixed_Asm_16
    4088153U,	// VST4LNqWB_fixed_Asm_32
    3993945U,	// VST4LNqWB_register_Asm_16
    4125017U,	// VST4LNqWB_register_Asm_32
    96641369U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    264474969U,	// VST4d16_UPD
    96772441U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    264606041U,	// VST4d32_UPD
    96903513U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    264737113U,	// VST4d8_UPD
    2856079705U,	// VST4dAsm_16
    2856210777U,	// VST4dAsm_32
    2854900057U,	// VST4dAsm_8
    2856079705U,	// VST4dWB_fixed_Asm_16
    2856210777U,	// VST4dWB_fixed_Asm_32
    2854900057U,	// VST4dWB_fixed_Asm_8
    2856083801U,	// VST4dWB_register_Asm_16
    2856214873U,	// VST4dWB_register_Asm_32
    2854904153U,	// VST4dWB_register_Asm_8
    96641369U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    264474969U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    96772441U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    264606041U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    96903513U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    264737113U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    792482137U,	// VST4qAsm_16
    792613209U,	// VST4qAsm_32
    791302489U,	// VST4qAsm_8
    792482137U,	// VST4qWB_fixed_Asm_16
    792613209U,	// VST4qWB_fixed_Asm_32
    791302489U,	// VST4qWB_fixed_Asm_8
    255615321U,	// VST4qWB_register_Asm_16
    255746393U,	// VST4qWB_register_Asm_32
    254435673U,	// VST4qWB_register_Asm_8
    3833610974U,	// VSTMDDB_UPD
    29303U,	// VSTMDIA
    3833610871U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    3833610974U,	// VSTMSDB_UPD
    29303U,	// VSTMSIA
    3833610871U,	// VSTMSIA_UPD
    22147U,	// VSTRD
    22147U,	// VSTRS
    1107972938U,	// VSUBD
    77747601U,	// VSUBHNv2i32
    77878673U,	// VSUBHNv4i16
    78009745U,	// VSUBHNv8i8
    76961016U,	// VSUBLsv2i64
    77092088U,	// VSUBLsv4i32
    77223160U,	// VSUBLsv8i16
    77354232U,	// VSUBLuv2i64
    77485304U,	// VSUBLuv4i32
    77616376U,	// VSUBLuv8i16
    1108104010U,	// VSUBS
    76961731U,	// VSUBWsv2i64
    77092803U,	// VSUBWsv4i32
    77223875U,	// VSUBWsv8i16
    77354947U,	// VSUBWuv2i64
    77486019U,	// VSUBWuv4i32
    77617091U,	// VSUBWuv8i16
    1108104010U,	// VSUBfd
    1108104010U,	// VSUBfq
    78140234U,	// VSUBv16i8
    77747018U,	// VSUBv1i64
    77878090U,	// VSUBv2i32
    77747018U,	// VSUBv2i64
    78009162U,	// VSUBv4i16
    77878090U,	// VSUBv4i32
    78009162U,	// VSUBv8i16
    78140234U,	// VSUBv8i8
    26151U,	// VSWPd
    26151U,	// VSWPq
    2774259U,	// VTBL1
    2774259U,	// VTBL2
    2774259U,	// VTBL3
    0U,	// VTBL3Pseudo
    2774259U,	// VTBL4
    0U,	// VTBL4Pseudo
    2779136U,	// VTBX1
    2779136U,	// VTBX2
    2779136U,	// VTBX3
    0U,	// VTBX3Pseudo
    2779136U,	// VTBX4
    0U,	// VTBX4Pseudo
    5920643U,	// VTOSHD
    6051715U,	// VTOSHS
    140396168U,	// VTOSIRD
    137643656U,	// VTOSIRS
    140396419U,	// VTOSIZD
    137643907U,	// VTOSIZS
    39737219U,	// VTOSLD
    36984707U,	// VTOSLS
    6313859U,	// VTOUHD
    6444931U,	// VTOUHS
    140789384U,	// VTOUIRD
    137774728U,	// VTOUIRS
    140789635U,	// VTOUIZD
    137774979U,	// VTOUIZS
    40130435U,	// VTOULD
    37115779U,	// VTOULS
    3958231U,	// VTRNd16
    4089303U,	// VTRNd32
    2778583U,	// VTRNd8
    3958231U,	// VTRNq16
    4089303U,	// VTRNq32
    2778583U,	// VTRNq8
    2774882U,	// VTSTv16i8
    4085602U,	// VTSTv2i32
    3954530U,	// VTSTv4i16
    4085602U,	// VTSTv4i32
    3954530U,	// VTSTv8i16
    2774882U,	// VTSTv8i8
    6707075U,	// VUHTOD
    6838147U,	// VUHTOS
    141182851U,	// VUITOD
    138037123U,	// VUITOS
    40523651U,	// VULTOD
    37377923U,	// VULTOS
    3958316U,	// VUZPd16
    2778668U,	// VUZPd8
    3958316U,	// VUZPq16
    4089388U,	// VUZPq32
    2778668U,	// VUZPq8
    3958288U,	// VZIPd16
    2778640U,	// VZIPd8
    3958288U,	// VZIPq16
    4089360U,	// VZIPq32
    2778640U,	// VZIPq8
    29278U,	// sysLDMDA
    3833610846U,	// sysLDMDA_UPD
    29400U,	// sysLDMDB
    3833610968U,	// sysLDMDB_UPD
    30081U,	// sysLDMIA
    3833611649U,	// sysLDMIA_UPD
    29419U,	// sysLDMIB
    3833610987U,	// sysLDMIB_UPD
    29284U,	// sysSTMDA
    3833610852U,	// sysSTMDA_UPD
    29407U,	// sysSTMDB
    3833610975U,	// sysSTMDB_UPD
    30085U,	// sysSTMIA
    3833611653U,	// sysSTMIA_UPD
    29425U,	// sysSTMIB
    3833610993U,	// sysSTMIB_UPD
    0U,	// t2ABS
    4975U,	// t2ADCri
    7082863U,	// t2ADCrr
    7086959U,	// t2ADCrs
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    7082924U,	// t2ADDri
    22474U,	// t2ADDri12
    7082924U,	// t2ADDrr
    7087020U,	// t2ADDrs
    7095877U,	// t2ADR
    5095U,	// t2ANDri
    7082983U,	// t2ANDrr
    7087079U,	// t2ANDrs
    7083635U,	// t2ASRri
    7083635U,	// t2ASRrr
    543978159U,	// t2B
    21367U,	// t2BFC
    25760U,	// t2BFI
    4988U,	// t2BICri
    7082876U,	// t2BICrr
    7086972U,	// t2BICrs
    0U,	// t2BR_JT
    536900790U,	// t2BXJ
    543978159U,	// t2Bcc
    17346586U,	// t2CDP2
    301111U,	// t2CLREX
    18546U,	// t2CLZ
    7095730U,	// t2CMNri
    7095730U,	// t2CMNzrr
    7099826U,	// t2CMNzrs
    7095830U,	// t2CMPri
    7095830U,	// t2CMPrr
    7099926U,	// t2CMPrs
    295063U,	// t2CPS1p
    569165501U,	// t2CPS2p
    32294589U,	// t2CPS3p
    536900669U,	// t2DBG
    53321U,	// t2DMB
    53326U,	// t2DSB
    5729U,	// t2EORri
    7083617U,	// t2EORrr
    7087713U,	// t2EORrs
    536901448U,	// t2HINT
    53331U,	// t2ISB
    42002230U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    3229639866U,	// t2LDC2L_OFFSET
    3229639866U,	// t2LDC2L_OPTION
    3229639866U,	// t2LDC2L_POST
    3229639866U,	// t2LDC2L_PRE
    3229638959U,	// t2LDC2_OFFSET
    3229638959U,	// t2LDC2_OPTION
    3229638959U,	// t2LDC2_POST
    3229638959U,	// t2LDC2_PRE
    3229639934U,	// t2LDCL_OFFSET
    3229639934U,	// t2LDCL_OPTION
    3229639934U,	// t2LDCL_POST
    3229639934U,	// t2LDCL_PRE
    3229639539U,	// t2LDC_OFFSET
    3229639539U,	// t2LDC_OPTION
    3229639539U,	// t2LDC_POST
    3229639539U,	// t2LDC_PRE
    29400U,	// t2LDMDB
    3833610968U,	// t2LDMDB_UPD
    7107969U,	// t2LDMIA
    0U,	// t2LDMIA_RET
    3840689537U,	// t2LDMIA_UPD
    22275U,	// t2LDRBT
    25340U,	// t2LDRB_POST
    25340U,	// t2LDRB_PRE
    7099132U,	// t2LDRBi12
    21244U,	// t2LDRBi8
    7095036U,	// t2LDRBpci
    148220U,	// t2LDRBpcrel
    7103228U,	// t2LDRBs
    62443U,	// t2LDRD_POST
    62443U,	// t2LDRD_PRE
    25579U,	// t2LDRDi8
    22577U,	// t2LDREX
    17245U,	// t2LDREXB
    21505U,	// t2LDREXD
    17554U,	// t2LDREXH
    22305U,	// t2LDRHT
    25709U,	// t2LDRH_POST
    25709U,	// t2LDRH_PRE
    7099501U,	// t2LDRHi12
    21613U,	// t2LDRHi8
    7095405U,	// t2LDRHpci
    148589U,	// t2LDRHpcrel
    7103597U,	// t2LDRHs
    22287U,	// t2LDRSBT
    25350U,	// t2LDRSB_POST
    25350U,	// t2LDRSB_PRE
    7099142U,	// t2LDRSBi12
    21254U,	// t2LDRSBi8
    7095046U,	// t2LDRSBpci
    148230U,	// t2LDRSBpcrel
    7103238U,	// t2LDRSBs
    22317U,	// t2LDRSHT
    25719U,	// t2LDRSH_POST
    25719U,	// t2LDRSH_PRE
    7099511U,	// t2LDRSHi12
    21623U,	// t2LDRSHi8
    7095415U,	// t2LDRSHpci
    148599U,	// t2LDRSHpcrel
    7103607U,	// t2LDRSHs
    22354U,	// t2LDRT
    26186U,	// t2LDR_POST
    26186U,	// t2LDR_PRE
    7099978U,	// t2LDRi12
    22090U,	// t2LDRi8
    7095882U,	// t2LDRpci
    0U,	// t2LDRpci_pic
    149066U,	// t2LDRpcrel
    7104074U,	// t2LDRs
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    7083360U,	// t2LSLri
    7083360U,	// t2LSLrr
    7083642U,	// t2LSRri
    7083642U,	// t2LSRrr
    92844172U,	// t2MCR
    92844064U,	// t2MCR2
    92844177U,	// t2MCRR
    92844070U,	// t2MCRR2
    25222U,	// t2MLA
    26272U,	// t2MLS
    7104115U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    22484U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    7103840U,	// t2MOVCClsl
    7104122U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    7104101U,	// t2MOVCCror
    153304U,	// t2MOVSsi
    157400U,	// t2MOVSsr
    22408U,	// t2MOVTi16
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_dyn
    0U,	// t2MOV_ga_pcrel
    7145407U,	// t2MOVi
    18388U,	// t2MOVi16
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    7145407U,	// t2MOVr
    153535U,	// t2MOVsi
    157631U,	// t2MOVsr
    7096006U,	// t2MOVsra_flag
    7096011U,	// t2MOVsrl_flag
    69720U,	// t2MRC
    69639U,	// t2MRC2
    92844125U,	// t2MRRC
    92844045U,	// t2MRRC2
    30402U,	// t2MRS_AR
    18114U,	// t2MRS_M
    536901314U,	// t2MRSsys_AR
    109069951U,	// t2MSR_AR
    109069951U,	// t2MSR_M
    21868U,	// t2MUL
    22006U,	// t2MVNCCi
    67062U,	// t2MVNi
    7144950U,	// t2MVNr
    7083510U,	// t2MVNs
    5587U,	// t2ORNri
    5587U,	// t2ORNrr
    9683U,	// t2ORNrs
    5743U,	// t2ORRri
    7083631U,	// t2ORRrr
    7087727U,	// t2ORRrs
    26350U,	// t2PKHBT
    25363U,	// t2PKHTB
    394282959U,	// t2PLDWi12
    402671567U,	// t2PLDWi8
    411064271U,	// t2PLDWs
    394281947U,	// t2PLDi12
    402670555U,	// t2PLDi8
    411063259U,	// t2PLDs
    394282152U,	// t2PLIi12
    402670760U,	// t2PLIi8
    411063464U,	// t2PLIs
    21444U,	// t2QADD
    20915U,	// t2QADD16
    21018U,	// t2QADD8
    22626U,	// t2QASX
    21418U,	// t2QDADD
    21304U,	// t2QDSUB
    22513U,	// t2QSAX
    21317U,	// t2QSUB
    20877U,	// t2QSUB16
    20979U,	// t2QSUB8
    18228U,	// t2RBIT
    7096231U,	// t2REV
    7094743U,	// t2REV16
    7095426U,	// t2REVSH
    536900305U,	// t2RFEDB
    536900305U,	// t2RFEDBW
    536900202U,	// t2RFEIA
    536900202U,	// t2RFEIAW
    7083621U,	// t2RORri
    7083621U,	// t2RORrr
    67665U,	// t2RRX
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    7082760U,	// t2RSBri
    4872U,	// t2RSBrr
    8968U,	// t2RSBrs
    20922U,	// t2SADD16
    21024U,	// t2SADD8
    22631U,	// t2SASX
    4971U,	// t2SBCri
    7082859U,	// t2SBCrr
    7086955U,	// t2SBCrs
    26691U,	// t2SBFX
    22447U,	// t2SDIV
    21787U,	// t2SEL
    20898U,	// t2SHADD16
    21003U,	// t2SHADD8
    22613U,	// t2SHASX
    22500U,	// t2SHSAX
    20860U,	// t2SHSUB16
    20964U,	// t2SHSUB8
    536900480U,	// t2SMC
    25271U,	// t2SMLABB
    26343U,	// t2SMLABT
    25497U,	// t2SMLAD
    26629U,	// t2SMLADX
    42209U,	// t2SMLAL
    25278U,	// t2SMLALBB
    26356U,	// t2SMLALBT
    25550U,	// t2SMLALD
    26643U,	// t2SMLALDX
    25369U,	// t2SMLALTB
    26478U,	// t2SMLALTT
    25356U,	// t2SMLATB
    26471U,	// t2SMLATT
    25423U,	// t2SMLAWB
    26509U,	// t2SMLAWT
    25589U,	// t2SMLSD
    26659U,	// t2SMLSDX
    25567U,	// t2SMLSLD
    26651U,	// t2SMLSLDX
    25220U,	// t2SMMLA
    26170U,	// t2SMMLAR
    26270U,	// t2SMMLS
    26231U,	// t2SMMLSR
    21866U,	// t2SMMUL
    22105U,	// t2SMMULR
    21407U,	// t2SMUAD
    22540U,	// t2SMUADX
    21190U,	// t2SMULBB
    22268U,	// t2SMULBT
    25925U,	// t2SMULL
    21281U,	// t2SMULTB
    22390U,	// t2SMULTT
    21334U,	// t2SMULWB
    22420U,	// t2SMULWT
    21499U,	// t2SMUSD
    22570U,	// t2SMUSDX
    7238373U,	// t2SRSDB
    7369445U,	// t2SRSDB_UPD
    7238270U,	// t2SRSIA
    7369342U,	// t2SRSIA_UPD
    26333U,	// t2SSAT
    20936U,	// t2SSAT16
    22518U,	// t2SSAX
    20884U,	// t2SSUB16
    20985U,	// t2SSUB8
    3229639872U,	// t2STC2L_OFFSET
    3229639872U,	// t2STC2L_OPTION
    3229639872U,	// t2STC2L_POST
    3229639872U,	// t2STC2L_PRE
    3229638964U,	// t2STC2_OFFSET
    3229638964U,	// t2STC2_OPTION
    3229638964U,	// t2STC2_POST
    3229638964U,	// t2STC2_PRE
    3229639939U,	// t2STCL_OFFSET
    3229639939U,	// t2STCL_OPTION
    3229639939U,	// t2STCL_POST
    3229639939U,	// t2STCL_PRE
    3229639569U,	// t2STC_OFFSET
    3229639569U,	// t2STC_OPTION
    3229639569U,	// t2STC_POST
    3229639569U,	// t2STC_PRE
    29407U,	// t2STMDB
    3833610975U,	// t2STMDB_UPD
    7107973U,	// t2STMIA
    3840689541U,	// t2STMIA_UPD
    22281U,	// t2STRBT
    75522817U,	// t2STRB_POST
    75522817U,	// t2STRB_PRE
    0U,	// t2STRB_preidx
    7099137U,	// t2STRBi12
    21249U,	// t2STRBi8
    7103233U,	// t2STRBs
    75559920U,	// t2STRD_POST
    75559920U,	// t2STRD_PRE
    25584U,	// t2STRDi8
    26685U,	// t2STREX
    21348U,	// t2STREXB
    25608U,	// t2STREXD
    21657U,	// t2STREXH
    22311U,	// t2STRHT
    75523186U,	// t2STRH_POST
    75523186U,	// t2STRH_PRE
    0U,	// t2STRH_preidx
    7099506U,	// t2STRHi12
    21618U,	// t2STRHi8
    7103602U,	// t2STRHs
    22365U,	// t2STRT
    75523716U,	// t2STR_POST
    75523716U,	// t2STR_PRE
    0U,	// t2STR_preidx
    7100036U,	// t2STRi12
    22148U,	// t2STRi8
    7104132U,	// t2STRs
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    7082810U,	// t2SUBri
    22468U,	// t2SUBri12
    7082810U,	// t2SUBrr
    7086906U,	// t2SUBrs
    25259U,	// t2SXTAB
    24926U,	// t2SXTAB16
    25676U,	// t2SXTAH
    7099182U,	// t2SXTB
    20846U,	// t2SXTB16
    7099528U,	// t2SXTH
    419447501U,	// t2TBB
    0U,	// t2TBB_JT
    427836504U,	// t2TBH
    0U,	// t2TBH_JT
    7095862U,	// t2TEQri
    7095862U,	// t2TEQrr
    7099958U,	// t2TEQrs
    7096163U,	// t2TSTri
    7096163U,	// t2TSTrr
    7100259U,	// t2TSTrs
    20929U,	// t2UADD16
    21030U,	// t2UADD8
    22636U,	// t2UASX
    26696U,	// t2UBFX
    22452U,	// t2UDIV
    20906U,	// t2UHADD16
    21010U,	// t2UHADD8
    22619U,	// t2UHASX
    22506U,	// t2UHSAX
    20868U,	// t2UHSUB16
    20971U,	// t2UHSUB8
    25798U,	// t2UMAAL
    42215U,	// t2UMLAL
    25931U,	// t2UMULL
    20914U,	// t2UQADD16
    21017U,	// t2UQADD8
    22625U,	// t2UQASX
    22512U,	// t2UQSAX
    20876U,	// t2UQSUB16
    20978U,	// t2UQSUB8
    20997U,	// t2USAD8
    25053U,	// t2USADA8
    26338U,	// t2USAT
    20943U,	// t2USAT16
    22523U,	// t2USAX
    20891U,	// t2USUB16
    20991U,	// t2USUB8
    25265U,	// t2UXTAB
    24934U,	// t2UXTAB16
    25682U,	// t2UXTAH
    7099187U,	// t2UXTB
    20853U,	// t2UXTB16
    7099533U,	// t2UXTH
    443790191U,	// tADC
    21420U,	// tADDhirr
    99857324U,	// tADDi3
    443790252U,	// tADDi8
    21420U,	// tADDrSP
    21420U,	// tADDrSPi
    99857324U,	// tADDrr
    21420U,	// tADDspi
    21420U,	// tADDspr
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    17989U,	// tADR
    443790311U,	// tAND
    99858035U,	// tASRri
    443790963U,	// tASRrr
    536900271U,	// tB
    443790204U,	// tBIC
    295074U,	// tBKPT
    629183733U,	// tBL
    629184589U,	// tBLXi
    629184589U,	// tBLXr
    0U,	// tBRIND
    0U,	// tBR_JTr
    536901634U,	// tBX
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    536900271U,	// tBcc
    0U,	// tBfar
    7635132U,	// tCBNZ
    7635127U,	// tCBZ
    17346695U,	// tCDP
    17842U,	// tCMNz
    17942U,	// tCMPhir
    17942U,	// tCMPi8
    17942U,	// tCMPr
    562218685U,	// tCPS
    443790945U,	// tEOR
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    30081U,	// tLDMIA
    0U,	// tLDMIA_UPD
    21244U,	// tLDRBi
    21244U,	// tLDRBr
    21613U,	// tLDRHi
    21613U,	// tLDRHr
    21254U,	// tLDRSB
    21623U,	// tLDRSH
    22090U,	// tLDRi
    7751242U,	// tLDRpci
    17994U,	// tLDRpciASM
    0U,	// tLDRpci_pic
    22090U,	// tLDRr
    22090U,	// tLDRspi
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    99857760U,	// tLSLri
    443790688U,	// tLSLrr
    99858042U,	// tLSRri
    443790970U,	// tLSRrr
    0U,	// tMOVCCr_pseudo
    7635100U,	// tMOVSr
    142194623U,	// tMOVi8
    18367U,	// tMOVr
    99857772U,	// tMUL
    142194166U,	// tMVN
    300570U,	// tNOP
    443790959U,	// tORR
    0U,	// tPICADD
    444634654U,	// tPOP
    0U,	// tPOP_RET
    444634237U,	// tPUSH
    18343U,	// tREV
    16855U,	// tREV16
    17538U,	// tREVSH
    443790949U,	// tROR
    133804808U,	// tRSB
    443790187U,	// tSBC
    82024U,	// tSETEND
    300971U,	// tSEV
    3833611653U,	// tSTMIA_UPD
    21249U,	// tSTRBi
    21249U,	// tSTRBr
    21618U,	// tSTRHi
    21618U,	// tSTRHr
    22148U,	// tSTRi
    22148U,	// tSTRr
    22148U,	// tSTRspi
    99857210U,	// tSUBi3
    443790138U,	// tSUBi8
    99857210U,	// tSUBrr
    21306U,	// tSUBspi
    536900501U,	// tSVC
    17198U,	// tSXTB
    17544U,	// tSXTH
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTPsoft
    1543U,	// tTRAP
    18275U,	// tTST
    17203U,	// tUXTB
    17549U,	// tUXTH
    300047U,	// tWFE
    300196U,	// tWFI
    299989U,	// tYIELD
    0U
  };

  static const uint32_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// ABS
    0U,	// ADCri
    0U,	// ADCrr
    8192U,	// ADCrsi
    0U,	// ADCrsr
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADDri
    0U,	// ADDrr
    8192U,	// ADDrsi
    0U,	// ADDrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    4U,	// ADR
    0U,	// ANDri
    0U,	// ANDrr
    8192U,	// ANDrsi
    0U,	// ANDrsr
    0U,	// ASRi
    0U,	// ASRr
    0U,	// ATOMADD6432
    0U,	// ATOMAND6432
    0U,	// ATOMCMPXCHG6432
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATOMMAX6432
    0U,	// ATOMMIN6432
    0U,	// ATOMNAND6432
    0U,	// ATOMOR6432
    0U,	// ATOMSUB6432
    0U,	// ATOMSWAP6432
    0U,	// ATOMUMAX6432
    0U,	// ATOMUMIN6432
    0U,	// ATOMXOR6432
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    8U,	// BFC
    16396U,	// BFI
    0U,	// BICri
    0U,	// BICrr
    8192U,	// BICrsi
    0U,	// BICrsr
    0U,	// BKPT
    0U,	// BL
    0U,	// BLX
    0U,	// BLX_pred
    0U,	// BLXi
    0U,	// BL_pred
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm
    0U,	// BR_JTr
    0U,	// BX
    0U,	// BXJ
    0U,	// BX_CALL
    0U,	// BX_RET
    0U,	// BX_pred
    0U,	// Bcc
    272U,	// CDP
    0U,	// CDP2
    0U,	// CLREX
    512U,	// CLZ
    512U,	// CMNri
    512U,	// CMNzrr
    20U,	// CMNzrsi
    24U,	// CMNzrsr
    512U,	// CMPri
    512U,	// CMPrr
    20U,	// CMPrsi
    24U,	// CMPrsr
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    0U,	// CPS1p
    0U,	// CPS2p
    524U,	// CPS3p
    0U,	// DBG
    0U,	// DMB
    0U,	// DSB
    0U,	// EORri
    0U,	// EORrr
    8192U,	// EORrsi
    0U,	// EORrsr
    0U,	// FCONSTD
    0U,	// FCONSTS
    0U,	// FMSTAT
    0U,	// HINT
    0U,	// ISB
    0U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// LDC2L_OFFSET
    0U,	// LDC2L_OPTION
    0U,	// LDC2L_POST
    0U,	// LDC2L_PRE
    0U,	// LDC2_OFFSET
    0U,	// LDC2_OPTION
    0U,	// LDC2_POST
    0U,	// LDC2_PRE
    540U,	// LDCL_OFFSET
    24608U,	// LDCL_OPTION
    32800U,	// LDCL_POST
    36U,	// LDCL_PRE
    540U,	// LDC_OFFSET
    24608U,	// LDC_OPTION
    32800U,	// LDC_POST
    36U,	// LDC_PRE
    552U,	// LDMDA
    44U,	// LDMDA_UPD
    552U,	// LDMDB
    44U,	// LDMDB_UPD
    552U,	// LDMIA
    0U,	// LDMIA_RET
    44U,	// LDMIA_UPD
    552U,	// LDMIB
    44U,	// LDMIB_UPD
    40992U,	// LDRBT_POST_IMM
    40992U,	// LDRBT_POST_REG
    40992U,	// LDRB_POST_IMM
    40992U,	// LDRB_POST_REG
    48U,	// LDRB_PRE_IMM
    52U,	// LDRB_PRE_REG
    56U,	// LDRBi12
    60U,	// LDRBrs
    49152U,	// LDRD
    581632U,	// LDRD_POST
    65536U,	// LDRD_PRE
    64U,	// LDREX
    64U,	// LDREXB
    0U,	// LDREXD
    64U,	// LDREXH
    68U,	// LDRH
    73760U,	// LDRHTi
    81952U,	// LDRHTr
    90144U,	// LDRH_POST
    72U,	// LDRH_PRE
    68U,	// LDRSB
    73760U,	// LDRSBTi
    81952U,	// LDRSBTr
    90144U,	// LDRSB_POST
    72U,	// LDRSB_PRE
    68U,	// LDRSH
    73760U,	// LDRSHTi
    81952U,	// LDRSHTr
    90144U,	// LDRSH_POST
    72U,	// LDRSH_PRE
    40992U,	// LDRT_POST_IMM
    40992U,	// LDRT_POST_REG
    40992U,	// LDR_POST_IMM
    40992U,	// LDR_POST_REG
    48U,	// LDR_PRE_IMM
    52U,	// LDR_PRE_REG
    56U,	// LDRcp
    56U,	// LDRi12
    60U,	// LDRrs
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    0U,	// LSLi
    0U,	// LSLr
    0U,	// LSRi
    0U,	// LSRr
    1147664U,	// MCR
    76U,	// MCR2
    1671952U,	// MCRR
    106576U,	// MCRR2
    8912896U,	// MLA
    0U,	// MLAv5
    8912896U,	// MLS
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCLR
    0U,	// MOVPCRX
    524U,	// MOVTi16
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_dyn
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    512U,	// MOVi
    512U,	// MOVi16
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    512U,	// MOVr
    512U,	// MOVr_TC
    20U,	// MOVsi
    24U,	// MOVsr
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MRC
    0U,	// MRC2
    1671952U,	// MRRC
    106576U,	// MRRC2
    1U,	// MRS
    1U,	// MRSsys
    0U,	// MSR
    0U,	// MSRi
    0U,	// MUL
    0U,	// MULv5
    0U,	// MVNCCi
    512U,	// MVNi
    512U,	// MVNr
    20U,	// MVNsi
    24U,	// MVNsr
    0U,	// ORRri
    0U,	// ORRrr
    8192U,	// ORRrsi
    0U,	// ORRrsr
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    2097152U,	// PKHBT
    2621440U,	// PKHTB
    0U,	// PLDWi12
    0U,	// PLDWrs
    0U,	// PLDi12
    0U,	// PLDrs
    0U,	// PLIi12
    0U,	// PLIrs
    0U,	// QADD
    0U,	// QADD16
    0U,	// QADD8
    0U,	// QASX
    0U,	// QDADD
    0U,	// QDSUB
    0U,	// QSAX
    0U,	// QSUB
    0U,	// QSUB16
    0U,	// QSUB8
    512U,	// RBIT
    512U,	// REV
    512U,	// REV16
    512U,	// REVSH
    0U,	// RFEDA
    0U,	// RFEDA_UPD
    0U,	// RFEDB
    0U,	// RFEDB_UPD
    0U,	// RFEIA
    0U,	// RFEIA_UPD
    0U,	// RFEIB
    0U,	// RFEIB_UPD
    0U,	// RORi
    0U,	// RORr
    0U,	// RRX
    512U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// RSBri
    0U,	// RSBrr
    8192U,	// RSBrsi
    0U,	// RSBrsr
    0U,	// RSCri
    0U,	// RSCrr
    8192U,	// RSCrsi
    0U,	// RSCrsr
    0U,	// SADD16
    0U,	// SADD8
    0U,	// SASX
    0U,	// SBCri
    0U,	// SBCrr
    8192U,	// SBCrsi
    0U,	// SBCrsr
    17301504U,	// SBFX
    0U,	// SDIV
    0U,	// SEL
    0U,	// SETEND
    0U,	// SHADD16
    0U,	// SHADD8
    0U,	// SHASX
    0U,	// SHSAX
    0U,	// SHSUB16
    0U,	// SHSUB8
    0U,	// SMC
    8912896U,	// SMLABB
    8912896U,	// SMLABT
    8912896U,	// SMLAD
    8912896U,	// SMLADX
    0U,	// SMLAL
    8912896U,	// SMLALBB
    8912896U,	// SMLALBT
    8912896U,	// SMLALD
    8912896U,	// SMLALDX
    8912896U,	// SMLALTB
    8912896U,	// SMLALTT
    0U,	// SMLALv5
    8912896U,	// SMLATB
    8912896U,	// SMLATT
    8912896U,	// SMLAWB
    8912896U,	// SMLAWT
    8912896U,	// SMLSD
    8912896U,	// SMLSDX
    8912896U,	// SMLSLD
    8912896U,	// SMLSLDX
    8912896U,	// SMMLA
    8912896U,	// SMMLAR
    8912896U,	// SMMLS
    8912896U,	// SMMLSR
    0U,	// SMMUL
    0U,	// SMMULR
    0U,	// SMUAD
    0U,	// SMUADX
    0U,	// SMULBB
    0U,	// SMULBT
    8912896U,	// SMULL
    0U,	// SMULLv5
    0U,	// SMULTB
    0U,	// SMULTT
    0U,	// SMULWB
    0U,	// SMULWT
    0U,	// SMUSD
    0U,	// SMUSDX
    0U,	// SRSDA
    0U,	// SRSDA_UPD
    0U,	// SRSDB
    0U,	// SRSDB_UPD
    0U,	// SRSIA
    0U,	// SRSIA_UPD
    0U,	// SRSIB
    0U,	// SRSIB_UPD
    1108U,	// SSAT
    596U,	// SSAT16
    0U,	// SSAX
    0U,	// SSUB16
    0U,	// SSUB8
    0U,	// STC2L_OFFSET
    0U,	// STC2L_OPTION
    0U,	// STC2L_POST
    0U,	// STC2L_PRE
    0U,	// STC2_OFFSET
    0U,	// STC2_OPTION
    0U,	// STC2_POST
    0U,	// STC2_PRE
    540U,	// STCL_OFFSET
    24608U,	// STCL_OPTION
    32800U,	// STCL_POST
    36U,	// STCL_PRE
    540U,	// STC_OFFSET
    24608U,	// STC_OPTION
    32800U,	// STC_POST
    36U,	// STC_PRE
    552U,	// STMDA
    44U,	// STMDA_UPD
    552U,	// STMDB
    44U,	// STMDB_UPD
    552U,	// STMIA
    44U,	// STMIA_UPD
    552U,	// STMIB
    44U,	// STMIB_UPD
    40992U,	// STRBT_POST_IMM
    40992U,	// STRBT_POST_REG
    40992U,	// STRB_POST_IMM
    40992U,	// STRB_POST_REG
    48U,	// STRB_PRE_IMM
    52U,	// STRB_PRE_REG
    56U,	// STRBi12
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    60U,	// STRBrs
    49152U,	// STRD
    581644U,	// STRD_POST
    65548U,	// STRD_PRE
    114688U,	// STREX
    114688U,	// STREXB
    88U,	// STREXD
    114688U,	// STREXH
    68U,	// STRH
    73760U,	// STRHTi
    81952U,	// STRHTr
    90144U,	// STRH_POST
    72U,	// STRH_PRE
    0U,	// STRH_preidx
    40992U,	// STRT_POST_IMM
    40992U,	// STRT_POST_REG
    40992U,	// STR_POST_IMM
    40992U,	// STR_POST_REG
    48U,	// STR_PRE_IMM
    52U,	// STR_PRE_REG
    56U,	// STRi12
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    60U,	// STRrs
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// SUBri
    0U,	// SUBrr
    8192U,	// SUBrsi
    0U,	// SUBrsr
    0U,	// SVC
    114688U,	// SWP
    114688U,	// SWPB
    3145728U,	// SXTAB
    3145728U,	// SXTAB16
    3145728U,	// SXTAH
    1280U,	// SXTB
    1280U,	// SXTB16
    1280U,	// SXTH
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    512U,	// TEQri
    512U,	// TEQrr
    20U,	// TEQrsi
    24U,	// TEQrsr
    0U,	// TPsoft
    0U,	// TRAP
    0U,	// TRAPNaCl
    512U,	// TSTri
    512U,	// TSTrr
    20U,	// TSTrsi
    24U,	// TSTrsr
    0U,	// UADD16
    0U,	// UADD8
    0U,	// UASX
    17301504U,	// UBFX
    0U,	// UDIV
    0U,	// UHADD16
    0U,	// UHADD8
    0U,	// UHASX
    0U,	// UHSAX
    0U,	// UHSUB16
    0U,	// UHSUB8
    8912896U,	// UMAAL
    0U,	// UMAALv5
    0U,	// UMLAL
    0U,	// UMLALv5
    8912896U,	// UMULL
    0U,	// UMULLv5
    0U,	// UQADD16
    0U,	// UQADD8
    0U,	// UQASX
    0U,	// UQSAX
    0U,	// UQSUB16
    0U,	// UQSUB8
    0U,	// USAD8
    8912896U,	// USADA8
    3670016U,	// USAT
    0U,	// USAT16
    0U,	// USAX
    0U,	// USUB16
    0U,	// USUB8
    3145728U,	// UXTAB
    3145728U,	// UXTAB16
    3145728U,	// UXTAH
    1280U,	// UXTB
    1280U,	// UXTB16
    1280U,	// UXTH
    592U,	// VABALsv2i64
    592U,	// VABALsv4i32
    592U,	// VABALsv8i16
    592U,	// VABALuv2i64
    592U,	// VABALuv4i32
    592U,	// VABALuv8i16
    592U,	// VABAsv16i8
    592U,	// VABAsv2i32
    592U,	// VABAsv4i16
    592U,	// VABAsv4i32
    592U,	// VABAsv8i16
    592U,	// VABAsv8i8
    592U,	// VABAuv16i8
    592U,	// VABAuv2i32
    592U,	// VABAuv4i16
    592U,	// VABAuv4i32
    592U,	// VABAuv8i16
    592U,	// VABAuv8i8
    524U,	// VABDLsv2i64
    524U,	// VABDLsv4i32
    524U,	// VABDLsv8i16
    524U,	// VABDLuv2i64
    524U,	// VABDLuv4i32
    524U,	// VABDLuv8i16
    123664U,	// VABDfd
    123664U,	// VABDfq
    524U,	// VABDsv16i8
    524U,	// VABDsv2i32
    524U,	// VABDsv4i16
    524U,	// VABDsv4i32
    524U,	// VABDsv8i16
    524U,	// VABDsv8i8
    524U,	// VABDuv16i8
    524U,	// VABDuv2i32
    524U,	// VABDuv4i16
    524U,	// VABDuv4i32
    524U,	// VABDuv8i16
    524U,	// VABDuv8i8
    44U,	// VABSD
    44U,	// VABSS
    44U,	// VABSfd
    44U,	// VABSfq
    0U,	// VABSv16i8
    0U,	// VABSv2i32
    0U,	// VABSv4i16
    0U,	// VABSv4i32
    0U,	// VABSv8i16
    0U,	// VABSv8i8
    123664U,	// VACGEd
    123664U,	// VACGEq
    123664U,	// VACGTd
    123664U,	// VACGTq
    123664U,	// VADDD
    524U,	// VADDHNv2i32
    524U,	// VADDHNv4i16
    524U,	// VADDHNv8i8
    524U,	// VADDLsv2i64
    524U,	// VADDLsv4i32
    524U,	// VADDLsv8i16
    524U,	// VADDLuv2i64
    524U,	// VADDLuv4i32
    524U,	// VADDLuv8i16
    123664U,	// VADDS
    524U,	// VADDWsv2i64
    524U,	// VADDWsv4i32
    524U,	// VADDWsv8i16
    524U,	// VADDWuv2i64
    524U,	// VADDWuv4i32
    524U,	// VADDWuv8i16
    123664U,	// VADDfd
    123664U,	// VADDfq
    524U,	// VADDv16i8
    524U,	// VADDv1i64
    524U,	// VADDv2i32
    524U,	// VADDv2i64
    524U,	// VADDv4i16
    524U,	// VADDv4i32
    524U,	// VADDv8i16
    524U,	// VADDv8i8
    0U,	// VANDd
    0U,	// VANDq
    0U,	// VBICd
    0U,	// VBICiv2i32
    0U,	// VBICiv4i16
    0U,	// VBICiv4i32
    0U,	// VBICiv8i16
    0U,	// VBICq
    131084U,	// VBIFd
    131084U,	// VBIFq
    131084U,	// VBITd
    131084U,	// VBITq
    131084U,	// VBSLd
    131084U,	// VBSLq
    123664U,	// VCEQfd
    123664U,	// VCEQfq
    524U,	// VCEQv16i8
    524U,	// VCEQv2i32
    524U,	// VCEQv4i16
    524U,	// VCEQv4i32
    524U,	// VCEQv8i16
    524U,	// VCEQv8i8
    1U,	// VCEQzv16i8
    92U,	// VCEQzv2f32
    1U,	// VCEQzv2i32
    92U,	// VCEQzv4f32
    1U,	// VCEQzv4i16
    1U,	// VCEQzv4i32
    1U,	// VCEQzv8i16
    1U,	// VCEQzv8i8
    123664U,	// VCGEfd
    123664U,	// VCGEfq
    524U,	// VCGEsv16i8
    524U,	// VCGEsv2i32
    524U,	// VCGEsv4i16
    524U,	// VCGEsv4i32
    524U,	// VCGEsv8i16
    524U,	// VCGEsv8i8
    524U,	// VCGEuv16i8
    524U,	// VCGEuv2i32
    524U,	// VCGEuv4i16
    524U,	// VCGEuv4i32
    524U,	// VCGEuv8i16
    524U,	// VCGEuv8i8
    1U,	// VCGEzv16i8
    92U,	// VCGEzv2f32
    1U,	// VCGEzv2i32
    92U,	// VCGEzv4f32
    1U,	// VCGEzv4i16
    1U,	// VCGEzv4i32
    1U,	// VCGEzv8i16
    1U,	// VCGEzv8i8
    123664U,	// VCGTfd
    123664U,	// VCGTfq
    524U,	// VCGTsv16i8
    524U,	// VCGTsv2i32
    524U,	// VCGTsv4i16
    524U,	// VCGTsv4i32
    524U,	// VCGTsv8i16
    524U,	// VCGTsv8i8
    524U,	// VCGTuv16i8
    524U,	// VCGTuv2i32
    524U,	// VCGTuv4i16
    524U,	// VCGTuv4i32
    524U,	// VCGTuv8i16
    524U,	// VCGTuv8i8
    1U,	// VCGTzv16i8
    92U,	// VCGTzv2f32
    1U,	// VCGTzv2i32
    92U,	// VCGTzv4f32
    1U,	// VCGTzv4i16
    1U,	// VCGTzv4i32
    1U,	// VCGTzv8i16
    1U,	// VCGTzv8i8
    1U,	// VCLEzv16i8
    92U,	// VCLEzv2f32
    1U,	// VCLEzv2i32
    92U,	// VCLEzv4f32
    1U,	// VCLEzv4i16
    1U,	// VCLEzv4i32
    1U,	// VCLEzv8i16
    1U,	// VCLEzv8i8
    0U,	// VCLSv16i8
    0U,	// VCLSv2i32
    0U,	// VCLSv4i16
    0U,	// VCLSv4i32
    0U,	// VCLSv8i16
    0U,	// VCLSv8i8
    1U,	// VCLTzv16i8
    92U,	// VCLTzv2f32
    1U,	// VCLTzv2i32
    92U,	// VCLTzv4f32
    1U,	// VCLTzv4i16
    1U,	// VCLTzv4i32
    1U,	// VCLTzv8i16
    1U,	// VCLTzv8i8
    0U,	// VCLZv16i8
    0U,	// VCLZv2i32
    0U,	// VCLZv4i16
    0U,	// VCLZv4i32
    0U,	// VCLZv8i16
    0U,	// VCLZv8i8
    44U,	// VCMPD
    44U,	// VCMPED
    44U,	// VCMPES
    0U,	// VCMPEZD
    0U,	// VCMPEZS
    44U,	// VCMPS
    0U,	// VCMPZD
    0U,	// VCMPZS
    512U,	// VCNTd
    512U,	// VCNTq
    0U,	// VCVTBHS
    0U,	// VCVTBSH
    0U,	// VCVTDS
    0U,	// VCVTSD
    0U,	// VCVTTHS
    0U,	// VCVTTSH
    0U,	// VCVTf2h
    0U,	// VCVTf2sd
    0U,	// VCVTf2sq
    0U,	// VCVTf2ud
    0U,	// VCVTf2uq
    45U,	// VCVTf2xsd
    45U,	// VCVTf2xsq
    45U,	// VCVTf2xud
    45U,	// VCVTf2xuq
    0U,	// VCVTh2f
    0U,	// VCVTs2fd
    0U,	// VCVTs2fq
    0U,	// VCVTu2fd
    0U,	// VCVTu2fq
    45U,	// VCVTxs2fd
    45U,	// VCVTxs2fq
    45U,	// VCVTxu2fd
    45U,	// VCVTxu2fq
    123664U,	// VDIVD
    123664U,	// VDIVS
    512U,	// VDUP16d
    512U,	// VDUP16q
    512U,	// VDUP32d
    512U,	// VDUP32q
    512U,	// VDUP8d
    512U,	// VDUP8q
    1536U,	// VDUPLN16d
    1536U,	// VDUPLN16q
    1536U,	// VDUPLN32d
    1536U,	// VDUPLN32q
    1536U,	// VDUPLN8d
    1536U,	// VDUPLN8q
    0U,	// VDUPfdf
    0U,	// VDUPfqf
    0U,	// VEORd
    0U,	// VEORq
    8912896U,	// VEXTd16
    8912896U,	// VEXTd32
    8912896U,	// VEXTd8
    8912896U,	// VEXTq16
    8912896U,	// VEXTq32
    8912896U,	// VEXTq64
    8912896U,	// VEXTq8
    124689U,	// VFMAD
    124689U,	// VFMAS
    124689U,	// VFMAfd
    124689U,	// VFMAfq
    124689U,	// VFMSD
    124689U,	// VFMSS
    124689U,	// VFMSfd
    124689U,	// VFMSfq
    124689U,	// VFNMAD
    124689U,	// VFNMAS
    124689U,	// VFNMSD
    124689U,	// VFNMSS
    1536U,	// VGETLNi32
    1U,	// VGETLNs16
    1U,	// VGETLNs8
    1U,	// VGETLNu16
    1U,	// VGETLNu8
    524U,	// VHADDsv16i8
    524U,	// VHADDsv2i32
    524U,	// VHADDsv4i16
    524U,	// VHADDsv4i32
    524U,	// VHADDsv8i16
    524U,	// VHADDsv8i8
    524U,	// VHADDuv16i8
    524U,	// VHADDuv2i32
    524U,	// VHADDuv4i16
    524U,	// VHADDuv4i32
    524U,	// VHADDuv8i16
    524U,	// VHADDuv8i8
    524U,	// VHSUBsv16i8
    524U,	// VHSUBsv2i32
    524U,	// VHSUBsv4i16
    524U,	// VHSUBsv4i32
    524U,	// VHSUBsv8i16
    524U,	// VHSUBsv8i8
    524U,	// VHSUBuv16i8
    524U,	// VHSUBuv2i32
    524U,	// VHSUBuv4i16
    524U,	// VHSUBuv4i32
    524U,	// VHSUBuv8i16
    524U,	// VHSUBuv8i8
    45U,	// VLD1DUPd16
    97U,	// VLD1DUPd16wb_fixed
    2065U,	// VLD1DUPd16wb_register
    45U,	// VLD1DUPd32
    97U,	// VLD1DUPd32wb_fixed
    2065U,	// VLD1DUPd32wb_register
    45U,	// VLD1DUPd8
    97U,	// VLD1DUPd8wb_fixed
    2065U,	// VLD1DUPd8wb_register
    45U,	// VLD1DUPq16
    97U,	// VLD1DUPq16wb_fixed
    2065U,	// VLD1DUPq16wb_register
    45U,	// VLD1DUPq32
    97U,	// VLD1DUPq32wb_fixed
    2065U,	// VLD1DUPq32wb_register
    45U,	// VLD1DUPq8
    97U,	// VLD1DUPq8wb_fixed
    2065U,	// VLD1DUPq8wb_register
    141669U,	// VLD1LNd16
    149865U,	// VLD1LNd16_UPD
    141669U,	// VLD1LNd32
    149865U,	// VLD1LNd32_UPD
    141669U,	// VLD1LNd8
    149865U,	// VLD1LNd8_UPD
    620U,	// VLD1LNdAsm_16
    620U,	// VLD1LNdAsm_32
    620U,	// VLD1LNdAsm_8
    2668U,	// VLD1LNdWB_fixed_Asm_16
    2668U,	// VLD1LNdWB_fixed_Asm_32
    2668U,	// VLD1LNdWB_fixed_Asm_8
    155756U,	// VLD1LNdWB_register_Asm_16
    155756U,	// VLD1LNdWB_register_Asm_32
    155756U,	// VLD1LNdWB_register_Asm_8
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    45U,	// VLD1d16
    45U,	// VLD1d16Q
    97U,	// VLD1d16Qwb_fixed
    2065U,	// VLD1d16Qwb_register
    45U,	// VLD1d16T
    97U,	// VLD1d16Twb_fixed
    2065U,	// VLD1d16Twb_register
    97U,	// VLD1d16wb_fixed
    2065U,	// VLD1d16wb_register
    45U,	// VLD1d32
    45U,	// VLD1d32Q
    97U,	// VLD1d32Qwb_fixed
    2065U,	// VLD1d32Qwb_register
    45U,	// VLD1d32T
    97U,	// VLD1d32Twb_fixed
    2065U,	// VLD1d32Twb_register
    97U,	// VLD1d32wb_fixed
    2065U,	// VLD1d32wb_register
    45U,	// VLD1d64
    45U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    97U,	// VLD1d64Qwb_fixed
    2065U,	// VLD1d64Qwb_register
    45U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    97U,	// VLD1d64Twb_fixed
    2065U,	// VLD1d64Twb_register
    97U,	// VLD1d64wb_fixed
    2065U,	// VLD1d64wb_register
    45U,	// VLD1d8
    45U,	// VLD1d8Q
    97U,	// VLD1d8Qwb_fixed
    2065U,	// VLD1d8Qwb_register
    45U,	// VLD1d8T
    97U,	// VLD1d8Twb_fixed
    2065U,	// VLD1d8Twb_register
    97U,	// VLD1d8wb_fixed
    2065U,	// VLD1d8wb_register
    45U,	// VLD1q16
    97U,	// VLD1q16wb_fixed
    2065U,	// VLD1q16wb_register
    45U,	// VLD1q32
    97U,	// VLD1q32wb_fixed
    2065U,	// VLD1q32wb_register
    45U,	// VLD1q64
    97U,	// VLD1q64wb_fixed
    2065U,	// VLD1q64wb_register
    45U,	// VLD1q8
    97U,	// VLD1q8wb_fixed
    2065U,	// VLD1q8wb_register
    45U,	// VLD2DUPd16
    97U,	// VLD2DUPd16wb_fixed
    2065U,	// VLD2DUPd16wb_register
    45U,	// VLD2DUPd16x2
    97U,	// VLD2DUPd16x2wb_fixed
    2065U,	// VLD2DUPd16x2wb_register
    45U,	// VLD2DUPd32
    97U,	// VLD2DUPd32wb_fixed
    2065U,	// VLD2DUPd32wb_register
    45U,	// VLD2DUPd32x2
    97U,	// VLD2DUPd32x2wb_fixed
    2065U,	// VLD2DUPd32x2wb_register
    45U,	// VLD2DUPd8
    97U,	// VLD2DUPd8wb_fixed
    2065U,	// VLD2DUPd8wb_register
    45U,	// VLD2DUPd8x2
    97U,	// VLD2DUPd8x2wb_fixed
    2065U,	// VLD2DUPd8x2wb_register
    166761U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    175217U,	// VLD2LNd16_UPD
    166761U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    175217U,	// VLD2LNd32_UPD
    166761U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    175217U,	// VLD2LNd8_UPD
    620U,	// VLD2LNdAsm_16
    620U,	// VLD2LNdAsm_32
    620U,	// VLD2LNdAsm_8
    2668U,	// VLD2LNdWB_fixed_Asm_16
    2668U,	// VLD2LNdWB_fixed_Asm_32
    2668U,	// VLD2LNdWB_fixed_Asm_8
    155756U,	// VLD2LNdWB_register_Asm_16
    155756U,	// VLD2LNdWB_register_Asm_32
    155756U,	// VLD2LNdWB_register_Asm_8
    166761U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    175217U,	// VLD2LNq16_UPD
    166761U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    175217U,	// VLD2LNq32_UPD
    620U,	// VLD2LNqAsm_16
    620U,	// VLD2LNqAsm_32
    2668U,	// VLD2LNqWB_fixed_Asm_16
    2668U,	// VLD2LNqWB_fixed_Asm_32
    155756U,	// VLD2LNqWB_register_Asm_16
    155756U,	// VLD2LNqWB_register_Asm_32
    45U,	// VLD2b16
    97U,	// VLD2b16wb_fixed
    2065U,	// VLD2b16wb_register
    45U,	// VLD2b32
    97U,	// VLD2b32wb_fixed
    2065U,	// VLD2b32wb_register
    45U,	// VLD2b8
    97U,	// VLD2b8wb_fixed
    2065U,	// VLD2b8wb_register
    45U,	// VLD2d16
    97U,	// VLD2d16wb_fixed
    2065U,	// VLD2d16wb_register
    45U,	// VLD2d32
    97U,	// VLD2d32wb_fixed
    2065U,	// VLD2d32wb_register
    45U,	// VLD2d8
    97U,	// VLD2d8wb_fixed
    2065U,	// VLD2d8wb_register
    45U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    97U,	// VLD2q16wb_fixed
    2065U,	// VLD2q16wb_register
    45U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    97U,	// VLD2q32wb_fixed
    2065U,	// VLD2q32wb_register
    45U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    97U,	// VLD2q8wb_fixed
    2065U,	// VLD2q8wb_register
    3446U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    183926U,	// VLD3DUPd16_UPD
    3446U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    183926U,	// VLD3DUPd32_UPD
    3446U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    183926U,	// VLD3DUPd8_UPD
    0U,	// VLD3DUPdAsm_16
    0U,	// VLD3DUPdAsm_32
    0U,	// VLD3DUPdAsm_8
    2U,	// VLD3DUPdWB_fixed_Asm_16
    2U,	// VLD3DUPdWB_fixed_Asm_32
    2U,	// VLD3DUPdWB_fixed_Asm_8
    592U,	// VLD3DUPdWB_register_Asm_16
    592U,	// VLD3DUPdWB_register_Asm_32
    592U,	// VLD3DUPdWB_register_Asm_8
    3446U,	// VLD3DUPq16
    183926U,	// VLD3DUPq16_UPD
    3446U,	// VLD3DUPq32
    183926U,	// VLD3DUPq32_UPD
    3446U,	// VLD3DUPq8
    183926U,	// VLD3DUPq8_UPD
    0U,	// VLD3DUPqAsm_16
    0U,	// VLD3DUPqAsm_32
    0U,	// VLD3DUPqAsm_8
    2U,	// VLD3DUPqWB_fixed_Asm_16
    2U,	// VLD3DUPqWB_fixed_Asm_32
    2U,	// VLD3DUPqWB_fixed_Asm_8
    592U,	// VLD3DUPqWB_register_Asm_16
    592U,	// VLD3DUPqWB_register_Asm_32
    592U,	// VLD3DUPqWB_register_Asm_8
    191601U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    199033U,	// VLD3LNd16_UPD
    191601U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    199033U,	// VLD3LNd32_UPD
    191601U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    199033U,	// VLD3LNd8_UPD
    620U,	// VLD3LNdAsm_16
    620U,	// VLD3LNdAsm_32
    620U,	// VLD3LNdAsm_8
    2668U,	// VLD3LNdWB_fixed_Asm_16
    2668U,	// VLD3LNdWB_fixed_Asm_32
    2668U,	// VLD3LNdWB_fixed_Asm_8
    155756U,	// VLD3LNdWB_register_Asm_16
    155756U,	// VLD3LNdWB_register_Asm_32
    155756U,	// VLD3LNdWB_register_Asm_8
    191601U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    199033U,	// VLD3LNq16_UPD
    191601U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    199033U,	// VLD3LNq32_UPD
    620U,	// VLD3LNqAsm_16
    620U,	// VLD3LNqAsm_32
    2668U,	// VLD3LNqWB_fixed_Asm_16
    2668U,	// VLD3LNqWB_fixed_Asm_32
    155756U,	// VLD3LNqWB_register_Asm_16
    155756U,	// VLD3LNqWB_register_Asm_32
    29360128U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    37748736U,	// VLD3d16_UPD
    29360128U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    37748736U,	// VLD3d32_UPD
    29360128U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    37748736U,	// VLD3d8_UPD
    45U,	// VLD3dAsm_16
    45U,	// VLD3dAsm_32
    45U,	// VLD3dAsm_8
    97U,	// VLD3dWB_fixed_Asm_16
    97U,	// VLD3dWB_fixed_Asm_32
    97U,	// VLD3dWB_fixed_Asm_8
    124689U,	// VLD3dWB_register_Asm_16
    124689U,	// VLD3dWB_register_Asm_32
    124689U,	// VLD3dWB_register_Asm_8
    29360128U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    37748736U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    29360128U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    37748736U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    29360128U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    37748736U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    0U,	// VLD3qAsm_16
    0U,	// VLD3qAsm_32
    0U,	// VLD3qAsm_8
    2U,	// VLD3qWB_fixed_Asm_16
    2U,	// VLD3qWB_fixed_Asm_32
    2U,	// VLD3qWB_fixed_Asm_8
    592U,	// VLD3qWB_register_Asm_16
    592U,	// VLD3qWB_register_Asm_32
    592U,	// VLD3qWB_register_Asm_8
    126590U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    3966U,	// VLD4DUPd16_UPD
    126590U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    3966U,	// VLD4DUPd32_UPD
    126590U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    3966U,	// VLD4DUPd8_UPD
    0U,	// VLD4DUPdAsm_16
    0U,	// VLD4DUPdAsm_32
    0U,	// VLD4DUPdAsm_8
    2U,	// VLD4DUPdWB_fixed_Asm_16
    2U,	// VLD4DUPdWB_fixed_Asm_32
    2U,	// VLD4DUPdWB_fixed_Asm_8
    592U,	// VLD4DUPdWB_register_Asm_16
    592U,	// VLD4DUPdWB_register_Asm_32
    592U,	// VLD4DUPdWB_register_Asm_8
    126590U,	// VLD4DUPq16
    3966U,	// VLD4DUPq16_UPD
    126590U,	// VLD4DUPq32
    3966U,	// VLD4DUPq32_UPD
    126590U,	// VLD4DUPq8
    3966U,	// VLD4DUPq8_UPD
    0U,	// VLD4DUPqAsm_16
    0U,	// VLD4DUPqAsm_32
    0U,	// VLD4DUPqAsm_8
    2U,	// VLD4DUPqWB_fixed_Asm_16
    2U,	// VLD4DUPqWB_fixed_Asm_32
    2U,	// VLD4DUPqWB_fixed_Asm_8
    592U,	// VLD4DUPqWB_register_Asm_16
    592U,	// VLD4DUPqWB_register_Asm_32
    592U,	// VLD4DUPqWB_register_Asm_8
    46795641U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    129U,	// VLD4LNd16_UPD
    46795641U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    129U,	// VLD4LNd32_UPD
    46795641U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    129U,	// VLD4LNd8_UPD
    620U,	// VLD4LNdAsm_16
    620U,	// VLD4LNdAsm_32
    620U,	// VLD4LNdAsm_8
    2668U,	// VLD4LNdWB_fixed_Asm_16
    2668U,	// VLD4LNdWB_fixed_Asm_32
    2668U,	// VLD4LNdWB_fixed_Asm_8
    155756U,	// VLD4LNdWB_register_Asm_16
    155756U,	// VLD4LNdWB_register_Asm_32
    155756U,	// VLD4LNdWB_register_Asm_8
    46795641U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    129U,	// VLD4LNq16_UPD
    46795641U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    129U,	// VLD4LNq32_UPD
    620U,	// VLD4LNqAsm_16
    620U,	// VLD4LNqAsm_32
    2668U,	// VLD4LNqWB_fixed_Asm_16
    2668U,	// VLD4LNqWB_fixed_Asm_32
    155756U,	// VLD4LNqWB_register_Asm_16
    155756U,	// VLD4LNqWB_register_Asm_32
    143130624U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    411566080U,	// VLD4d16_UPD
    143130624U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    411566080U,	// VLD4d32_UPD
    143130624U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    411566080U,	// VLD4d8_UPD
    45U,	// VLD4dAsm_16
    45U,	// VLD4dAsm_32
    45U,	// VLD4dAsm_8
    97U,	// VLD4dWB_fixed_Asm_16
    97U,	// VLD4dWB_fixed_Asm_32
    97U,	// VLD4dWB_fixed_Asm_8
    124689U,	// VLD4dWB_register_Asm_16
    124689U,	// VLD4dWB_register_Asm_32
    124689U,	// VLD4dWB_register_Asm_8
    143130624U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    411566080U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    143130624U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    411566080U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    143130624U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    411566080U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    0U,	// VLD4qAsm_16
    0U,	// VLD4qAsm_32
    0U,	// VLD4qAsm_8
    2U,	// VLD4qWB_fixed_Asm_16
    2U,	// VLD4qWB_fixed_Asm_32
    2U,	// VLD4qWB_fixed_Asm_8
    592U,	// VLD4qWB_register_Asm_16
    592U,	// VLD4qWB_register_Asm_32
    592U,	// VLD4qWB_register_Asm_8
    44U,	// VLDMDDB_UPD
    552U,	// VLDMDIA
    44U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    44U,	// VLDMSDB_UPD
    552U,	// VLDMSIA
    44U,	// VLDMSIA_UPD
    132U,	// VLDRD
    132U,	// VLDRS
    123664U,	// VMAXfd
    123664U,	// VMAXfq
    524U,	// VMAXsv16i8
    524U,	// VMAXsv2i32
    524U,	// VMAXsv4i16
    524U,	// VMAXsv4i32
    524U,	// VMAXsv8i16
    524U,	// VMAXsv8i8
    524U,	// VMAXuv16i8
    524U,	// VMAXuv2i32
    524U,	// VMAXuv4i16
    524U,	// VMAXuv4i32
    524U,	// VMAXuv8i16
    524U,	// VMAXuv8i8
    123664U,	// VMINfd
    123664U,	// VMINfq
    524U,	// VMINsv16i8
    524U,	// VMINsv2i32
    524U,	// VMINsv4i16
    524U,	// VMINsv4i32
    524U,	// VMINsv8i16
    524U,	// VMINsv8i8
    524U,	// VMINuv16i8
    524U,	// VMINuv2i32
    524U,	// VMINuv4i16
    524U,	// VMINuv4i32
    524U,	// VMINuv8i16
    524U,	// VMINuv8i8
    124689U,	// VMLAD
    4176U,	// VMLALslsv2i32
    4176U,	// VMLALslsv4i16
    4176U,	// VMLALsluv2i32
    4176U,	// VMLALsluv4i16
    592U,	// VMLALsv2i64
    592U,	// VMLALsv4i32
    592U,	// VMLALsv8i16
    592U,	// VMLALuv2i64
    592U,	// VMLALuv4i32
    592U,	// VMLALuv8i16
    124689U,	// VMLAS
    124689U,	// VMLAfd
    124689U,	// VMLAfq
    206609U,	// VMLAslfd
    206609U,	// VMLAslfq
    4176U,	// VMLAslv2i32
    4176U,	// VMLAslv4i16
    4176U,	// VMLAslv4i32
    4176U,	// VMLAslv8i16
    592U,	// VMLAv16i8
    592U,	// VMLAv2i32
    592U,	// VMLAv4i16
    592U,	// VMLAv4i32
    592U,	// VMLAv8i16
    592U,	// VMLAv8i8
    124689U,	// VMLSD
    4176U,	// VMLSLslsv2i32
    4176U,	// VMLSLslsv4i16
    4176U,	// VMLSLsluv2i32
    4176U,	// VMLSLsluv4i16
    592U,	// VMLSLsv2i64
    592U,	// VMLSLsv4i32
    592U,	// VMLSLsv8i16
    592U,	// VMLSLuv2i64
    592U,	// VMLSLuv4i32
    592U,	// VMLSLuv8i16
    124689U,	// VMLSS
    124689U,	// VMLSfd
    124689U,	// VMLSfq
    206609U,	// VMLSslfd
    206609U,	// VMLSslfq
    4176U,	// VMLSslv2i32
    4176U,	// VMLSslv4i16
    4176U,	// VMLSslv4i32
    4176U,	// VMLSslv8i16
    592U,	// VMLSv16i8
    592U,	// VMLSv2i32
    592U,	// VMLSv4i16
    592U,	// VMLSv4i32
    592U,	// VMLSv8i16
    592U,	// VMLSv8i8
    44U,	// VMOVD
    0U,	// VMOVDRR
    0U,	// VMOVDcc
    0U,	// VMOVLsv2i64
    0U,	// VMOVLsv4i32
    0U,	// VMOVLsv8i16
    0U,	// VMOVLuv2i64
    0U,	// VMOVLuv4i32
    0U,	// VMOVLuv8i16
    0U,	// VMOVNv2i32
    0U,	// VMOVNv4i16
    0U,	// VMOVNv8i8
    0U,	// VMOVRRD
    8912896U,	// VMOVRRS
    512U,	// VMOVRS
    44U,	// VMOVS
    512U,	// VMOVSR
    8912896U,	// VMOVSRR
    0U,	// VMOVScc
    0U,	// VMOVv16i8
    0U,	// VMOVv1i64
    0U,	// VMOVv2f32
    0U,	// VMOVv2i32
    0U,	// VMOVv2i64
    0U,	// VMOVv4f32
    0U,	// VMOVv4i16
    0U,	// VMOVv4i32
    0U,	// VMOVv8i16
    0U,	// VMOVv8i8
    2U,	// VMRS
    2U,	// VMRS_FPEXC
    2U,	// VMRS_FPSID
    2U,	// VMRS_MVFR0
    2U,	// VMRS_MVFR1
    0U,	// VMSR
    0U,	// VMSR_FPEXC
    0U,	// VMSR_FPSID
    123664U,	// VMULD
    0U,	// VMULLp
    4364U,	// VMULLslsv2i32
    4364U,	// VMULLslsv4i16
    4364U,	// VMULLsluv2i32
    4364U,	// VMULLsluv4i16
    524U,	// VMULLsv2i64
    524U,	// VMULLsv4i32
    524U,	// VMULLsv8i16
    524U,	// VMULLuv2i64
    524U,	// VMULLuv4i32
    524U,	// VMULLuv8i16
    123664U,	// VMULS
    123664U,	// VMULfd
    123664U,	// VMULfq
    0U,	// VMULpd
    0U,	// VMULpq
    213776U,	// VMULslfd
    213776U,	// VMULslfq
    4364U,	// VMULslv2i32
    4364U,	// VMULslv4i16
    4364U,	// VMULslv4i32
    4364U,	// VMULslv8i16
    524U,	// VMULv16i8
    524U,	// VMULv2i32
    524U,	// VMULv4i16
    524U,	// VMULv4i32
    524U,	// VMULv8i16
    524U,	// VMULv8i8
    512U,	// VMVNd
    512U,	// VMVNq
    0U,	// VMVNv2i32
    0U,	// VMVNv4i16
    0U,	// VMVNv4i32
    0U,	// VMVNv8i16
    44U,	// VNEGD
    44U,	// VNEGS
    44U,	// VNEGf32q
    44U,	// VNEGfd
    0U,	// VNEGs16d
    0U,	// VNEGs16q
    0U,	// VNEGs32d
    0U,	// VNEGs32q
    0U,	// VNEGs8d
    0U,	// VNEGs8q
    124689U,	// VNMLAD
    124689U,	// VNMLAS
    124689U,	// VNMLSD
    124689U,	// VNMLSS
    123664U,	// VNMULD
    123664U,	// VNMULS
    0U,	// VORNd
    0U,	// VORNq
    0U,	// VORRd
    0U,	// VORRiv2i32
    0U,	// VORRiv4i16
    0U,	// VORRiv4i32
    0U,	// VORRiv8i16
    0U,	// VORRq
    0U,	// VPADALsv16i8
    0U,	// VPADALsv2i32
    0U,	// VPADALsv4i16
    0U,	// VPADALsv4i32
    0U,	// VPADALsv8i16
    0U,	// VPADALsv8i8
    0U,	// VPADALuv16i8
    0U,	// VPADALuv2i32
    0U,	// VPADALuv4i16
    0U,	// VPADALuv4i32
    0U,	// VPADALuv8i16
    0U,	// VPADALuv8i8
    0U,	// VPADDLsv16i8
    0U,	// VPADDLsv2i32
    0U,	// VPADDLsv4i16
    0U,	// VPADDLsv4i32
    0U,	// VPADDLsv8i16
    0U,	// VPADDLsv8i8
    0U,	// VPADDLuv16i8
    0U,	// VPADDLuv2i32
    0U,	// VPADDLuv4i16
    0U,	// VPADDLuv4i32
    0U,	// VPADDLuv8i16
    0U,	// VPADDLuv8i8
    123664U,	// VPADDf
    524U,	// VPADDi16
    524U,	// VPADDi32
    524U,	// VPADDi8
    123664U,	// VPMAXf
    524U,	// VPMAXs16
    524U,	// VPMAXs32
    524U,	// VPMAXs8
    524U,	// VPMAXu16
    524U,	// VPMAXu32
    524U,	// VPMAXu8
    123664U,	// VPMINf
    524U,	// VPMINs16
    524U,	// VPMINs32
    524U,	// VPMINs8
    524U,	// VPMINu16
    524U,	// VPMINu32
    524U,	// VPMINu8
    0U,	// VQABSv16i8
    0U,	// VQABSv2i32
    0U,	// VQABSv4i16
    0U,	// VQABSv4i32
    0U,	// VQABSv8i16
    0U,	// VQABSv8i8
    524U,	// VQADDsv16i8
    524U,	// VQADDsv1i64
    524U,	// VQADDsv2i32
    524U,	// VQADDsv2i64
    524U,	// VQADDsv4i16
    524U,	// VQADDsv4i32
    524U,	// VQADDsv8i16
    524U,	// VQADDsv8i8
    524U,	// VQADDuv16i8
    524U,	// VQADDuv1i64
    524U,	// VQADDuv2i32
    524U,	// VQADDuv2i64
    524U,	// VQADDuv4i16
    524U,	// VQADDuv4i32
    524U,	// VQADDuv8i16
    524U,	// VQADDuv8i8
    4176U,	// VQDMLALslv2i32
    4176U,	// VQDMLALslv4i16
    592U,	// VQDMLALv2i64
    592U,	// VQDMLALv4i32
    4176U,	// VQDMLSLslv2i32
    4176U,	// VQDMLSLslv4i16
    592U,	// VQDMLSLv2i64
    592U,	// VQDMLSLv4i32
    4364U,	// VQDMULHslv2i32
    4364U,	// VQDMULHslv4i16
    4364U,	// VQDMULHslv4i32
    4364U,	// VQDMULHslv8i16
    524U,	// VQDMULHv2i32
    524U,	// VQDMULHv4i16
    524U,	// VQDMULHv4i32
    524U,	// VQDMULHv8i16
    4364U,	// VQDMULLslv2i32
    4364U,	// VQDMULLslv4i16
    524U,	// VQDMULLv2i64
    524U,	// VQDMULLv4i32
    0U,	// VQMOVNsuv2i32
    0U,	// VQMOVNsuv4i16
    0U,	// VQMOVNsuv8i8
    0U,	// VQMOVNsv2i32
    0U,	// VQMOVNsv4i16
    0U,	// VQMOVNsv8i8
    0U,	// VQMOVNuv2i32
    0U,	// VQMOVNuv4i16
    0U,	// VQMOVNuv8i8
    0U,	// VQNEGv16i8
    0U,	// VQNEGv2i32
    0U,	// VQNEGv4i16
    0U,	// VQNEGv4i32
    0U,	// VQNEGv8i16
    0U,	// VQNEGv8i8
    4364U,	// VQRDMULHslv2i32
    4364U,	// VQRDMULHslv4i16
    4364U,	// VQRDMULHslv4i32
    4364U,	// VQRDMULHslv8i16
    524U,	// VQRDMULHv2i32
    524U,	// VQRDMULHv4i16
    524U,	// VQRDMULHv4i32
    524U,	// VQRDMULHv8i16
    524U,	// VQRSHLsv16i8
    524U,	// VQRSHLsv1i64
    524U,	// VQRSHLsv2i32
    524U,	// VQRSHLsv2i64
    524U,	// VQRSHLsv4i16
    524U,	// VQRSHLsv4i32
    524U,	// VQRSHLsv8i16
    524U,	// VQRSHLsv8i8
    524U,	// VQRSHLuv16i8
    524U,	// VQRSHLuv1i64
    524U,	// VQRSHLuv2i32
    524U,	// VQRSHLuv2i64
    524U,	// VQRSHLuv4i16
    524U,	// VQRSHLuv4i32
    524U,	// VQRSHLuv8i16
    524U,	// VQRSHLuv8i8
    524U,	// VQRSHRNsv2i32
    524U,	// VQRSHRNsv4i16
    524U,	// VQRSHRNsv8i8
    524U,	// VQRSHRNuv2i32
    524U,	// VQRSHRNuv4i16
    524U,	// VQRSHRNuv8i8
    524U,	// VQRSHRUNv2i32
    524U,	// VQRSHRUNv4i16
    524U,	// VQRSHRUNv8i8
    524U,	// VQSHLsiv16i8
    524U,	// VQSHLsiv1i64
    524U,	// VQSHLsiv2i32
    524U,	// VQSHLsiv2i64
    524U,	// VQSHLsiv4i16
    524U,	// VQSHLsiv4i32
    524U,	// VQSHLsiv8i16
    524U,	// VQSHLsiv8i8
    524U,	// VQSHLsuv16i8
    524U,	// VQSHLsuv1i64
    524U,	// VQSHLsuv2i32
    524U,	// VQSHLsuv2i64
    524U,	// VQSHLsuv4i16
    524U,	// VQSHLsuv4i32
    524U,	// VQSHLsuv8i16
    524U,	// VQSHLsuv8i8
    524U,	// VQSHLsv16i8
    524U,	// VQSHLsv1i64
    524U,	// VQSHLsv2i32
    524U,	// VQSHLsv2i64
    524U,	// VQSHLsv4i16
    524U,	// VQSHLsv4i32
    524U,	// VQSHLsv8i16
    524U,	// VQSHLsv8i8
    524U,	// VQSHLuiv16i8
    524U,	// VQSHLuiv1i64
    524U,	// VQSHLuiv2i32
    524U,	// VQSHLuiv2i64
    524U,	// VQSHLuiv4i16
    524U,	// VQSHLuiv4i32
    524U,	// VQSHLuiv8i16
    524U,	// VQSHLuiv8i8
    524U,	// VQSHLuv16i8
    524U,	// VQSHLuv1i64
    524U,	// VQSHLuv2i32
    524U,	// VQSHLuv2i64
    524U,	// VQSHLuv4i16
    524U,	// VQSHLuv4i32
    524U,	// VQSHLuv8i16
    524U,	// VQSHLuv8i8
    524U,	// VQSHRNsv2i32
    524U,	// VQSHRNsv4i16
    524U,	// VQSHRNsv8i8
    524U,	// VQSHRNuv2i32
    524U,	// VQSHRNuv4i16
    524U,	// VQSHRNuv8i8
    524U,	// VQSHRUNv2i32
    524U,	// VQSHRUNv4i16
    524U,	// VQSHRUNv8i8
    524U,	// VQSUBsv16i8
    524U,	// VQSUBsv1i64
    524U,	// VQSUBsv2i32
    524U,	// VQSUBsv2i64
    524U,	// VQSUBsv4i16
    524U,	// VQSUBsv4i32
    524U,	// VQSUBsv8i16
    524U,	// VQSUBsv8i8
    524U,	// VQSUBuv16i8
    524U,	// VQSUBuv1i64
    524U,	// VQSUBuv2i32
    524U,	// VQSUBuv2i64
    524U,	// VQSUBuv4i16
    524U,	// VQSUBuv4i32
    524U,	// VQSUBuv8i16
    524U,	// VQSUBuv8i8
    524U,	// VRADDHNv2i32
    524U,	// VRADDHNv4i16
    524U,	// VRADDHNv8i8
    0U,	// VRECPEd
    44U,	// VRECPEfd
    44U,	// VRECPEfq
    0U,	// VRECPEq
    123664U,	// VRECPSfd
    123664U,	// VRECPSfq
    512U,	// VREV16d8
    512U,	// VREV16q8
    512U,	// VREV32d16
    512U,	// VREV32d8
    512U,	// VREV32q16
    512U,	// VREV32q8
    512U,	// VREV64d16
    512U,	// VREV64d32
    512U,	// VREV64d8
    512U,	// VREV64q16
    512U,	// VREV64q32
    512U,	// VREV64q8
    524U,	// VRHADDsv16i8
    524U,	// VRHADDsv2i32
    524U,	// VRHADDsv4i16
    524U,	// VRHADDsv4i32
    524U,	// VRHADDsv8i16
    524U,	// VRHADDsv8i8
    524U,	// VRHADDuv16i8
    524U,	// VRHADDuv2i32
    524U,	// VRHADDuv4i16
    524U,	// VRHADDuv4i32
    524U,	// VRHADDuv8i16
    524U,	// VRHADDuv8i8
    524U,	// VRSHLsv16i8
    524U,	// VRSHLsv1i64
    524U,	// VRSHLsv2i32
    524U,	// VRSHLsv2i64
    524U,	// VRSHLsv4i16
    524U,	// VRSHLsv4i32
    524U,	// VRSHLsv8i16
    524U,	// VRSHLsv8i8
    524U,	// VRSHLuv16i8
    524U,	// VRSHLuv1i64
    524U,	// VRSHLuv2i32
    524U,	// VRSHLuv2i64
    524U,	// VRSHLuv4i16
    524U,	// VRSHLuv4i32
    524U,	// VRSHLuv8i16
    524U,	// VRSHLuv8i8
    524U,	// VRSHRNv2i32
    524U,	// VRSHRNv4i16
    524U,	// VRSHRNv8i8
    524U,	// VRSHRsv16i8
    524U,	// VRSHRsv1i64
    524U,	// VRSHRsv2i32
    524U,	// VRSHRsv2i64
    524U,	// VRSHRsv4i16
    524U,	// VRSHRsv4i32
    524U,	// VRSHRsv8i16
    524U,	// VRSHRsv8i8
    524U,	// VRSHRuv16i8
    524U,	// VRSHRuv1i64
    524U,	// VRSHRuv2i32
    524U,	// VRSHRuv2i64
    524U,	// VRSHRuv4i16
    524U,	// VRSHRuv4i32
    524U,	// VRSHRuv8i16
    524U,	// VRSHRuv8i8
    0U,	// VRSQRTEd
    44U,	// VRSQRTEfd
    44U,	// VRSQRTEfq
    0U,	// VRSQRTEq
    123664U,	// VRSQRTSfd
    123664U,	// VRSQRTSfq
    592U,	// VRSRAsv16i8
    592U,	// VRSRAsv1i64
    592U,	// VRSRAsv2i32
    592U,	// VRSRAsv2i64
    592U,	// VRSRAsv4i16
    592U,	// VRSRAsv4i32
    592U,	// VRSRAsv8i16
    592U,	// VRSRAsv8i8
    592U,	// VRSRAuv16i8
    592U,	// VRSRAuv1i64
    592U,	// VRSRAuv2i32
    592U,	// VRSRAuv2i64
    592U,	// VRSRAuv4i16
    592U,	// VRSRAuv4i32
    592U,	// VRSRAuv8i16
    592U,	// VRSRAuv8i8
    524U,	// VRSUBHNv2i32
    524U,	// VRSUBHNv4i16
    524U,	// VRSUBHNv8i8
    2U,	// VSETLNi16
    2U,	// VSETLNi32
    2U,	// VSETLNi8
    524U,	// VSHLLi16
    524U,	// VSHLLi32
    524U,	// VSHLLi8
    524U,	// VSHLLsv2i64
    524U,	// VSHLLsv4i32
    524U,	// VSHLLsv8i16
    524U,	// VSHLLuv2i64
    524U,	// VSHLLuv4i32
    524U,	// VSHLLuv8i16
    524U,	// VSHLiv16i8
    524U,	// VSHLiv1i64
    524U,	// VSHLiv2i32
    524U,	// VSHLiv2i64
    524U,	// VSHLiv4i16
    524U,	// VSHLiv4i32
    524U,	// VSHLiv8i16
    524U,	// VSHLiv8i8
    524U,	// VSHLsv16i8
    524U,	// VSHLsv1i64
    524U,	// VSHLsv2i32
    524U,	// VSHLsv2i64
    524U,	// VSHLsv4i16
    524U,	// VSHLsv4i32
    524U,	// VSHLsv8i16
    524U,	// VSHLsv8i8
    524U,	// VSHLuv16i8
    524U,	// VSHLuv1i64
    524U,	// VSHLuv2i32
    524U,	// VSHLuv2i64
    524U,	// VSHLuv4i16
    524U,	// VSHLuv4i32
    524U,	// VSHLuv8i16
    524U,	// VSHLuv8i8
    524U,	// VSHRNv2i32
    524U,	// VSHRNv4i16
    524U,	// VSHRNv8i8
    524U,	// VSHRsv16i8
    524U,	// VSHRsv1i64
    524U,	// VSHRsv2i32
    524U,	// VSHRsv2i64
    524U,	// VSHRsv4i16
    524U,	// VSHRsv4i32
    524U,	// VSHRsv8i16
    524U,	// VSHRsv8i8
    524U,	// VSHRuv16i8
    524U,	// VSHRuv1i64
    524U,	// VSHRuv2i32
    524U,	// VSHRuv2i64
    524U,	// VSHRuv4i16
    524U,	// VSHRuv4i32
    524U,	// VSHRuv8i16
    524U,	// VSHRuv8i8
    0U,	// VSHTOD
    0U,	// VSHTOS
    0U,	// VSITOD
    0U,	// VSITOS
    131084U,	// VSLIv16i8
    131084U,	// VSLIv1i64
    131084U,	// VSLIv2i32
    131084U,	// VSLIv2i64
    131084U,	// VSLIv4i16
    131084U,	// VSLIv4i32
    131084U,	// VSLIv8i16
    131084U,	// VSLIv8i8
    3U,	// VSLTOD
    3U,	// VSLTOS
    44U,	// VSQRTD
    44U,	// VSQRTS
    592U,	// VSRAsv16i8
    592U,	// VSRAsv1i64
    592U,	// VSRAsv2i32
    592U,	// VSRAsv2i64
    592U,	// VSRAsv4i16
    592U,	// VSRAsv4i32
    592U,	// VSRAsv8i16
    592U,	// VSRAsv8i8
    592U,	// VSRAuv16i8
    592U,	// VSRAuv1i64
    592U,	// VSRAuv2i32
    592U,	// VSRAuv2i64
    592U,	// VSRAuv4i16
    592U,	// VSRAuv4i32
    592U,	// VSRAuv8i16
    592U,	// VSRAuv8i8
    131084U,	// VSRIv16i8
    131084U,	// VSRIv1i64
    131084U,	// VSRIv2i32
    131084U,	// VSRIv2i64
    131084U,	// VSRIv4i16
    131084U,	// VSRIv4i32
    131084U,	// VSRIv8i16
    131084U,	// VSRIv8i8
    137U,	// VST1LNd16
    5384589U,	// VST1LNd16_UPD
    137U,	// VST1LNd32
    5384589U,	// VST1LNd32_UPD
    137U,	// VST1LNd8
    5384589U,	// VST1LNd8_UPD
    620U,	// VST1LNdAsm_16
    620U,	// VST1LNdAsm_32
    620U,	// VST1LNdAsm_8
    2668U,	// VST1LNdWB_fixed_Asm_16
    2668U,	// VST1LNdWB_fixed_Asm_32
    2668U,	// VST1LNdWB_fixed_Asm_8
    155756U,	// VST1LNdWB_register_Asm_16
    155756U,	// VST1LNdWB_register_Asm_32
    155756U,	// VST1LNdWB_register_Asm_8
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    0U,	// VST1d16
    0U,	// VST1d16Q
    0U,	// VST1d16Qwb_fixed
    0U,	// VST1d16Qwb_register
    0U,	// VST1d16T
    0U,	// VST1d16Twb_fixed
    0U,	// VST1d16Twb_register
    0U,	// VST1d16wb_fixed
    0U,	// VST1d16wb_register
    0U,	// VST1d32
    0U,	// VST1d32Q
    0U,	// VST1d32Qwb_fixed
    0U,	// VST1d32Qwb_register
    0U,	// VST1d32T
    0U,	// VST1d32Twb_fixed
    0U,	// VST1d32Twb_register
    0U,	// VST1d32wb_fixed
    0U,	// VST1d32wb_register
    0U,	// VST1d64
    0U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    0U,	// VST1d64Qwb_fixed
    0U,	// VST1d64Qwb_register
    0U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    0U,	// VST1d64Twb_fixed
    0U,	// VST1d64Twb_register
    0U,	// VST1d64wb_fixed
    0U,	// VST1d64wb_register
    0U,	// VST1d8
    0U,	// VST1d8Q
    0U,	// VST1d8Qwb_fixed
    0U,	// VST1d8Qwb_register
    0U,	// VST1d8T
    0U,	// VST1d8Twb_fixed
    0U,	// VST1d8Twb_register
    0U,	// VST1d8wb_fixed
    0U,	// VST1d8wb_register
    0U,	// VST1q16
    0U,	// VST1q16wb_fixed
    0U,	// VST1q16wb_register
    0U,	// VST1q32
    0U,	// VST1q32wb_fixed
    0U,	// VST1q32wb_register
    0U,	// VST1q64
    0U,	// VST1q64wb_fixed
    0U,	// VST1q64wb_register
    0U,	// VST1q8
    0U,	// VST1q8wb_fixed
    0U,	// VST1q8wb_register
    55184229U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    224105U,	// VST2LNd16_UPD
    55184229U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    224105U,	// VST2LNd32_UPD
    55184229U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    224105U,	// VST2LNd8_UPD
    620U,	// VST2LNdAsm_16
    620U,	// VST2LNdAsm_32
    620U,	// VST2LNdAsm_8
    2668U,	// VST2LNdWB_fixed_Asm_16
    2668U,	// VST2LNdWB_fixed_Asm_32
    2668U,	// VST2LNdWB_fixed_Asm_8
    155756U,	// VST2LNdWB_register_Asm_16
    155756U,	// VST2LNdWB_register_Asm_32
    155756U,	// VST2LNdWB_register_Asm_8
    55184229U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    224105U,	// VST2LNq16_UPD
    55184229U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    224105U,	// VST2LNq32_UPD
    620U,	// VST2LNqAsm_16
    620U,	// VST2LNqAsm_32
    2668U,	// VST2LNqWB_fixed_Asm_16
    2668U,	// VST2LNqWB_fixed_Asm_32
    155756U,	// VST2LNqWB_register_Asm_16
    155756U,	// VST2LNqWB_register_Asm_32
    0U,	// VST2b16
    0U,	// VST2b16wb_fixed
    0U,	// VST2b16wb_register
    0U,	// VST2b32
    0U,	// VST2b32wb_fixed
    0U,	// VST2b32wb_register
    0U,	// VST2b8
    0U,	// VST2b8wb_fixed
    0U,	// VST2b8wb_register
    0U,	// VST2d16
    0U,	// VST2d16wb_fixed
    0U,	// VST2d16wb_register
    0U,	// VST2d32
    0U,	// VST2d32wb_fixed
    0U,	// VST2d32wb_register
    0U,	// VST2d8
    0U,	// VST2d8wb_fixed
    0U,	// VST2d8wb_register
    0U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    0U,	// VST2q16wb_fixed
    0U,	// VST2q16wb_register
    0U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    0U,	// VST2q32wb_fixed
    0U,	// VST2q32wb_register
    0U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    0U,	// VST2q8wb_fixed
    0U,	// VST2q8wb_register
    63572877U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    145U,	// VST3LNd16_UPD
    63572877U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    145U,	// VST3LNd32_UPD
    63572877U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    145U,	// VST3LNd8_UPD
    620U,	// VST3LNdAsm_16
    620U,	// VST3LNdAsm_32
    620U,	// VST3LNdAsm_8
    2668U,	// VST3LNdWB_fixed_Asm_16
    2668U,	// VST3LNdWB_fixed_Asm_32
    2668U,	// VST3LNdWB_fixed_Asm_8
    155756U,	// VST3LNdWB_register_Asm_16
    155756U,	// VST3LNdWB_register_Asm_32
    155756U,	// VST3LNdWB_register_Asm_8
    63572877U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    145U,	// VST3LNq16_UPD
    63572877U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    145U,	// VST3LNq32_UPD
    620U,	// VST3LNqAsm_16
    620U,	// VST3LNqAsm_32
    2668U,	// VST3LNqWB_fixed_Asm_16
    2668U,	// VST3LNqWB_fixed_Asm_32
    155756U,	// VST3LNqWB_register_Asm_16
    155756U,	// VST3LNqWB_register_Asm_32
    71458896U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    4756U,	// VST3d16_UPD
    71458896U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    4756U,	// VST3d32_UPD
    71458896U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    4756U,	// VST3d8_UPD
    45U,	// VST3dAsm_16
    45U,	// VST3dAsm_32
    45U,	// VST3dAsm_8
    97U,	// VST3dWB_fixed_Asm_16
    97U,	// VST3dWB_fixed_Asm_32
    97U,	// VST3dWB_fixed_Asm_8
    124689U,	// VST3dWB_register_Asm_16
    124689U,	// VST3dWB_register_Asm_32
    124689U,	// VST3dWB_register_Asm_8
    71458896U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    4756U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    71458896U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    4756U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    71458896U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    4756U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    0U,	// VST3qAsm_16
    0U,	// VST3qAsm_32
    0U,	// VST3qAsm_8
    2U,	// VST3qWB_fixed_Asm_16
    2U,	// VST3qWB_fixed_Asm_32
    2U,	// VST3qWB_fixed_Asm_8
    592U,	// VST3qWB_register_Asm_16
    592U,	// VST3qWB_register_Asm_32
    592U,	// VST3qWB_register_Asm_8
    80350057U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    4977U,	// VST4LNd16_UPD
    80350057U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    4977U,	// VST4LNd32_UPD
    80350057U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    4977U,	// VST4LNd8_UPD
    620U,	// VST4LNdAsm_16
    620U,	// VST4LNdAsm_32
    620U,	// VST4LNdAsm_8
    2668U,	// VST4LNdWB_fixed_Asm_16
    2668U,	// VST4LNdWB_fixed_Asm_32
    2668U,	// VST4LNdWB_fixed_Asm_8
    155756U,	// VST4LNdWB_register_Asm_16
    155756U,	// VST4LNdWB_register_Asm_32
    155756U,	// VST4LNdWB_register_Asm_8
    80350057U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    4977U,	// VST4LNq16_UPD
    80350057U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    4977U,	// VST4LNq32_UPD
    620U,	// VST4LNqAsm_16
    620U,	// VST4LNqAsm_32
    2668U,	// VST4LNqWB_fixed_Asm_16
    2668U,	// VST4LNqWB_fixed_Asm_32
    155756U,	// VST4LNqWB_register_Asm_16
    155756U,	// VST4LNqWB_register_Asm_32
    84566096U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    229524U,	// VST4d16_UPD
    84566096U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    229524U,	// VST4d32_UPD
    84566096U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    229524U,	// VST4d8_UPD
    45U,	// VST4dAsm_16
    45U,	// VST4dAsm_32
    45U,	// VST4dAsm_8
    97U,	// VST4dWB_fixed_Asm_16
    97U,	// VST4dWB_fixed_Asm_32
    97U,	// VST4dWB_fixed_Asm_8
    124689U,	// VST4dWB_register_Asm_16
    124689U,	// VST4dWB_register_Asm_32
    124689U,	// VST4dWB_register_Asm_8
    84566096U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    229524U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    84566096U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    229524U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    84566096U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    229524U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    0U,	// VST4qAsm_16
    0U,	// VST4qAsm_32
    0U,	// VST4qAsm_8
    2U,	// VST4qWB_fixed_Asm_16
    2U,	// VST4qWB_fixed_Asm_32
    2U,	// VST4qWB_fixed_Asm_8
    592U,	// VST4qWB_register_Asm_16
    592U,	// VST4qWB_register_Asm_32
    592U,	// VST4qWB_register_Asm_8
    44U,	// VSTMDDB_UPD
    552U,	// VSTMDIA
    44U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    44U,	// VSTMSDB_UPD
    552U,	// VSTMSIA
    44U,	// VSTMSIA_UPD
    132U,	// VSTRD
    132U,	// VSTRS
    123664U,	// VSUBD
    524U,	// VSUBHNv2i32
    524U,	// VSUBHNv4i16
    524U,	// VSUBHNv8i8
    524U,	// VSUBLsv2i64
    524U,	// VSUBLsv4i32
    524U,	// VSUBLsv8i16
    524U,	// VSUBLuv2i64
    524U,	// VSUBLuv4i32
    524U,	// VSUBLuv8i16
    123664U,	// VSUBS
    524U,	// VSUBWsv2i64
    524U,	// VSUBWsv4i32
    524U,	// VSUBWsv8i16
    524U,	// VSUBWuv2i64
    524U,	// VSUBWuv4i32
    524U,	// VSUBWuv8i16
    123664U,	// VSUBfd
    123664U,	// VSUBfq
    524U,	// VSUBv16i8
    524U,	// VSUBv1i64
    524U,	// VSUBv2i32
    524U,	// VSUBv2i64
    524U,	// VSUBv4i16
    524U,	// VSUBv4i32
    524U,	// VSUBv8i16
    524U,	// VSUBv8i8
    512U,	// VSWPd
    512U,	// VSWPq
    152U,	// VTBL1
    156U,	// VTBL2
    160U,	// VTBL3
    0U,	// VTBL3Pseudo
    164U,	// VTBL4
    0U,	// VTBL4Pseudo
    168U,	// VTBX1
    172U,	// VTBX2
    176U,	// VTBX3
    0U,	// VTBX3Pseudo
    180U,	// VTBX4
    0U,	// VTBX4Pseudo
    0U,	// VTOSHD
    0U,	// VTOSHS
    0U,	// VTOSIRD
    0U,	// VTOSIRS
    0U,	// VTOSIZD
    0U,	// VTOSIZS
    3U,	// VTOSLD
    3U,	// VTOSLS
    0U,	// VTOUHD
    0U,	// VTOUHS
    0U,	// VTOUIRD
    0U,	// VTOUIRS
    0U,	// VTOUIZD
    0U,	// VTOUIZS
    3U,	// VTOULD
    3U,	// VTOULS
    512U,	// VTRNd16
    512U,	// VTRNd32
    512U,	// VTRNd8
    512U,	// VTRNq16
    512U,	// VTRNq32
    512U,	// VTRNq8
    0U,	// VTSTv16i8
    0U,	// VTSTv2i32
    0U,	// VTSTv4i16
    0U,	// VTSTv4i32
    0U,	// VTSTv8i16
    0U,	// VTSTv8i8
    0U,	// VUHTOD
    0U,	// VUHTOS
    0U,	// VUITOD
    0U,	// VUITOS
    3U,	// VULTOD
    3U,	// VULTOS
    512U,	// VUZPd16
    512U,	// VUZPd8
    512U,	// VUZPq16
    512U,	// VUZPq32
    512U,	// VUZPq8
    512U,	// VZIPd16
    512U,	// VZIPd8
    512U,	// VZIPq16
    512U,	// VZIPq32
    512U,	// VZIPq8
    5160U,	// sysLDMDA
    184U,	// sysLDMDA_UPD
    5160U,	// sysLDMDB
    184U,	// sysLDMDB_UPD
    5160U,	// sysLDMIA
    184U,	// sysLDMIA_UPD
    5160U,	// sysLDMIB
    184U,	// sysLDMIB_UPD
    5160U,	// sysSTMDA
    184U,	// sysSTMDA_UPD
    5160U,	// sysSTMDB
    184U,	// sysSTMDB_UPD
    5160U,	// sysSTMIA
    184U,	// sysSTMIA_UPD
    5160U,	// sysSTMIB
    184U,	// sysSTMIB_UPD
    0U,	// t2ABS
    0U,	// t2ADCri
    0U,	// t2ADCrr
    237568U,	// t2ADCrs
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2ADDri
    0U,	// t2ADDri12
    0U,	// t2ADDrr
    237568U,	// t2ADDrs
    4U,	// t2ADR
    0U,	// t2ANDri
    0U,	// t2ANDrr
    237568U,	// t2ANDrs
    245760U,	// t2ASRri
    0U,	// t2ASRrr
    0U,	// t2B
    8U,	// t2BFC
    16396U,	// t2BFI
    0U,	// t2BICri
    0U,	// t2BICrr
    237568U,	// t2BICrs
    0U,	// t2BR_JT
    0U,	// t2BXJ
    0U,	// t2Bcc
    0U,	// t2CDP2
    0U,	// t2CLREX
    512U,	// t2CLZ
    512U,	// t2CMNri
    512U,	// t2CMNzrr
    188U,	// t2CMNzrs
    512U,	// t2CMPri
    512U,	// t2CMPrr
    188U,	// t2CMPrs
    0U,	// t2CPS1p
    0U,	// t2CPS2p
    524U,	// t2CPS3p
    0U,	// t2DBG
    0U,	// t2DMB
    0U,	// t2DSB
    0U,	// t2EORri
    0U,	// t2EORrr
    237568U,	// t2EORrs
    0U,	// t2HINT
    0U,	// t2ISB
    0U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    540U,	// t2LDC2L_OFFSET
    24608U,	// t2LDC2L_OPTION
    32800U,	// t2LDC2L_POST
    2588U,	// t2LDC2L_PRE
    540U,	// t2LDC2_OFFSET
    24608U,	// t2LDC2_OPTION
    32800U,	// t2LDC2_POST
    2588U,	// t2LDC2_PRE
    540U,	// t2LDCL_OFFSET
    24608U,	// t2LDCL_OPTION
    32800U,	// t2LDCL_POST
    2588U,	// t2LDCL_PRE
    540U,	// t2LDC_OFFSET
    24608U,	// t2LDC_OPTION
    32800U,	// t2LDC_POST
    2588U,	// t2LDC_PRE
    552U,	// t2LDMDB
    44U,	// t2LDMDB_UPD
    552U,	// t2LDMIA
    0U,	// t2LDMIA_RET
    44U,	// t2LDMIA_UPD
    192U,	// t2LDRBT
    5408U,	// t2LDRB_POST
    196U,	// t2LDRB_PRE
    56U,	// t2LDRBi12
    192U,	// t2LDRBi8
    200U,	// t2LDRBpci
    512U,	// t2LDRBpcrel
    204U,	// t2LDRBs
    5824512U,	// t2LDRD_POST
    253952U,	// t2LDRD_PRE
    262144U,	// t2LDRDi8
    208U,	// t2LDREX
    64U,	// t2LDREXB
    114688U,	// t2LDREXD
    64U,	// t2LDREXH
    192U,	// t2LDRHT
    5408U,	// t2LDRH_POST
    196U,	// t2LDRH_PRE
    56U,	// t2LDRHi12
    192U,	// t2LDRHi8
    200U,	// t2LDRHpci
    512U,	// t2LDRHpcrel
    204U,	// t2LDRHs
    192U,	// t2LDRSBT
    5408U,	// t2LDRSB_POST
    196U,	// t2LDRSB_PRE
    56U,	// t2LDRSBi12
    192U,	// t2LDRSBi8
    200U,	// t2LDRSBpci
    512U,	// t2LDRSBpcrel
    204U,	// t2LDRSBs
    192U,	// t2LDRSHT
    5408U,	// t2LDRSH_POST
    196U,	// t2LDRSH_PRE
    56U,	// t2LDRSHi12
    192U,	// t2LDRSHi8
    200U,	// t2LDRSHpci
    512U,	// t2LDRSHpcrel
    204U,	// t2LDRSHs
    192U,	// t2LDRT
    5408U,	// t2LDR_POST
    196U,	// t2LDR_PRE
    56U,	// t2LDRi12
    192U,	// t2LDRi8
    200U,	// t2LDRpci
    0U,	// t2LDRpci_pic
    512U,	// t2LDRpcrel
    204U,	// t2LDRs
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2LSLri
    0U,	// t2LSLrr
    245760U,	// t2LSRri
    0U,	// t2LSRrr
    76U,	// t2MCR
    76U,	// t2MCR2
    106576U,	// t2MCRR
    106576U,	// t2MCRR2
    8912896U,	// t2MLA
    8912896U,	// t2MLS
    131084U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    524U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    131084U,	// t2MOVCClsl
    131084U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    131084U,	// t2MOVCCror
    188U,	// t2MOVSsi
    24U,	// t2MOVSsr
    524U,	// t2MOVTi16
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_dyn
    0U,	// t2MOV_ga_pcrel
    512U,	// t2MOVi
    512U,	// t2MOVi16
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    512U,	// t2MOVr
    188U,	// t2MOVsi
    24U,	// t2MOVsr
    5632U,	// t2MOVsra_flag
    5632U,	// t2MOVsrl_flag
    0U,	// t2MRC
    0U,	// t2MRC2
    106576U,	// t2MRRC
    106576U,	// t2MRRC2
    1U,	// t2MRS_AR
    212U,	// t2MRS_M
    1U,	// t2MRSsys_AR
    0U,	// t2MSR_AR
    0U,	// t2MSR_M
    0U,	// t2MUL
    524U,	// t2MVNCCi
    512U,	// t2MVNi
    512U,	// t2MVNr
    188U,	// t2MVNs
    0U,	// t2ORNri
    0U,	// t2ORNrr
    237568U,	// t2ORNrs
    0U,	// t2ORRri
    0U,	// t2ORRrr
    237568U,	// t2ORRrs
    2097152U,	// t2PKHBT
    2621440U,	// t2PKHTB
    0U,	// t2PLDWi12
    0U,	// t2PLDWi8
    0U,	// t2PLDWs
    0U,	// t2PLDi12
    0U,	// t2PLDi8
    0U,	// t2PLDs
    0U,	// t2PLIi12
    0U,	// t2PLIi8
    0U,	// t2PLIs
    0U,	// t2QADD
    0U,	// t2QADD16
    0U,	// t2QADD8
    0U,	// t2QASX
    0U,	// t2QDADD
    0U,	// t2QDSUB
    0U,	// t2QSAX
    0U,	// t2QSUB
    0U,	// t2QSUB16
    0U,	// t2QSUB8
    512U,	// t2RBIT
    512U,	// t2REV
    512U,	// t2REV16
    512U,	// t2REVSH
    0U,	// t2RFEDB
    2U,	// t2RFEDBW
    0U,	// t2RFEIA
    2U,	// t2RFEIAW
    0U,	// t2RORri
    0U,	// t2RORrr
    512U,	// t2RRX
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2RSBri
    0U,	// t2RSBrr
    237568U,	// t2RSBrs
    0U,	// t2SADD16
    0U,	// t2SADD8
    0U,	// t2SASX
    0U,	// t2SBCri
    0U,	// t2SBCrr
    237568U,	// t2SBCrs
    17301504U,	// t2SBFX
    0U,	// t2SDIV
    0U,	// t2SEL
    0U,	// t2SHADD16
    0U,	// t2SHADD8
    0U,	// t2SHASX
    0U,	// t2SHSAX
    0U,	// t2SHSUB16
    0U,	// t2SHSUB8
    0U,	// t2SMC
    8912896U,	// t2SMLABB
    8912896U,	// t2SMLABT
    8912896U,	// t2SMLAD
    8912896U,	// t2SMLADX
    8912896U,	// t2SMLAL
    8912896U,	// t2SMLALBB
    8912896U,	// t2SMLALBT
    8912896U,	// t2SMLALD
    8912896U,	// t2SMLALDX
    8912896U,	// t2SMLALTB
    8912896U,	// t2SMLALTT
    8912896U,	// t2SMLATB
    8912896U,	// t2SMLATT
    8912896U,	// t2SMLAWB
    8912896U,	// t2SMLAWT
    8912896U,	// t2SMLSD
    8912896U,	// t2SMLSDX
    8912896U,	// t2SMLSLD
    92930048U,	// t2SMLSLDX
    8912896U,	// t2SMMLA
    8912896U,	// t2SMMLAR
    8912896U,	// t2SMMLS
    8912896U,	// t2SMMLSR
    0U,	// t2SMMUL
    0U,	// t2SMMULR
    0U,	// t2SMUAD
    0U,	// t2SMUADX
    0U,	// t2SMULBB
    0U,	// t2SMULBT
    8912896U,	// t2SMULL
    0U,	// t2SMULTB
    0U,	// t2SMULTT
    0U,	// t2SMULWB
    0U,	// t2SMULWT
    0U,	// t2SMUSD
    0U,	// t2SMUSDX
    0U,	// t2SRSDB
    0U,	// t2SRSDB_UPD
    0U,	// t2SRSIA
    0U,	// t2SRSIA_UPD
    1108U,	// t2SSAT
    596U,	// t2SSAT16
    0U,	// t2SSAX
    0U,	// t2SSUB16
    0U,	// t2SSUB8
    540U,	// t2STC2L_OFFSET
    24608U,	// t2STC2L_OPTION
    32800U,	// t2STC2L_POST
    2588U,	// t2STC2L_PRE
    540U,	// t2STC2_OFFSET
    24608U,	// t2STC2_OPTION
    32800U,	// t2STC2_POST
    2588U,	// t2STC2_PRE
    540U,	// t2STCL_OFFSET
    24608U,	// t2STCL_OPTION
    32800U,	// t2STCL_POST
    2588U,	// t2STCL_PRE
    540U,	// t2STC_OFFSET
    24608U,	// t2STC_OPTION
    32800U,	// t2STC_POST
    2588U,	// t2STC_PRE
    552U,	// t2STMDB
    44U,	// t2STMDB_UPD
    552U,	// t2STMIA
    44U,	// t2STMIA_UPD
    192U,	// t2STRBT
    5408U,	// t2STRB_POST
    196U,	// t2STRB_PRE
    0U,	// t2STRB_preidx
    56U,	// t2STRBi12
    192U,	// t2STRBi8
    204U,	// t2STRBs
    5824524U,	// t2STRD_POST
    253964U,	// t2STRD_PRE
    262144U,	// t2STRDi8
    270336U,	// t2STREX
    114688U,	// t2STREXB
    101187584U,	// t2STREXD
    114688U,	// t2STREXH
    192U,	// t2STRHT
    5408U,	// t2STRH_POST
    196U,	// t2STRH_PRE
    0U,	// t2STRH_preidx
    56U,	// t2STRHi12
    192U,	// t2STRHi8
    204U,	// t2STRHs
    192U,	// t2STRT
    5408U,	// t2STR_POST
    196U,	// t2STR_PRE
    0U,	// t2STR_preidx
    56U,	// t2STRi12
    192U,	// t2STRi8
    204U,	// t2STRs
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2SUBri
    0U,	// t2SUBri12
    0U,	// t2SUBrr
    237568U,	// t2SUBrs
    3145728U,	// t2SXTAB
    3145728U,	// t2SXTAB16
    3145728U,	// t2SXTAH
    1280U,	// t2SXTB
    1280U,	// t2SXTB16
    1280U,	// t2SXTH
    0U,	// t2TBB
    0U,	// t2TBB_JT
    0U,	// t2TBH
    0U,	// t2TBH_JT
    512U,	// t2TEQri
    512U,	// t2TEQrr
    188U,	// t2TEQrs
    512U,	// t2TSTri
    512U,	// t2TSTrr
    188U,	// t2TSTrs
    0U,	// t2UADD16
    0U,	// t2UADD8
    0U,	// t2UASX
    17301504U,	// t2UBFX
    0U,	// t2UDIV
    0U,	// t2UHADD16
    0U,	// t2UHADD8
    0U,	// t2UHASX
    0U,	// t2UHSAX
    0U,	// t2UHSUB16
    0U,	// t2UHSUB8
    8912896U,	// t2UMAAL
    8912896U,	// t2UMLAL
    8912896U,	// t2UMULL
    0U,	// t2UQADD16
    0U,	// t2UQADD8
    0U,	// t2UQASX
    0U,	// t2UQSAX
    0U,	// t2UQSUB16
    0U,	// t2UQSUB8
    0U,	// t2USAD8
    8912896U,	// t2USADA8
    3670016U,	// t2USAT
    0U,	// t2USAT16
    0U,	// t2USAX
    0U,	// t2USUB16
    0U,	// t2USUB8
    3145728U,	// t2UXTAB
    3145728U,	// t2UXTAB16
    3145728U,	// t2UXTAH
    1280U,	// t2UXTB
    1280U,	// t2UXTB16
    1280U,	// t2UXTH
    0U,	// tADC
    524U,	// tADDhirr
    592U,	// tADDi3
    0U,	// tADDi8
    0U,	// tADDrSP
    278528U,	// tADDrSPi
    592U,	// tADDrr
    216U,	// tADDspi
    524U,	// tADDspr
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    512U,	// tADR
    0U,	// tAND
    220U,	// tASRri
    0U,	// tASRrr
    0U,	// tB
    0U,	// tBIC
    0U,	// tBKPT
    0U,	// tBL
    0U,	// tBLXi
    0U,	// tBLXr
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBX
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBcc
    0U,	// tBfar
    0U,	// tCBNZ
    0U,	// tCBZ
    0U,	// tCDP
    512U,	// tCMNz
    512U,	// tCMPhir
    512U,	// tCMPi8
    512U,	// tCMPr
    0U,	// tCPS
    0U,	// tEOR
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    552U,	// tLDMIA
    0U,	// tLDMIA_UPD
    224U,	// tLDRBi
    228U,	// tLDRBr
    232U,	// tLDRHi
    228U,	// tLDRHr
    228U,	// tLDRSB
    228U,	// tLDRSH
    236U,	// tLDRi
    0U,	// tLDRpci
    200U,	// tLDRpciASM
    0U,	// tLDRpci_pic
    228U,	// tLDRr
    240U,	// tLDRspi
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    592U,	// tLSLri
    0U,	// tLSLrr
    220U,	// tLSRri
    0U,	// tLSRrr
    0U,	// tMOVCCr_pseudo
    0U,	// tMOVSr
    0U,	// tMOVi8
    512U,	// tMOVr
    592U,	// tMUL
    0U,	// tMVN
    0U,	// tNOP
    0U,	// tORR
    0U,	// tPICADD
    0U,	// tPOP
    0U,	// tPOP_RET
    0U,	// tPUSH
    512U,	// tREV
    512U,	// tREV16
    512U,	// tREVSH
    0U,	// tROR
    0U,	// tRSB
    0U,	// tSBC
    0U,	// tSETEND
    0U,	// tSEV
    44U,	// tSTMIA_UPD
    224U,	// tSTRBi
    228U,	// tSTRBr
    232U,	// tSTRHi
    228U,	// tSTRHr
    236U,	// tSTRi
    228U,	// tSTRr
    240U,	// tSTRspi
    592U,	// tSUBi3
    0U,	// tSUBi8
    592U,	// tSUBrr
    216U,	// tSUBspi
    0U,	// tSVC
    512U,	// tSXTB
    512U,	// tSXTH
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTPsoft
    0U,	// tTRAP
    512U,	// tTST
    512U,	// tUXTB
    512U,	// tUXTH
    0U,	// tWFE
    0U,	// tWFI
    0U,	// tYIELD
    0U
  };

  const char AsmStrs[] = {
  /* 0 */ 'l', 'd', 'c', '2', 9, 0,
  /* 6 */ 'm', 'r', 'c', '2', 9, 0,
  /* 12 */ 'm', 'r', 'r', 'c', '2', 9, 0,
  /* 19 */ 's', 't', 'c', '2', 9, 0,
  /* 25 */ 'c', 'd', 'p', '2', 9, 0,
  /* 31 */ 'm', 'c', 'r', '2', 9, 0,
  /* 37 */ 'm', 'c', 'r', 'r', '2', 9, 0,
  /* 44 */ 'r', 'f', 'e', 'd', 'a', 9, 0,
  /* 51 */ 'r', 'f', 'e', 'i', 'a', 9, 0,
  /* 58 */ 'r', 'f', 'e', 'd', 'b', 9, 0,
  /* 65 */ 'r', 'f', 'e', 'i', 'b', 9, 0,
  /* 72 */ 'd', 'm', 'b', 9, 0,
  /* 77 */ 'd', 's', 'b', 9, 0,
  /* 82 */ 'i', 's', 'b', 9, 0,
  /* 87 */ 'm', 'r', 'c', 9, 0,
  /* 92 */ 'm', 'r', 'r', 'c', 9, 0,
  /* 98 */ 'p', 'l', 'd', 9, 0,
  /* 103 */ 's', 'e', 't', 'e', 'n', 'd', 9, 0,
  /* 111 */ 'p', 'l', 'i', 9, 0,
  /* 116 */ 'l', 'd', 'c', '2', 'l', 9, 0,
  /* 123 */ 's', 't', 'c', '2', 'l', 9, 0,
  /* 130 */ 'b', 'l', 9, 0,
  /* 134 */ 'c', 'd', 'p', 9, 0,
  /* 139 */ 'm', 'c', 'r', 9, 0,
  /* 144 */ 'm', 'c', 'r', 'r', 9, 0,
  /* 150 */ 'c', 'p', 's', 9, 0,
  /* 155 */ 'm', 'o', 'v', 's', 9, 0,
  /* 161 */ 'b', 'k', 'p', 't', 9, 0,
  /* 167 */ 'p', 'l', 'd', 'w', 9, 0,
  /* 173 */ 'b', 'x', 9, 0,
  /* 177 */ 'b', 'l', 'x', 9, 0,
  /* 182 */ 'c', 'b', 'z', 9, 0,
  /* 187 */ 'c', 'b', 'n', 'z', 9, 0,
  /* 193 */ 's', 'r', 's', 'd', 'a', 9, 's', 'p', '!', ',', 32, 0,
  /* 205 */ 's', 'r', 's', 'i', 'a', 9, 's', 'p', '!', ',', 32, 0,
  /* 217 */ 's', 'r', 's', 'd', 'b', 9, 's', 'p', '!', ',', 32, 0,
  /* 229 */ 's', 'r', 's', 'i', 'b', 9, 's', 'p', '!', ',', 32, 0,
  /* 241 */ 's', 'r', 's', 'd', 'a', 9, 's', 'p', ',', 32, 0,
  /* 252 */ 's', 'r', 's', 'i', 'a', 9, 's', 'p', ',', 32, 0,
  /* 263 */ 's', 'r', 's', 'd', 'b', 9, 's', 'p', ',', 32, 0,
  /* 274 */ 's', 'r', 's', 'i', 'b', 9, 's', 'p', ',', 32, 0,
  /* 285 */ 'v', 'l', 'd', '1', 0,
  /* 290 */ 'v', 's', 't', '1', 0,
  /* 295 */ 'v', 'r', 'e', 'v', '3', '2', 0,
  /* 302 */ 'l', 'd', 'c', '2', 0,
  /* 307 */ 's', 't', 'c', '2', 0,
  /* 312 */ 'v', 'l', 'd', '2', 0,
  /* 317 */ 'v', 's', 't', '2', 0,
  /* 322 */ 'v', 'l', 'd', '3', 0,
  /* 327 */ 'v', 's', 't', '3', 0,
  /* 332 */ 'v', 'r', 'e', 'v', '6', '4', 0,
  /* 339 */ 'v', 'l', 'd', '4', 0,
  /* 344 */ 'v', 's', 't', '4', 0,
  /* 349 */ 's', 'x', 't', 'a', 'b', '1', '6', 0,
  /* 357 */ 'u', 'x', 't', 'a', 'b', '1', '6', 0,
  /* 365 */ 's', 'x', 't', 'b', '1', '6', 0,
  /* 372 */ 'u', 'x', 't', 'b', '1', '6', 0,
  /* 379 */ 's', 'h', 's', 'u', 'b', '1', '6', 0,
  /* 387 */ 'u', 'h', 's', 'u', 'b', '1', '6', 0,
  /* 395 */ 'u', 'q', 's', 'u', 'b', '1', '6', 0,
  /* 403 */ 's', 's', 'u', 'b', '1', '6', 0,
  /* 410 */ 'u', 's', 'u', 'b', '1', '6', 0,
  /* 417 */ 's', 'h', 'a', 'd', 'd', '1', '6', 0,
  /* 425 */ 'u', 'h', 'a', 'd', 'd', '1', '6', 0,
  /* 433 */ 'u', 'q', 'a', 'd', 'd', '1', '6', 0,
  /* 441 */ 's', 'a', 'd', 'd', '1', '6', 0,
  /* 448 */ 'u', 'a', 'd', 'd', '1', '6', 0,
  /* 455 */ 's', 's', 'a', 't', '1', '6', 0,
  /* 462 */ 'u', 's', 'a', 't', '1', '6', 0,
  /* 469 */ 'v', 'r', 'e', 'v', '1', '6', 0,
  /* 476 */ 'u', 's', 'a', 'd', 'a', '8', 0,
  /* 483 */ 's', 'h', 's', 'u', 'b', '8', 0,
  /* 490 */ 'u', 'h', 's', 'u', 'b', '8', 0,
  /* 497 */ 'u', 'q', 's', 'u', 'b', '8', 0,
  /* 504 */ 's', 's', 'u', 'b', '8', 0,
  /* 510 */ 'u', 's', 'u', 'b', '8', 0,
  /* 516 */ 'u', 's', 'a', 'd', '8', 0,
  /* 522 */ 's', 'h', 'a', 'd', 'd', '8', 0,
  /* 529 */ 'u', 'h', 'a', 'd', 'd', '8', 0,
  /* 536 */ 'u', 'q', 'a', 'd', 'd', '8', 0,
  /* 543 */ 's', 'a', 'd', 'd', '8', 0,
  /* 549 */ 'u', 'a', 'd', 'd', '8', 0,
  /* 555 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 568 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 575 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 585 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 600 */ 'v', 'a', 'b', 'a', 0,
  /* 605 */ 'l', 'd', 'm', 'd', 'a', 0,
  /* 611 */ 's', 't', 'm', 'd', 'a', 0,
  /* 617 */ 'r', 'f', 'e', 'i', 'a', 0,
  /* 623 */ 'v', 'l', 'd', 'm', 'i', 'a', 0,
  /* 630 */ 'v', 's', 't', 'm', 'i', 'a', 0,
  /* 637 */ 's', 'r', 's', 'i', 'a', 0,
  /* 643 */ 's', 'm', 'm', 'l', 'a', 0,
  /* 649 */ 'v', 'n', 'm', 'l', 'a', 0,
  /* 655 */ 'v', 'm', 'l', 'a', 0,
  /* 660 */ 'v', 'f', 'm', 'a', 0,
  /* 665 */ 'v', 'f', 'n', 'm', 'a', 0,
  /* 671 */ 'v', 'r', 's', 'r', 'a', 0,
  /* 677 */ 'v', 's', 'r', 'a', 0,
  /* 682 */ 's', 'x', 't', 'a', 'b', 0,
  /* 688 */ 'u', 'x', 't', 'a', 'b', 0,
  /* 694 */ 's', 'm', 'l', 'a', 'b', 'b', 0,
  /* 701 */ 's', 'm', 'l', 'a', 'l', 'b', 'b', 0,
  /* 709 */ 's', 'm', 'u', 'l', 'b', 'b', 0,
  /* 716 */ 't', 'b', 'b', 0,
  /* 720 */ 'r', 'f', 'e', 'd', 'b', 0,
  /* 726 */ 'v', 'l', 'd', 'm', 'd', 'b', 0,
  /* 733 */ 'v', 's', 't', 'm', 'd', 'b', 0,
  /* 740 */ 's', 'r', 's', 'd', 'b', 0,
  /* 746 */ 'l', 'd', 'm', 'i', 'b', 0,
  /* 752 */ 's', 't', 'm', 'i', 'b', 0,
  /* 758 */ 's', 'w', 'p', 'b', 0,
  /* 763 */ 'l', 'd', 'r', 'b', 0,
  /* 768 */ 's', 't', 'r', 'b', 0,
  /* 773 */ 'l', 'd', 'r', 's', 'b', 0,
  /* 779 */ 's', 'm', 'l', 'a', 't', 'b', 0,
  /* 786 */ 'p', 'k', 'h', 't', 'b', 0,
  /* 792 */ 's', 'm', 'l', 'a', 'l', 't', 'b', 0,
  /* 800 */ 's', 'm', 'u', 'l', 't', 'b', 0,
  /* 807 */ 'v', 'c', 'v', 't', 'b', 0,
  /* 813 */ 's', 'x', 't', 'b', 0,
  /* 818 */ 'u', 'x', 't', 'b', 0,
  /* 823 */ 'q', 'd', 's', 'u', 'b', 0,
  /* 829 */ 'v', 'h', 's', 'u', 'b', 0,
  /* 835 */ 'v', 'q', 's', 'u', 'b', 0,
  /* 841 */ 'v', 's', 'u', 'b', 0,
  /* 846 */ 's', 'm', 'l', 'a', 'w', 'b', 0,
  /* 853 */ 's', 'm', 'u', 'l', 'w', 'b', 0,
  /* 860 */ 'l', 'd', 'r', 'e', 'x', 'b', 0,
  /* 867 */ 's', 't', 'r', 'e', 'x', 'b', 0,
  /* 874 */ 's', 'b', 'c', 0,
  /* 878 */ 'a', 'd', 'c', 0,
  /* 882 */ 'l', 'd', 'c', 0,
  /* 886 */ 'b', 'f', 'c', 0,
  /* 890 */ 'v', 'b', 'i', 'c', 0,
  /* 895 */ 's', 'm', 'c', 0,
  /* 899 */ 'm', 'r', 'c', 0,
  /* 903 */ 'm', 'r', 'r', 'c', 0,
  /* 908 */ 'r', 's', 'c', 0,
  /* 912 */ 's', 't', 'c', 0,
  /* 916 */ 's', 'v', 'c', 0,
  /* 920 */ 's', 'm', 'l', 'a', 'd', 0,
  /* 926 */ 's', 'm', 'u', 'a', 'd', 0,
  /* 932 */ 'v', 'a', 'b', 'd', 0,
  /* 937 */ 'q', 'd', 'a', 'd', 'd', 0,
  /* 943 */ 'v', 'r', 'h', 'a', 'd', 'd', 0,
  /* 950 */ 'v', 'h', 'a', 'd', 'd', 0,
  /* 956 */ 'v', 'p', 'a', 'd', 'd', 0,
  /* 962 */ 'v', 'q', 'a', 'd', 'd', 0,
  /* 968 */ 'v', 'a', 'd', 'd', 0,
  /* 973 */ 's', 'm', 'l', 'a', 'l', 'd', 0,
  /* 980 */ 'y', 'i', 'e', 'l', 'd', 0,
  /* 986 */ 'p', 'l', 'd', 0,
  /* 990 */ 's', 'm', 'l', 's', 'l', 'd', 0,
  /* 997 */ 'v', 'a', 'n', 'd', 0,
  /* 1002 */ 'l', 'd', 'r', 'd', 0,
  /* 1007 */ 's', 't', 'r', 'd', 0,
  /* 1012 */ 's', 'm', 'l', 's', 'd', 0,
  /* 1018 */ 's', 'm', 'u', 's', 'd', 0,
  /* 1024 */ 'l', 'd', 'r', 'e', 'x', 'd', 0,
  /* 1031 */ 's', 't', 'r', 'e', 'x', 'd', 0,
  /* 1038 */ 'w', 'f', 'e', 0,
  /* 1042 */ 'v', 'a', 'c', 'g', 'e', 0,
  /* 1048 */ 'v', 'c', 'g', 'e', 0,
  /* 1053 */ 'v', 'c', 'l', 'e', 0,
  /* 1058 */ 'v', 'r', 'e', 'c', 'p', 'e', 0,
  /* 1065 */ 'v', 'c', 'm', 'p', 'e', 0,
  /* 1071 */ 'v', 'r', 's', 'q', 'r', 't', 'e', 0,
  /* 1079 */ 'v', 'b', 'i', 'f', 0,
  /* 1084 */ 'd', 'b', 'g', 0,
  /* 1088 */ 'v', 'q', 'n', 'e', 'g', 0,
  /* 1094 */ 'v', 'n', 'e', 'g', 0,
  /* 1099 */ 's', 'x', 't', 'a', 'h', 0,
  /* 1105 */ 'u', 'x', 't', 'a', 'h', 0,
  /* 1111 */ 't', 'b', 'h', 0,
  /* 1115 */ 'v', 'q', 'd', 'm', 'u', 'l', 'h', 0,
  /* 1123 */ 'v', 'q', 'r', 'd', 'm', 'u', 'l', 'h', 0,
  /* 1132 */ 'l', 'd', 'r', 'h', 0,
  /* 1137 */ 's', 't', 'r', 'h', 0,
  /* 1142 */ 'l', 'd', 'r', 's', 'h', 0,
  /* 1148 */ 'p', 'u', 's', 'h', 0,
  /* 1153 */ 'r', 'e', 'v', 's', 'h', 0,
  /* 1159 */ 's', 'x', 't', 'h', 0,
  /* 1164 */ 'u', 'x', 't', 'h', 0,
  /* 1169 */ 'l', 'd', 'r', 'e', 'x', 'h', 0,
  /* 1176 */ 's', 't', 'r', 'e', 'x', 'h', 0,
  /* 1183 */ 'b', 'f', 'i', 0,
  /* 1187 */ 'w', 'f', 'i', 0,
  /* 1191 */ 'p', 'l', 'i', 0,
  /* 1195 */ 'v', 's', 'l', 'i', 0,
  /* 1200 */ 'v', 's', 'r', 'i', 0,
  /* 1205 */ 'b', 'x', 'j', 0,
  /* 1209 */ 'l', 'd', 'c', '2', 'l', 0,
  /* 1215 */ 's', 't', 'c', '2', 'l', 0,
  /* 1221 */ 'u', 'm', 'a', 'a', 'l', 0,
  /* 1227 */ 'v', 'a', 'b', 'a', 'l', 0,
  /* 1233 */ 'v', 'p', 'a', 'd', 'a', 'l', 0,
  /* 1240 */ 'v', 'q', 'd', 'm', 'l', 'a', 'l', 0,
  /* 1248 */ 's', 'm', 'l', 'a', 'l', 0,
  /* 1254 */ 'u', 'm', 'l', 'a', 'l', 0,
  /* 1260 */ 'v', 'm', 'l', 'a', 'l', 0,
  /* 1266 */ 'v', 't', 'b', 'l', 0,
  /* 1271 */ 'v', 's', 'u', 'b', 'l', 0,
  /* 1277 */ 'l', 'd', 'c', 'l', 0,
  /* 1282 */ 's', 't', 'c', 'l', 0,
  /* 1287 */ 'v', 'a', 'b', 'd', 'l', 0,
  /* 1293 */ 'v', 'p', 'a', 'd', 'd', 'l', 0,
  /* 1300 */ 'v', 'a', 'd', 'd', 'l', 0,
  /* 1306 */ 's', 'e', 'l', 0,
  /* 1310 */ 'v', 'q', 's', 'h', 'l', 0,
  /* 1316 */ 'v', 'q', 'r', 's', 'h', 'l', 0,
  /* 1323 */ 'v', 'r', 's', 'h', 'l', 0,
  /* 1329 */ 'v', 's', 'h', 'l', 0,
  /* 1334 */ 'v', 's', 'h', 'l', 'l', 0,
  /* 1340 */ 'v', 'q', 'd', 'm', 'u', 'l', 'l', 0,
  /* 1348 */ 's', 'm', 'u', 'l', 'l', 0,
  /* 1354 */ 'u', 'm', 'u', 'l', 'l', 0,
  /* 1360 */ 'v', 'm', 'u', 'l', 'l', 0,
  /* 1366 */ 'v', 'b', 's', 'l', 0,
  /* 1371 */ 'v', 'q', 'd', 'm', 'l', 's', 'l', 0,
  /* 1379 */ 'v', 'm', 'l', 's', 'l', 0,
  /* 1385 */ 's', 'm', 'm', 'u', 'l', 0,
  /* 1391 */ 'v', 'n', 'm', 'u', 'l', 0,
  /* 1397 */ 'v', 'm', 'u', 'l', 0,
  /* 1402 */ 'v', 'm', 'o', 'v', 'l', 0,
  /* 1408 */ 'l', 'd', 'm', 0,
  /* 1412 */ 's', 't', 'm', 0,
  /* 1416 */ 'v', 'r', 's', 'u', 'b', 'h', 'n', 0,
  /* 1424 */ 'v', 's', 'u', 'b', 'h', 'n', 0,
  /* 1431 */ 'v', 'r', 'a', 'd', 'd', 'h', 'n', 0,
  /* 1439 */ 'v', 'a', 'd', 'd', 'h', 'n', 0,
  /* 1446 */ 'v', 'p', 'm', 'i', 'n', 0,
  /* 1452 */ 'v', 'm', 'i', 'n', 0,
  /* 1457 */ 'c', 'm', 'n', 0,
  /* 1461 */ 'v', 'q', 's', 'h', 'r', 'n', 0,
  /* 1468 */ 'v', 'q', 'r', 's', 'h', 'r', 'n', 0,
  /* 1476 */ 'v', 'r', 's', 'h', 'r', 'n', 0,
  /* 1483 */ 'v', 's', 'h', 'r', 'n', 0,
  /* 1489 */ 'v', 'o', 'r', 'n', 0,
  /* 1494 */ 'v', 't', 'r', 'n', 0,
  /* 1499 */ 'v', 'q', 's', 'h', 'r', 'u', 'n', 0,
  /* 1507 */ 'v', 'q', 'r', 's', 'h', 'r', 'u', 'n', 0,
  /* 1516 */ 'v', 'q', 'm', 'o', 'v', 'u', 'n', 0,
  /* 1524 */ 'v', 'm', 'v', 'n', 0,
  /* 1529 */ 'v', 'q', 'm', 'o', 'v', 'n', 0,
  /* 1536 */ 'v', 'm', 'o', 'v', 'n', 0,
  /* 1542 */ 't', 'r', 'a', 'p', 0,
  /* 1547 */ 'c', 'd', 'p', 0,
  /* 1551 */ 'v', 'z', 'i', 'p', 0,
  /* 1556 */ 'v', 'c', 'm', 'p', 0,
  /* 1561 */ 'n', 'o', 'p', 0,
  /* 1565 */ 'p', 'o', 'p', 0,
  /* 1569 */ 'v', 'd', 'u', 'p', 0,
  /* 1574 */ 'v', 's', 'w', 'p', 0,
  /* 1579 */ 'v', 'u', 'z', 'p', 0,
  /* 1584 */ 'v', 'c', 'e', 'q', 0,
  /* 1589 */ 't', 'e', 'q', 0,
  /* 1593 */ 's', 'm', 'm', 'l', 'a', 'r', 0,
  /* 1600 */ 'm', 'c', 'r', 0,
  /* 1604 */ 'a', 'd', 'r', 0,
  /* 1608 */ 'v', 'l', 'd', 'r', 0,
  /* 1613 */ 'v', 'r', 's', 'h', 'r', 0,
  /* 1619 */ 'v', 's', 'h', 'r', 0,
  /* 1624 */ 's', 'm', 'm', 'u', 'l', 'r', 0,
  /* 1631 */ 'v', 'e', 'o', 'r', 0,
  /* 1636 */ 'r', 'o', 'r', 0,
  /* 1640 */ 'm', 'c', 'r', 'r', 0,
  /* 1645 */ 'v', 'o', 'r', 'r', 0,
  /* 1650 */ 'a', 's', 'r', 0,
  /* 1654 */ 's', 'm', 'm', 'l', 's', 'r', 0,
  /* 1661 */ 'v', 'm', 's', 'r', 0,
  /* 1666 */ 'v', 's', 't', 'r', 0,
  /* 1671 */ 'v', 'c', 'v', 't', 'r', 0,
  /* 1677 */ 'v', 'q', 'a', 'b', 's', 0,
  /* 1683 */ 'v', 'a', 'b', 's', 0,
  /* 1688 */ 'v', 'c', 'l', 's', 0,
  /* 1693 */ 's', 'm', 'm', 'l', 's', 0,
  /* 1699 */ 'v', 'n', 'm', 'l', 's', 0,
  /* 1705 */ 'v', 'm', 'l', 's', 0,
  /* 1710 */ 'v', 'f', 'm', 's', 0,
  /* 1715 */ 'v', 'f', 'n', 'm', 's', 0,
  /* 1721 */ 'v', 'r', 'e', 'c', 'p', 's', 0,
  /* 1728 */ 'v', 'm', 'r', 's', 0,
  /* 1733 */ 'a', 's', 'r', 's', 0,
  /* 1738 */ 'l', 's', 'r', 's', 0,
  /* 1743 */ 'v', 'r', 's', 'q', 'r', 't', 's', 0,
  /* 1751 */ 'm', 'o', 'v', 's', 0,
  /* 1756 */ 's', 's', 'a', 't', 0,
  /* 1761 */ 'u', 's', 'a', 't', 0,
  /* 1766 */ 's', 'm', 'l', 'a', 'b', 't', 0,
  /* 1773 */ 'p', 'k', 'h', 'b', 't', 0,
  /* 1779 */ 's', 'm', 'l', 'a', 'l', 'b', 't', 0,
  /* 1787 */ 's', 'm', 'u', 'l', 'b', 't', 0,
  /* 1794 */ 'l', 'd', 'r', 'b', 't', 0,
  /* 1800 */ 's', 't', 'r', 'b', 't', 0,
  /* 1806 */ 'l', 'd', 'r', 's', 'b', 't', 0,
  /* 1813 */ 'v', 'a', 'c', 'g', 't', 0,
  /* 1819 */ 'v', 'c', 'g', 't', 0,
  /* 1824 */ 'l', 'd', 'r', 'h', 't', 0,
  /* 1830 */ 's', 't', 'r', 'h', 't', 0,
  /* 1836 */ 'l', 'd', 'r', 's', 'h', 't', 0,
  /* 1843 */ 'r', 'b', 'i', 't', 0,
  /* 1848 */ 'v', 'b', 'i', 't', 0,
  /* 1853 */ 'v', 'c', 'l', 't', 0,
  /* 1858 */ 'v', 'c', 'n', 't', 0,
  /* 1863 */ 'h', 'i', 'n', 't', 0,
  /* 1868 */ 'b', 'k', 'p', 't', 0,
  /* 1873 */ 'l', 'd', 'r', 't', 0,
  /* 1878 */ 'v', 's', 'q', 'r', 't', 0,
  /* 1884 */ 's', 't', 'r', 't', 0,
  /* 1889 */ 'v', 't', 's', 't', 0,
  /* 1894 */ 's', 'm', 'l', 'a', 't', 't', 0,
  /* 1901 */ 's', 'm', 'l', 'a', 'l', 't', 't', 0,
  /* 1909 */ 's', 'm', 'u', 'l', 't', 't', 0,
  /* 1916 */ 'v', 'c', 'v', 't', 't', 0,
  /* 1922 */ 'v', 'c', 'v', 't', 0,
  /* 1927 */ 'm', 'o', 'v', 't', 0,
  /* 1932 */ 's', 'm', 'l', 'a', 'w', 't', 0,
  /* 1939 */ 's', 'm', 'u', 'l', 'w', 't', 0,
  /* 1946 */ 'v', 'e', 'x', 't', 0,
  /* 1951 */ 'v', 'q', 's', 'h', 'l', 'u', 0,
  /* 1958 */ 'r', 'e', 'v', 0,
  /* 1962 */ 's', 'e', 'v', 0,
  /* 1966 */ 's', 'd', 'i', 'v', 0,
  /* 1971 */ 'u', 'd', 'i', 'v', 0,
  /* 1976 */ 'v', 'd', 'i', 'v', 0,
  /* 1981 */ 'v', 'm', 'o', 'v', 0,
  /* 1986 */ 'v', 's', 'u', 'b', 'w', 0,
  /* 1992 */ 'v', 'a', 'd', 'd', 'w', 0,
  /* 1998 */ 'p', 'l', 'd', 'w', 0,
  /* 2003 */ 'm', 'o', 'v', 'w', 0,
  /* 2008 */ 'v', 'p', 'm', 'a', 'x', 0,
  /* 2014 */ 'v', 'm', 'a', 'x', 0,
  /* 2019 */ 's', 'h', 's', 'a', 'x', 0,
  /* 2025 */ 'u', 'h', 's', 'a', 'x', 0,
  /* 2031 */ 'u', 'q', 's', 'a', 'x', 0,
  /* 2037 */ 's', 's', 'a', 'x', 0,
  /* 2042 */ 'u', 's', 'a', 'x', 0,
  /* 2047 */ 'v', 't', 'b', 'x', 0,
  /* 2052 */ 's', 'm', 'l', 'a', 'd', 'x', 0,
  /* 2059 */ 's', 'm', 'u', 'a', 'd', 'x', 0,
  /* 2066 */ 's', 'm', 'l', 'a', 'l', 'd', 'x', 0,
  /* 2074 */ 's', 'm', 'l', 's', 'l', 'd', 'x', 0,
  /* 2082 */ 's', 'm', 'l', 's', 'd', 'x', 0,
  /* 2089 */ 's', 'm', 'u', 's', 'd', 'x', 0,
  /* 2096 */ 'l', 'd', 'r', 'e', 'x', 0,
  /* 2102 */ 'c', 'l', 'r', 'e', 'x', 0,
  /* 2108 */ 's', 't', 'r', 'e', 'x', 0,
  /* 2114 */ 's', 'b', 'f', 'x', 0,
  /* 2119 */ 'u', 'b', 'f', 'x', 0,
  /* 2124 */ 'b', 'l', 'x', 0,
  /* 2128 */ 'r', 'r', 'x', 0,
  /* 2132 */ 's', 'h', 'a', 's', 'x', 0,
  /* 2138 */ 'u', 'h', 'a', 's', 'x', 0,
  /* 2144 */ 'u', 'q', 'a', 's', 'x', 0,
  /* 2150 */ 's', 'a', 's', 'x', 0,
  /* 2155 */ 'u', 'a', 's', 'x', 0,
  /* 2160 */ 'v', 'c', 'l', 'z', 0,
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits1 = OpInfo[MI->getOpcode()];
  uint64_t Bits2 = OpInfo2[MI->getOpcode()];
  uint64_t Bits = (Bits2 << 32) | Bits1;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 4095)-1;


  // Fragment 0 encoded into 5 bits for 28 unique commands.
  switch ((Bits >> 12) & 31) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, CLREX, TRAP, TRAPNaCl...
    return;
    break;
  case 1:
    // ADCri, ADCrr, ADDri, ADDrr, ANDri, ANDrr, ASRi, ASRr, BICri, BICrr, EO...
    printSBitModifierOperand(MI, 5, O); 
    printPredicateOperand(MI, 3, O); 
    break;
  case 2:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, MLA, MOVsr, MVNsr, ORRrsi, RSB...
    printSBitModifierOperand(MI, 6, O); 
    printPredicateOperand(MI, 4, O); 
    break;
  case 3:
    // ADCrsr, ADDrsr, ANDrsr, BICrsr, EORrsr, ORRrsr, RSBrsr, RSCrsr, SBCrsr...
    printSBitModifierOperand(MI, 7, O); 
    printPredicateOperand(MI, 5, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printSORegRegOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // ADR, CLZ, CMNri, CMNzrr, CMPri, CMPrr, FCONSTD, FCONSTS, LDMDA_UPD, LD...
    printPredicateOperand(MI, 2, O); 
    break;
  case 5:
    // BFC, CMNzrsi, CMPrsi, LDRBi12, LDRcp, LDRi12, MOVTi16, QADD, QADD16, Q...
    printPredicateOperand(MI, 3, O); 
    break;
  case 6:
    // BFI, CMNzrsr, CMPrsr, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, L...
    printPredicateOperand(MI, 4, O); 
    break;
  case 7:
    // BKPT, BLX_pred, BL_pred, BXJ, BX_pred, Bcc, DBG, HINT, LDMDA, LDMDB, L...
    printPredicateOperand(MI, 1, O); 
    break;
  case 8:
    // BL, BLX, BLXi, BX, CPS1p, RFEDA, RFEDA_UPD, RFEDB, RFEDB_UPD, RFEIA, R...
    printOperand(MI, 0, O); 
    break;
  case 9:
    // BX_RET, FMSTAT, MOVPCLR, t2CLREX, tBL, tBLXi, tBLXr, tNOP, tPOP, tPUSH...
    printPredicateOperand(MI, 0, O); 
    break;
  case 10:
    // CDP, LDRD_POST, LDRD_PRE, MCR, MRC, STRD_POST, STRD_PRE, VLD4DUPd16, V...
    printPredicateOperand(MI, 6, O); 
    break;
  case 11:
    // CDP2, LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, ...
    printPImmediate(MI, 0, O); 
    O << ", "; 
    break;
  case 12:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIMod(MI, 0, O); 
    break;
  case 13:
    // DMB, DSB, ISB, t2DMB, t2DSB, t2ISB
    printMemBOption(MI, 0, O); 
    return;
    break;
  case 14:
    // ITasm, t2IT
    printThumbITMask(MI, 1, O); 
    break;
  case 15:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRB_PRE...
    printPredicateOperand(MI, 5, O); 
    break;
  case 16:
    // MOVi, MOVr, MOVr_TC, MVNi, MVNr, RRXi, t2MOVi, t2MOVr, t2MVNi, t2MVNr,...
    printSBitModifierOperand(MI, 4, O); 
    printPredicateOperand(MI, 2, O); 
    break;
  case 17:
    // MRC2, t2MRC, t2MRC2
    printPImmediate(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printCImmediate(MI, 3, O); 
    O << ", "; 
    printCImmediate(MI, 4, O); 
    O << ", "; 
    printOperand(MI, 5, O); 
    return;
    break;
  case 18:
    // PLDWi12, PLDi12, PLIi12
    printAddrModeImm12Operand<false>(MI, 0, O); 
    return;
    break;
  case 19:
    // PLDWrs, PLDrs, PLIrs
    printAddrMode2Operand(MI, 0, O); 
    return;
    break;
  case 20:
    // SETEND, tSETEND
    printSetendOperand(MI, 0, O); 
    return;
    break;
  case 21:
    // SMLAL, UMLAL
    printSBitModifierOperand(MI, 8, O); 
    printPredicateOperand(MI, 6, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 22:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printPredicateOperand(MI, 7, O); 
    break;
  case 23:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printPredicateOperand(MI, 9, O); 
    break;
  case 24:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printPredicateOperand(MI, 11, O); 
    break;
  case 25:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printPredicateOperand(MI, 8, O); 
    break;
  case 26:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printPredicateOperand(MI, 13, O); 
    break;
  case 27:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printSBitModifierOperand(MI, 1, O); 
    break;
  }


  // Fragment 1 encoded into 6 bits for 61 unique commands.
  switch ((Bits >> 17) & 63) {
  default:   // unreachable.
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    O << "\t"; 
    break;
  case 1:
    // ASRi, ASRr, ITasm, LSLi, LSLr, LSRi, LSRr, RORi, RORr, RRXi, t2LDRBpcr...
    O << ' '; 
    break;
  case 2:
    // BL, BLX, BLXi, BX, CPS1p, RFEDA, RFEDB, RFEIA, RFEIB, SRSDA, SRSDA_UPD...
    return;
    break;
  case 3:
    // BX_RET
    O << "\tlr"; 
    return;
    break;
  case 4:
    // CDP2, MCR2, MCRR2, MRRC2, t2CDP2, t2MCR, t2MCR2, t2MCRR, t2MCRR2, t2MR...
    printOperand(MI, 1, O); 
    O << ", "; 
    break;
  case 5:
    // FCONSTD, VABSD, VADDD, VCMPD, VCMPED, VCMPEZD, VCMPZD, VDIVD, VFMAD, V...
    O << ".f64\t"; 
    printOperand(MI, 0, O); 
    break;
  case 6:
    // FCONSTS, VABDfd, VABDfq, VABSS, VABSfd, VABSfq, VACGEd, VACGEq, VACGTd...
    O << ".f32\t"; 
    printOperand(MI, 0, O); 
    break;
  case 7:
    // FMSTAT
    O << "\tAPSR_nzcv, fpscr"; 
    return;
    break;
  case 8:
    // LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, LDC2_O...
    printCImmediate(MI, 1, O); 
    O << ", "; 
    break;
  case 9:
    // MOVPCLR
    O << "\tpc, lr"; 
    return;
    break;
  case 10:
    // RFEDA_UPD, RFEDB_UPD, RFEIA_UPD, RFEIB_UPD
    O << '!'; 
    return;
    break;
  case 11:
    // VABALsv2i64, VABAsv2i32, VABAsv4i32, VABDLsv2i64, VABDsv2i32, VABDsv4i...
    O << ".s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 12:
    // VABALsv4i32, VABAsv4i16, VABAsv8i16, VABDLsv4i32, VABDsv4i16, VABDsv8i...
    O << ".s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 13:
    // VABALsv8i16, VABAsv16i8, VABAsv8i8, VABDLsv8i16, VABDsv16i8, VABDsv8i8...
    O << ".s8\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 14:
    // VABALuv2i64, VABAuv2i32, VABAuv4i32, VABDLuv2i64, VABDuv2i32, VABDuv4i...
    O << ".u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 15:
    // VABALuv4i32, VABAuv4i16, VABAuv8i16, VABDLuv4i32, VABDuv4i16, VABDuv8i...
    O << ".u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 16:
    // VABALuv8i16, VABAuv16i8, VABAuv8i8, VABDLuv8i16, VABDuv16i8, VABDuv8i8...
    O << ".u8\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 17:
    // VADDHNv2i32, VADDv1i64, VADDv2i64, VMOVNv2i32, VMOVv1i64, VMOVv2i64, V...
    O << ".i64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 18:
    // VADDHNv4i16, VADDv2i32, VADDv4i32, VBICiv2i32, VBICiv4i32, VCEQv2i32, ...
    O << ".i32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 19:
    // VADDHNv8i8, VADDv4i16, VADDv8i16, VBICiv4i16, VBICiv8i16, VCEQv4i16, V...
    O << ".i16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 20:
    // VADDv16i8, VADDv8i8, VCEQv16i8, VCEQv8i8, VCEQzv16i8, VCEQzv8i8, VCLZv...
    O << ".i8\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 21:
    // VCNTd, VCNTq, VDUP8d, VDUP8q, VDUPLN8d, VDUPLN8q, VEXTd8, VEXTq8, VLD1...
    O << ".8\t"; 
    break;
  case 22:
    // VCVTBHS, VCVTTHS, VCVTh2f
    O << ".f32.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 23:
    // VCVTBSH, VCVTTSH, VCVTf2h
    O << ".f16.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 24:
    // VCVTDS
    O << ".f64.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 25:
    // VCVTSD
    O << ".f32.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 26:
    // VCVTf2sd, VCVTf2sq, VCVTf2xsd, VCVTf2xsq, VTOSIRS, VTOSIZS, VTOSLS
    O << ".s32.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 27:
    // VCVTf2ud, VCVTf2uq, VCVTf2xud, VCVTf2xuq, VTOUIRS, VTOUIZS, VTOULS
    O << ".u32.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 28:
    // VCVTs2fd, VCVTs2fq, VCVTxs2fd, VCVTxs2fq, VSITOS, VSLTOS
    O << ".f32.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 29:
    // VCVTu2fd, VCVTu2fq, VCVTxu2fd, VCVTxu2fq, VUITOS, VULTOS
    O << ".f32.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 30:
    // VDUP16d, VDUP16q, VDUPLN16d, VDUPLN16q, VEXTd16, VEXTq16, VLD1DUPd16, ...
    O << ".16\t"; 
    break;
  case 31:
    // VDUP32d, VDUP32q, VDUPLN32d, VDUPLN32q, VEXTd32, VEXTq32, VGETLNi32, V...
    O << ".32\t"; 
    break;
  case 32:
    // VEXTq64, VLD1d64, VLD1d64Q, VLD1d64Qwb_fixed, VLD1d64Qwb_register, VLD...
    O << ".64\t"; 
    break;
  case 33:
    // VLD1LNd16, VLD1LNd16_UPD, VLD2LNd16, VLD2LNd16_UPD, VLD2LNq16, VLD2LNq...
    O << ".16\t{"; 
    break;
  case 34:
    // VLD1LNd32, VLD1LNd32_UPD, VLD2LNd32, VLD2LNd32_UPD, VLD2LNq32, VLD2LNq...
    O << ".32\t{"; 
    break;
  case 35:
    // VLD1LNd8, VLD1LNd8_UPD, VLD2LNd8, VLD2LNd8_UPD, VLD3DUPd8, VLD3DUPd8_U...
    O << ".8\t{"; 
    break;
  case 36:
    // VMSR
    O << "\tfpscr, "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 37:
    // VMSR_FPEXC
    O << "\tfpexc, "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 38:
    // VMSR_FPSID
    O << "\tfpsid, "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 39:
    // VMULLp, VMULpd, VMULpq
    O << ".p8\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 40:
    // VQADDsv1i64, VQADDsv2i64, VQMOVNsuv2i32, VQMOVNsv2i32, VQRSHLsv1i64, V...
    O << ".s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 41:
    // VQADDuv1i64, VQADDuv2i64, VQMOVNuv2i32, VQRSHLuv1i64, VQRSHLuv2i64, VQ...
    O << ".u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 42:
    // VSHTOD
    O << ".f64.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 43:
    // VSHTOS
    O << ".f32.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 44:
    // VSITOD, VSLTOD
    O << ".f64.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 45:
    // VTOSHD
    O << ".s16.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 46:
    // VTOSHS
    O << ".s16.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 47:
    // VTOSIRD, VTOSIZD, VTOSLD
    O << ".s32.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 48:
    // VTOUHD
    O << ".u16.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 49:
    // VTOUHS
    O << ".u16.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 50:
    // VTOUIRD, VTOUIZD, VTOULD
    O << ".u32.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 51:
    // VUHTOD
    O << ".f64.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 52:
    // VUHTOS
    O << ".f32.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printFBits16(MI, 2, O); 
    return;
    break;
  case 53:
    // VUITOD, VULTOD
    O << ".f64.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 54:
    // t2ADCrr, t2ADCrs, t2ADDri, t2ADDrr, t2ADDrs, t2ADR, t2ANDrr, t2ANDrs, ...
    O << ".w\t"; 
    break;
  case 55:
    // t2SRSDB, t2SRSIA
    O << "\tsp, "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 56:
    // t2SRSDB_UPD, t2SRSIA_UPD
    O << "\tsp!, "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 57:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printPredicateOperand(MI, 4, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 58:
    // tCBNZ, tCBZ, tMOVSr
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 59:
    // tLDRpci
    O << ".n\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printThumbLdrLabelOperand(MI, 1, O); 
    return;
    break;
  case 60:
    // tMOVi8, tMVN, tRSB
    printPredicateOperand(MI, 3, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    break;
  }


  // Fragment 2 encoded into 6 bits for 54 unique commands.
  switch ((Bits >> 23) & 63) {
  default:   // unreachable.
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    printOperand(MI, 0, O); 
    break;
  case 1:
    // CDP, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OP...
    printPImmediate(MI, 0, O); 
    O << ", "; 
    break;
  case 2:
    // CDP2, t2CDP2, tCDP
    printCImmediate(MI, 2, O); 
    O << ", "; 
    printCImmediate(MI, 3, O); 
    O << ", "; 
    printCImmediate(MI, 4, O); 
    O << ", "; 
    printOperand(MI, 5, O); 
    return;
    break;
  case 3:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIFlag(MI, 1, O); 
    break;
  case 4:
    // FCONSTD, FCONSTS, VABDfd, VABDfq, VABSD, VABSS, VABSfd, VABSfq, VACGEd...
    O << ", "; 
    break;
  case 5:
    // ITasm, t2IT
    printMandatoryPredicateOperand(MI, 0, O); 
    return;
    break;
  case 6:
    // LDC2L_OFFSET, LDC2_OFFSET, STC2L_OFFSET, STC2_OFFSET
    printAddrMode5Operand<false>(MI, 2, O); 
    return;
    break;
  case 7:
    // LDC2L_OPTION, LDC2L_POST, LDC2_OPTION, LDC2_POST, STC2L_OPTION, STC2L_...
    printAddrMode7Operand(MI, 2, O); 
    O << ", "; 
    break;
  case 8:
    // LDC2L_PRE, LDC2_PRE, STC2L_PRE, STC2_PRE
    printAddrMode5Operand<true>(MI, 2, O); 
    O << '!'; 
    return;
    break;
  case 9:
    // LDMDA_UPD, LDMDB_UPD, LDMIA_UPD, LDMIB_UPD, STMDA_UPD, STMDB_UPD, STMI...
    printOperand(MI, 1, O); 
    break;
  case 10:
    // LDREXD
    printGPRPairOperand(MI, 0, O); 
    O << ", "; 
    printAddrMode7Operand(MI, 1, O); 
    return;
    break;
  case 11:
    // MCR2, MCRR2, MRRC2, VABALsv2i64, VABALsv4i32, VABALsv8i16, VABALuv2i64...
    printOperand(MI, 2, O); 
    break;
  case 12:
    // MRC
    printPImmediate(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printCImmediate(MI, 3, O); 
    O << ", "; 
    printCImmediate(MI, 4, O); 
    O << ", "; 
    printOperand(MI, 5, O); 
    return;
    break;
  case 13:
    // MSR, MSRi, t2MSR_AR, t2MSR_M
    printMSRMaskOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 14:
    // VBICiv2i32, VBICiv4i16, VBICiv4i32, VBICiv8i16, VMOVv16i8, VMOVv1i64, ...
    printNEONModImmOperand(MI, 1, O); 
    return;
    break;
  case 15:
    // VCMPEZD, VCMPEZS, VCMPZD, VCMPZS, tRSB
    O << ", #0"; 
    return;
    break;
  case 16:
    // VCVTf2sd, VCVTf2sq, VCVTf2ud, VCVTf2uq, VCVTs2fd, VCVTs2fq, VCVTu2fd, ...
    return;
    break;
  case 17:
    // VLD1DUPd16, VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32, VLD...
    printVectorListOneAllLanes(MI, 0, O); 
    O << ", "; 
    break;
  case 18:
    // VLD1DUPq16, VLD1DUPq16wb_fixed, VLD1DUPq16wb_register, VLD1DUPq32, VLD...
    printVectorListTwoAllLanes(MI, 0, O); 
    O << ", "; 
    break;
  case 19:
    // VLD1d16, VLD1d16wb_fixed, VLD1d16wb_register, VLD1d32, VLD1d32wb_fixed...
    printVectorListOne(MI, 0, O); 
    O << ", "; 
    break;
  case 20:
    // VLD1d16Q, VLD1d16Qwb_fixed, VLD1d16Qwb_register, VLD1d32Q, VLD1d32Qwb_...
    printVectorListFour(MI, 0, O); 
    O << ", "; 
    break;
  case 21:
    // VLD1d16T, VLD1d16Twb_fixed, VLD1d16Twb_register, VLD1d32T, VLD1d32Twb_...
    printVectorListThree(MI, 0, O); 
    O << ", "; 
    break;
  case 22:
    // VLD1q16, VLD1q16wb_fixed, VLD1q16wb_register, VLD1q32, VLD1q32wb_fixed...
    printVectorListTwo(MI, 0, O); 
    O << ", "; 
    break;
  case 23:
    // VLD2DUPd16x2, VLD2DUPd16x2wb_fixed, VLD2DUPd16x2wb_register, VLD2DUPd3...
    printVectorListTwoSpacedAllLanes(MI, 0, O); 
    O << ", "; 
    break;
  case 24:
    // VLD2b16, VLD2b16wb_fixed, VLD2b16wb_register, VLD2b32, VLD2b32wb_fixed...
    printVectorListTwoSpaced(MI, 0, O); 
    O << ", "; 
    break;
  case 25:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printVectorListThreeAllLanes(MI, 0, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 26:
    // VLD3DUPqAsm_16, VLD3DUPqAsm_32, VLD3DUPqAsm_8, VLD3DUPqWB_fixed_Asm_16...
    printVectorListThreeSpacedAllLanes(MI, 0, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 27:
    // VLD3qAsm_16, VLD3qAsm_32, VLD3qAsm_8, VLD3qWB_fixed_Asm_16, VLD3qWB_fi...
    printVectorListThreeSpaced(MI, 0, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 28:
    // VLD4DUPdAsm_16, VLD4DUPdAsm_32, VLD4DUPdAsm_8, VLD4DUPdWB_fixed_Asm_16...
    printVectorListFourAllLanes(MI, 0, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 29:
    // VLD4DUPqAsm_16, VLD4DUPqAsm_32, VLD4DUPqAsm_8, VLD4DUPqWB_fixed_Asm_16...
    printVectorListFourSpacedAllLanes(MI, 0, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 30:
    // VLD4qAsm_16, VLD4qAsm_32, VLD4qAsm_8, VLD4qWB_fixed_Asm_16, VLD4qWB_fi...
    printVectorListFourSpaced(MI, 0, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 31:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST2LNd16_UPD, VST2LNd32_U...
    printOperand(MI, 4, O); 
    break;
  case 32:
    // VST1d16, VST1d32, VST1d64, VST1d8
    printVectorListOne(MI, 2, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 33:
    // VST1d16Q, VST1d32Q, VST1d64Q, VST1d8Q, VST2q16, VST2q32, VST2q8
    printVectorListFour(MI, 2, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 34:
    // VST1d16Qwb_fixed, VST1d32Qwb_fixed, VST1d64Qwb_fixed, VST1d8Qwb_fixed,...
    printVectorListFour(MI, 3, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << '!'; 
    return;
    break;
  case 35:
    // VST1d16Qwb_register, VST1d32Qwb_register, VST1d64Qwb_register, VST1d8Q...
    printVectorListFour(MI, 4, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 36:
    // VST1d16T, VST1d32T, VST1d64T, VST1d8T
    printVectorListThree(MI, 2, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 37:
    // VST1d16Twb_fixed, VST1d32Twb_fixed, VST1d64Twb_fixed, VST1d8Twb_fixed
    printVectorListThree(MI, 3, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << '!'; 
    return;
    break;
  case 38:
    // VST1d16Twb_register, VST1d32Twb_register, VST1d64Twb_register, VST1d8T...
    printVectorListThree(MI, 4, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 39:
    // VST1d16wb_fixed, VST1d32wb_fixed, VST1d64wb_fixed, VST1d8wb_fixed
    printVectorListOne(MI, 3, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << '!'; 
    return;
    break;
  case 40:
    // VST1d16wb_register, VST1d32wb_register, VST1d64wb_register, VST1d8wb_r...
    printVectorListOne(MI, 4, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 41:
    // VST1q16, VST1q32, VST1q64, VST1q8, VST2d16, VST2d32, VST2d8
    printVectorListTwo(MI, 2, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 42:
    // VST1q16wb_fixed, VST1q32wb_fixed, VST1q64wb_fixed, VST1q8wb_fixed, VST...
    printVectorListTwo(MI, 3, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << '!'; 
    return;
    break;
  case 43:
    // VST1q16wb_register, VST1q32wb_register, VST1q64wb_register, VST1q8wb_r...
    printVectorListTwo(MI, 4, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 44:
    // VST2b16, VST2b32, VST2b8
    printVectorListTwoSpaced(MI, 2, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 45:
    // VST2b16wb_fixed, VST2b32wb_fixed, VST2b8wb_fixed
    printVectorListTwoSpaced(MI, 3, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << '!'; 
    return;
    break;
  case 46:
    // VST2b16wb_register, VST2b32wb_register, VST2b8wb_register
    printVectorListTwoSpaced(MI, 4, O); 
    O << ", "; 
    printAddrMode6Operand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 47:
    // t2PLDWi12, t2PLDi12, t2PLIi12
    printAddrModeImm12Operand<false>(MI, 0, O); 
    return;
    break;
  case 48:
    // t2PLDWi8, t2PLDi8, t2PLIi8
    printT2AddrModeImm8Operand(MI, 0, O); 
    return;
    break;
  case 49:
    // t2PLDWs, t2PLDs, t2PLIs
    printT2AddrModeSoRegOperand(MI, 0, O); 
    return;
    break;
  case 50:
    // t2TBB
    printAddrModeTBB(MI, 0, O); 
    return;
    break;
  case 51:
    // t2TBH
    printAddrModeTBH(MI, 0, O); 
    return;
    break;
  case 52:
    // tADC, tADDi8, tAND, tASRrr, tBIC, tEOR, tLSLrr, tLSRrr, tORR, tROR, tS...
    printOperand(MI, 3, O); 
    return;
    break;
  case 53:
    // tPOP, tPUSH
    printRegisterList(MI, 2, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 5 bits for 25 unique commands.
  switch ((Bits >> 29) & 31) {
  default:   // unreachable.
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    O << ", "; 
    break;
  case 1:
    // BKPT, BLX_pred, BL_pred, BXJ, BX_pred, Bcc, CPS2p, DBG, HINT, SMC, SVC...
    return;
    break;
  case 2:
    // CDP, MCR, MCRR, MRRC, VABDfd, VABDfq, VABSD, VABSS, VABSfd, VABSfq, VA...
    printOperand(MI, 1, O); 
    break;
  case 3:
    // FCONSTD, FCONSTS, VMOVv2f32, VMOVv4f32
    printFPImmOperand(MI, 1, O); 
    return;
    break;
  case 4:
    // LDC2L_OPTION, LDC2_OPTION, STC2L_OPTION, STC2_OPTION
    printCoprocOptionImm(MI, 3, O); 
    return;
    break;
  case 5:
    // LDC2L_POST, LDC2_POST, STC2L_POST, STC2_POST
    printPostIdxImm8s4Operand(MI, 3, O); 
    return;
    break;
  case 6:
    // LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OPTION,...
    printCImmediate(MI, 1, O); 
    O << ", "; 
    break;
  case 7:
    // LDMDA_UPD, LDMDB_UPD, LDMIA_UPD, LDMIB_UPD, STMDA_UPD, STMDB_UPD, STMI...
    O << "!, "; 
    printRegisterList(MI, 4, O); 
    break;
  case 8:
    // MRS, t2MRS_AR
    O << ", apsr"; 
    return;
    break;
  case 9:
    // MRSsys, t2MRSsys_AR
    O << ", spsr"; 
    return;
    break;
  case 10:
    // VCEQzv16i8, VCEQzv2i32, VCEQzv4i16, VCEQzv4i32, VCEQzv8i16, VCEQzv8i8,...
    O << ", #0"; 
    return;
    break;
  case 11:
    // VCVTf2xsd, VCVTf2xsq, VCVTf2xud, VCVTf2xuq, VCVTxs2fd, VCVTxs2fq, VCVT...
    printOperand(MI, 2, O); 
    break;
  case 12:
    // VGETLNs16, VGETLNs8, VGETLNu16, VGETLNu8
    printVectorIndex(MI, 2, O); 
    return;
    break;
  case 13:
    // VLD1DUPd16, VLD1DUPd32, VLD1DUPd8, VLD1DUPq16, VLD1DUPq32, VLD1DUPq8, ...
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 14:
    // VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32wb_fixed, VLD1DUP...
    printAddrMode6Operand(MI, 2, O); 
    break;
  case 15:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << '['; 
    break;
  case 16:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[], "; 
    printOperand(MI, 1, O); 
    O << "[], "; 
    printOperand(MI, 2, O); 
    break;
  case 17:
    // VLD3DUPdWB_fixed_Asm_16, VLD3DUPdWB_fixed_Asm_32, VLD3DUPdWB_fixed_Asm...
    O << '!'; 
    return;
    break;
  case 18:
    // VMRS
    O << ", fpscr"; 
    return;
    break;
  case 19:
    // VMRS_FPEXC
    O << ", fpexc"; 
    return;
    break;
  case 20:
    // VMRS_FPSID
    O << ", fpsid"; 
    return;
    break;
  case 21:
    // VMRS_MVFR0
    O << ", mvfr0"; 
    return;
    break;
  case 22:
    // VMRS_MVFR1
    O << ", mvfr1"; 
    return;
    break;
  case 23:
    // VSETLNi16, VSETLNi32, VSETLNi8
    printVectorIndex(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 24:
    // VSLTOD, VSLTOS, VTOSLD, VTOSLS, VTOULD, VTOULS, VULTOD, VULTOS
    printFBits32(MI, 2, O); 
    return;
    break;
  }


  // Fragment 4 encoded into 6 bits for 61 unique commands.
  switch ((Bits >> 34) & 63) {
  default:   // unreachable.
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ANDri, ANDrr, ANDrsi, ASRi...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // ADR, t2ADR
    printAdrLabelOperand(MI, 1, O); 
    return;
    break;
  case 2:
    // BFC, t2BFC
    printBitfieldInvMaskImmOperand(MI, 2, O); 
    return;
    break;
  case 3:
    // BFI, CPS3p, MOVTi16, STRD_POST, STRD_PRE, VABDLsv2i64, VABDLsv4i32, VA...
    printOperand(MI, 2, O); 
    break;
  case 4:
    // CDP, MCR, MCRR, MRRC, VABDfd, VABDfq, VACGEd, VACGEq, VACGTd, VACGTq, ...
    O << ", "; 
    break;
  case 5:
    // CMNzrsi, CMPrsi, MOVsi, MVNsi, TEQrsi, TSTrsi
    printSORegImmOperand(MI, 1, O); 
    return;
    break;
  case 6:
    // CMNzrsr, CMPrsr, MOVsr, MVNsr, TEQrsr, TSTrsr, t2MOVSsr, t2MOVsr
    printSORegRegOperand(MI, 1, O); 
    return;
    break;
  case 7:
    // LDCL_OFFSET, LDC_OFFSET, STCL_OFFSET, STC_OFFSET, t2LDC2L_OFFSET, t2LD...
    printAddrMode5Operand<false>(MI, 2, O); 
    break;
  case 8:
    // LDCL_OPTION, LDCL_POST, LDC_OPTION, LDC_POST, LDRBT_POST_IMM, LDRBT_PO...
    printAddrMode7Operand(MI, 2, O); 
    break;
  case 9:
    // LDCL_PRE, LDC_PRE, STCL_PRE, STC_PRE
    printAddrMode5Operand<true>(MI, 2, O); 
    O << '!'; 
    return;
    break;
  case 10:
    // LDMDA, LDMDB, LDMIA, LDMIB, STMDA, STMDB, STMIA, STMIB, VLDMDIA, VLDMS...
    printRegisterList(MI, 3, O); 
    break;
  case 11:
    // LDMDA_UPD, LDMDB_UPD, LDMIA_UPD, LDMIB_UPD, STMDA_UPD, STMDB_UPD, STMI...
    return;
    break;
  case 12:
    // LDRB_PRE_IMM, LDR_PRE_IMM, STRB_PRE_IMM, STR_PRE_IMM
    printAddrModeImm12Operand<true>(MI, 2, O); 
    O << '!'; 
    return;
    break;
  case 13:
    // LDRB_PRE_REG, LDR_PRE_REG, STRB_PRE_REG, STR_PRE_REG
    printAddrMode2Operand(MI, 2, O); 
    O << '!'; 
    return;
    break;
  case 14:
    // LDRBi12, LDRcp, LDRi12, STRBi12, STRi12, t2LDRBi12, t2LDRHi12, t2LDRSB...
    printAddrModeImm12Operand<false>(MI, 1, O); 
    return;
    break;
  case 15:
    // LDRBrs, LDRrs, STRBrs, STRrs
    printAddrMode2Operand(MI, 1, O); 
    return;
    break;
  case 16:
    // LDREX, LDREXB, LDREXH, t2LDREXB, t2LDREXH
    printAddrMode7Operand(MI, 1, O); 
    return;
    break;
  case 17:
    // LDRH, LDRSB, LDRSH, STRH
    printAddrMode3Operand<false>(MI, 1, O); 
    return;
    break;
  case 18:
    // LDRH_PRE, LDRSB_PRE, LDRSH_PRE, STRH_PRE
    printAddrMode3Operand<true>(MI, 2, O); 
    O << '!'; 
    return;
    break;
  case 19:
    // MCR2, t2MCR, t2MCR2
    printCImmediate(MI, 3, O); 
    O << ", "; 
    printCImmediate(MI, 4, O); 
    O << ", "; 
    printOperand(MI, 5, O); 
    return;
    break;
  case 20:
    // MCRR2, MRRC2, VABALsv2i64, VABALsv4i32, VABALsv8i16, VABALuv2i64, VABA...
    printOperand(MI, 3, O); 
    break;
  case 21:
    // SSAT, SSAT16, t2SSAT, t2SSAT16
    printImmPlusOneOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    break;
  case 22:
    // STREXD
    printGPRPairOperand(MI, 1, O); 
    O << ", "; 
    printAddrMode7Operand(MI, 2, O); 
    return;
    break;
  case 23:
    // VCEQzv2f32, VCEQzv4f32, VCGEzv2f32, VCGEzv4f32, VCGTzv2f32, VCGTzv4f32...
    O << ", #0"; 
    return;
    break;
  case 24:
    // VLD1DUPd16wb_fixed, VLD1DUPd32wb_fixed, VLD1DUPd8wb_fixed, VLD1DUPq16w...
    O << '!'; 
    return;
    break;
  case 25:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST2LNd16, VST2LNd32, VST2LNd8, VST2LN...
    printNoHashImmediate(MI, 4, O); 
    break;
  case 26:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printNoHashImmediate(MI, 6, O); 
    break;
  case 27:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printAddrMode6Operand(MI, 2, O); 
    break;
  case 28:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printNoHashImmediate(MI, 8, O); 
    O << "], "; 
    break;
  case 29:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[]}, "; 
    break;
  case 30:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printNoHashImmediate(MI, 10, O); 
    O << "], "; 
    printOperand(MI, 1, O); 
    O << '['; 
    printNoHashImmediate(MI, 10, O); 
    O << "], "; 
    printOperand(MI, 2, O); 
    O << '['; 
    printNoHashImmediate(MI, 10, O); 
    break;
  case 31:
    // VLD4DUPd16, VLD4DUPd16_UPD, VLD4DUPd32, VLD4DUPd32_UPD, VLD4DUPd8, VLD...
    O << "[], "; 
    printOperand(MI, 3, O); 
    O << "[]}, "; 
    break;
  case 32:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printNoHashImmediate(MI, 12, O); 
    O << "], "; 
    printOperand(MI, 1, O); 
    O << '['; 
    printNoHashImmediate(MI, 12, O); 
    O << "], "; 
    printOperand(MI, 2, O); 
    O << '['; 
    printNoHashImmediate(MI, 12, O); 
    O << "], "; 
    printOperand(MI, 3, O); 
    O << '['; 
    printNoHashImmediate(MI, 12, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 5, O); 
    printAddrMode6OffsetOperand(MI, 7, O); 
    return;
    break;
  case 33:
    // VLDRD, VLDRS, VSTRD, VSTRS
    printAddrMode5Operand<false>(MI, 1, O); 
    return;
    break;
  case 34:
    // VST1LNd16, VST1LNd32, VST1LNd8
    printNoHashImmediate(MI, 3, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 35:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST3LNd16, VST3LNd32, VST3...
    printNoHashImmediate(MI, 5, O); 
    break;
  case 36:
    // VST3LNd16_UPD, VST3LNd32_UPD, VST3LNd8_UPD, VST3LNq16_UPD, VST3LNq32_U...
    printNoHashImmediate(MI, 7, O); 
    O << "], "; 
    printOperand(MI, 5, O); 
    O << '['; 
    printNoHashImmediate(MI, 7, O); 
    O << "], "; 
    printOperand(MI, 6, O); 
    O << '['; 
    printNoHashImmediate(MI, 7, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 1, O); 
    printAddrMode6OffsetOperand(MI, 3, O); 
    return;
    break;
  case 37:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    printOperand(MI, 5, O); 
    O << ", "; 
    printOperand(MI, 6, O); 
    break;
  case 38:
    // VTBL1
    printVectorListOne(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 39:
    // VTBL2
    printVectorListTwo(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 40:
    // VTBL3
    printVectorListThree(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 41:
    // VTBL4
    printVectorListFour(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 42:
    // VTBX1
    printVectorListOne(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 43:
    // VTBX2
    printVectorListTwo(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 44:
    // VTBX3
    printVectorListThree(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 45:
    // VTBX4
    printVectorListFour(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 46:
    // sysLDMDA_UPD, sysLDMDB_UPD, sysLDMIA_UPD, sysLDMIB_UPD, sysSTMDA_UPD, ...
    O << " ^"; 
    return;
    break;
  case 47:
    // t2CMNzrs, t2CMPrs, t2MOVSsi, t2MOVsi, t2MVNs, t2TEQrs, t2TSTrs
    printT2SOOperand(MI, 1, O); 
    return;
    break;
  case 48:
    // t2LDRBT, t2LDRBi8, t2LDRHT, t2LDRHi8, t2LDRSBT, t2LDRSBi8, t2LDRSHT, t...
    printT2AddrModeImm8Operand(MI, 1, O); 
    return;
    break;
  case 49:
    // t2LDRB_PRE, t2LDRH_PRE, t2LDRSB_PRE, t2LDRSH_PRE, t2LDR_PRE, t2STRB_PR...
    printT2AddrModeImm8Operand(MI, 2, O); 
    O << '!'; 
    return;
    break;
  case 50:
    // t2LDRBpci, t2LDRHpci, t2LDRSBpci, t2LDRSHpci, t2LDRpci, tLDRpciASM
    printThumbLdrLabelOperand(MI, 1, O); 
    return;
    break;
  case 51:
    // t2LDRBs, t2LDRHs, t2LDRSBs, t2LDRSHs, t2LDRs, t2STRBs, t2STRHs, t2STRs
    printT2AddrModeSoRegOperand(MI, 1, O); 
    return;
    break;
  case 52:
    // t2LDREX
    printT2AddrModeImm0_1020s4Operand(MI, 1, O); 
    return;
    break;
  case 53:
    // t2MRS_M
    printMSRMaskOperand(MI, 1, O); 
    return;
    break;
  case 54:
    // tADDspi, tSUBspi
    printThumbS4ImmOperand(MI, 2, O); 
    return;
    break;
  case 55:
    // tASRri, tLSRri
    printThumbSRImm(MI, 3, O); 
    return;
    break;
  case 56:
    // tLDRBi, tSTRBi
    printThumbAddrModeImm5S1Operand(MI, 1, O); 
    return;
    break;
  case 57:
    // tLDRBr, tLDRHr, tLDRSB, tLDRSH, tLDRr, tSTRBr, tSTRHr, tSTRr
    printThumbAddrModeRROperand(MI, 1, O); 
    return;
    break;
  case 58:
    // tLDRHi, tSTRHi
    printThumbAddrModeImm5S2Operand(MI, 1, O); 
    return;
    break;
  case 59:
    // tLDRi, tSTRi
    printThumbAddrModeImm5S4Operand(MI, 1, O); 
    return;
    break;
  case 60:
    // tLDRspi, tSTRspi
    printThumbAddrModeSPOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 5 encoded into 5 bits for 23 unique commands.
  switch ((Bits >> 40) & 31) {
  default:   // unreachable.
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ANDri, ANDrr, ANDrsi, ASRi...
    O << ", "; 
    break;
  case 1:
    // CDP
    printCImmediate(MI, 2, O); 
    O << ", "; 
    printCImmediate(MI, 3, O); 
    O << ", "; 
    printCImmediate(MI, 4, O); 
    O << ", "; 
    printOperand(MI, 5, O); 
    return;
    break;
  case 2:
    // CLZ, CMNri, CMNzrr, CMPri, CMPrr, CPS3p, LDCL_OFFSET, LDC_OFFSET, LDMD...
    return;
    break;
  case 3:
    // MCR, MCRR, MRRC, VABDfd, VABDfq, VACGEd, VACGEq, VACGTd, VACGTq, VADDD...
    printOperand(MI, 2, O); 
    break;
  case 4:
    // SSAT, t2SSAT
    printShiftImmOperand(MI, 3, O); 
    return;
    break;
  case 5:
    // SXTB, SXTB16, SXTH, UXTB, UXTB16, UXTH, t2SXTB, t2SXTB16, t2SXTH, t2UX...
    printRotImmOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // VDUPLN16d, VDUPLN16q, VDUPLN32d, VDUPLN32q, VDUPLN8d, VDUPLN8q, VGETLN...
    printVectorIndex(MI, 2, O); 
    return;
    break;
  case 7:
    // VFMAD, VFMAS, VFMAfd, VFMAfq, VFMSD, VFMSS, VFMSfd, VFMSfq, VFNMAD, VF...
    printOperand(MI, 3, O); 
    break;
  case 8:
    // VLD1DUPd16wb_register, VLD1DUPd32wb_register, VLD1DUPd8wb_register, VL...
    printOperand(MI, 4, O); 
    return;
    break;
  case 9:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << "]}, "; 
    break;
  case 10:
    // VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_fixed_Asm_8,...
    O << '!'; 
    return;
    break;
  case 11:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32, VLD4LNd16, VLD4L...
    O << "], "; 
    break;
  case 12:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printOperand(MI, 1, O); 
    O << '['; 
    printNoHashImmediate(MI, 8, O); 
    break;
  case 13:
    // VLD3DUPd16, VLD3DUPd32, VLD3DUPd8, VLD3DUPq16, VLD3DUPq32, VLD3DUPq8
    printAddrMode6Operand(MI, 3, O); 
    return;
    break;
  case 14:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6Operand(MI, 4, O); 
    break;
  case 15:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printAddrMode6Operand(MI, 5, O); 
    printAddrMode6OffsetOperand(MI, 7, O); 
    return;
    break;
  case 16:
    // VMLALslsv2i32, VMLALslsv4i16, VMLALsluv2i32, VMLALsluv4i16, VMLAslv2i3...
    printVectorIndex(MI, 4, O); 
    return;
    break;
  case 17:
    // VMULLslsv2i32, VMULLslsv4i16, VMULLsluv2i32, VMULLsluv4i16, VMULslv2i3...
    printVectorIndex(MI, 3, O); 
    return;
    break;
  case 18:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    O << "}, "; 
    printAddrMode6Operand(MI, 1, O); 
    printAddrMode6OffsetOperand(MI, 3, O); 
    return;
    break;
  case 19:
    // VST4LNd16_UPD, VST4LNd32_UPD, VST4LNd8_UPD, VST4LNq16_UPD, VST4LNq32_U...
    printOperand(MI, 5, O); 
    O << '['; 
    printNoHashImmediate(MI, 8, O); 
    O << "], "; 
    printOperand(MI, 6, O); 
    O << '['; 
    printNoHashImmediate(MI, 8, O); 
    O << "], "; 
    printOperand(MI, 7, O); 
    O << '['; 
    printNoHashImmediate(MI, 8, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 1, O); 
    printAddrMode6OffsetOperand(MI, 3, O); 
    return;
    break;
  case 20:
    // sysLDMDA, sysLDMDB, sysLDMIA, sysLDMIB, sysSTMDA, sysSTMDB, sysSTMIA, ...
    O << " ^"; 
    return;
    break;
  case 21:
    // t2LDRB_POST, t2LDRH_POST, t2LDRSB_POST, t2LDRSH_POST, t2LDR_POST, t2ST...
    printT2AddrModeImm8OffsetOperand(MI, 3, O); 
    return;
    break;
  case 22:
    // t2MOVsra_flag, t2MOVsrl_flag
    O << ", #1"; 
    return;
    break;
  }


  // Fragment 6 encoded into 6 bits for 35 unique commands.
  switch ((Bits >> 45) & 63) {
  default:   // unreachable.
  case 0:
    // ADCri, ADCrr, ADDri, ADDrr, ANDri, ANDrr, ASRi, ASRr, BICri, BICrr, EO...
    printOperand(MI, 2, O); 
    break;
  case 1:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, ORRrsi, RSBrsi, RSCrsi, SBCrsi...
    printSORegImmOperand(MI, 2, O); 
    return;
    break;
  case 2:
    // BFI, t2BFI
    printBitfieldInvMaskImmOperand(MI, 3, O); 
    return;
    break;
  case 3:
    // LDCL_OPTION, LDC_OPTION, STCL_OPTION, STC_OPTION, t2LDC2L_OPTION, t2LD...
    printCoprocOptionImm(MI, 3, O); 
    return;
    break;
  case 4:
    // LDCL_POST, LDC_POST, STCL_POST, STC_POST, t2LDC2L_POST, t2LDC2_POST, t...
    printPostIdxImm8s4Operand(MI, 3, O); 
    return;
    break;
  case 5:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRT_POS...
    printAddrMode2OffsetOperand(MI, 3, O); 
    return;
    break;
  case 6:
    // LDRD, STRD
    printAddrMode3Operand<false>(MI, 2, O); 
    return;
    break;
  case 7:
    // LDRD_POST, STRD_POST, t2LDRD_POST, t2STRD_POST
    printAddrMode7Operand(MI, 3, O); 
    break;
  case 8:
    // LDRD_PRE, STRD_PRE
    printAddrMode3Operand<true>(MI, 3, O); 
    O << '!'; 
    return;
    break;
  case 9:
    // LDRHTi, LDRSBTi, LDRSHTi, STRHTi
    printPostIdxImm8Operand(MI, 3, O); 
    return;
    break;
  case 10:
    // LDRHTr, LDRSBTr, LDRSHTr, STRHTr
    printPostIdxRegOperand(MI, 3, O); 
    return;
    break;
  case 11:
    // LDRH_POST, LDRSB_POST, LDRSH_POST, STRH_POST
    printAddrMode3OffsetOperand(MI, 3, O); 
    return;
    break;
  case 12:
    // MCR, MCRR, MRRC
    O << ", "; 
    break;
  case 13:
    // MCRR2, MRRC2, t2MCRR, t2MCRR2, t2MRRC, t2MRRC2
    printCImmediate(MI, 4, O); 
    return;
    break;
  case 14:
    // STREX, STREXB, STREXH, SWP, SWPB, t2LDREXD, t2STREXB, t2STREXH
    printAddrMode7Operand(MI, 2, O); 
    return;
    break;
  case 15:
    // VABDfd, VABDfq, VACGEd, VACGEq, VACGTd, VACGTq, VADDD, VADDS, VADDfd, ...
    return;
    break;
  case 16:
    // VBIFd, VBIFq, VBITd, VBITq, VBSLd, VBSLq, VLD4LNd16, VLD4LNd32, VLD4LN...
    printOperand(MI, 3, O); 
    break;
  case 17:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8...
    printAddrMode6Operand(MI, 1, O); 
    break;
  case 18:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD
    printAddrMode6Operand(MI, 2, O); 
    printAddrMode6OffsetOperand(MI, 4, O); 
    return;
    break;
  case 19:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printOperand(MI, 4, O); 
    break;
  case 20:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32
    printOperand(MI, 1, O); 
    O << '['; 
    printNoHashImmediate(MI, 6, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 2, O); 
    return;
    break;
  case 21:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    O << "]}, "; 
    printAddrMode6Operand(MI, 3, O); 
    printAddrMode6OffsetOperand(MI, 5, O); 
    return;
    break;
  case 22:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6OffsetOperand(MI, 6, O); 
    return;
    break;
  case 23:
    // VLD3LNd16, VLD3LNd32, VLD3LNd8, VLD3LNq16, VLD3LNq32
    O << "], "; 
    printOperand(MI, 2, O); 
    O << '['; 
    printNoHashImmediate(MI, 8, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 3, O); 
    return;
    break;
  case 24:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printAddrMode6Operand(MI, 4, O); 
    printAddrMode6OffsetOperand(MI, 6, O); 
    return;
    break;
  case 25:
    // VMLAslfd, VMLAslfq, VMLSslfd, VMLSslfq
    printVectorIndex(MI, 4, O); 
    return;
    break;
  case 26:
    // VMULslfd, VMULslfq
    printVectorIndex(MI, 3, O); 
    return;
    break;
  case 27:
    // VST2LNd16_UPD, VST2LNd32_UPD, VST2LNd8_UPD, VST2LNq16_UPD, VST2LNq32_U...
    printOperand(MI, 5, O); 
    O << '['; 
    printNoHashImmediate(MI, 6, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 1, O); 
    printAddrMode6OffsetOperand(MI, 3, O); 
    return;
    break;
  case 28:
    // VST4d16_UPD, VST4d32_UPD, VST4d8_UPD, VST4q16_UPD, VST4q32_UPD, VST4q8...
    printOperand(MI, 7, O); 
    O << "}, "; 
    printAddrMode6Operand(MI, 1, O); 
    printAddrMode6OffsetOperand(MI, 3, O); 
    return;
    break;
  case 29:
    // t2ADCrs, t2ADDrs, t2ANDrs, t2BICrs, t2EORrs, t2ORNrs, t2ORRrs, t2RSBrs...
    printT2SOOperand(MI, 2, O); 
    return;
    break;
  case 30:
    // t2ASRri, t2LSRri
    printThumbSRImm(MI, 2, O); 
    return;
    break;
  case 31:
    // t2LDRD_PRE, t2STRD_PRE
    printT2AddrModeImm8s4Operand(MI, 3, O); 
    O << '!'; 
    return;
    break;
  case 32:
    // t2LDRDi8, t2STRDi8
    printT2AddrModeImm8s4Operand(MI, 2, O); 
    return;
    break;
  case 33:
    // t2STREX
    printT2AddrModeImm0_1020s4Operand(MI, 2, O); 
    return;
    break;
  case 34:
    // tADDrSPi
    printThumbS4ImmOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 7 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 51) & 15) {
  default:   // unreachable.
  case 0:
    // ADCri, ADCrr, ADDri, ADDrr, ANDri, ANDrr, ASRi, ASRr, BICri, BICrr, EO...
    return;
    break;
  case 1:
    // LDRD_POST, MLA, MLS, SBFX, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SML...
    O << ", "; 
    break;
  case 2:
    // MCR
    printCImmediate(MI, 3, O); 
    O << ", "; 
    printCImmediate(MI, 4, O); 
    O << ", "; 
    printOperand(MI, 5, O); 
    return;
    break;
  case 3:
    // MCRR, MRRC
    printOperand(MI, 3, O); 
    O << ", "; 
    printCImmediate(MI, 4, O); 
    return;
    break;
  case 4:
    // PKHBT, t2PKHBT
    printPKHLSLShiftImm(MI, 3, O); 
    return;
    break;
  case 5:
    // PKHTB, t2PKHTB
    printPKHASRShiftImm(MI, 3, O); 
    return;
    break;
  case 6:
    // SXTAB, SXTAB16, SXTAH, UXTAB, UXTAB16, UXTAH, t2SXTAB, t2SXTAB16, t2SX...
    printRotImmOperand(MI, 3, O); 
    return;
    break;
  case 7:
    // USAT, t2USAT
    printShiftImmOperand(MI, 3, O); 
    return;
    break;
  case 8:
    // VLD3d16, VLD3d16_UPD, VLD3d32, VLD3d32_UPD, VLD3d8, VLD3d8_UPD, VLD3q1...
    O << "}, "; 
    break;
  case 9:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32, VST2LNd16, VST2L...
    O << '['; 
    break;
  case 10:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD
    printAddrMode6OffsetOperand(MI, 3, O); 
    return;
    break;
  case 11:
    // t2LDRD_POST, t2STRD_POST
    printT2AddrModeImm8s4OffsetOperand(MI, 4, O); 
    return;
    break;
  }


  // Fragment 8 encoded into 4 bits for 13 unique commands.
  switch ((Bits >> 55) & 15) {
  default:   // unreachable.
  case 0:
    // LDRD_POST, STRD_POST
    printAddrMode3OffsetOperand(MI, 4, O); 
    return;
    break;
  case 1:
    // MLA, MLS, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SMLALBT, SMLALD, SML...
    printOperand(MI, 3, O); 
    break;
  case 2:
    // SBFX, UBFX, t2SBFX, t2UBFX
    printImmPlusOneOperand(MI, 3, O); 
    return;
    break;
  case 3:
    // VLD3d16, VLD3d32, VLD3d8, VLD3q16, VLD3q32, VLD3q8
    printAddrMode6Operand(MI, 3, O); 
    return;
    break;
  case 4:
    // VLD3d16_UPD, VLD3d32_UPD, VLD3d8_UPD, VLD3q16_UPD, VLD3q32_UPD, VLD3q8...
    printAddrMode6Operand(MI, 4, O); 
    printAddrMode6OffsetOperand(MI, 6, O); 
    return;
    break;
  case 5:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32
    printNoHashImmediate(MI, 10, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 4, O); 
    return;
    break;
  case 6:
    // VST2LNd16, VST2LNd32, VST2LNd8, VST2LNq16, VST2LNq32
    printNoHashImmediate(MI, 4, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 7:
    // VST3LNd16, VST3LNd32, VST3LNd8, VST3LNq16, VST3LNq32
    printNoHashImmediate(MI, 5, O); 
    O << "], "; 
    printOperand(MI, 4, O); 
    O << '['; 
    printNoHashImmediate(MI, 5, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 8:
    // VST3d16, VST3d32, VST3d8, VST3q16, VST3q32, VST3q8
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 9:
    // VST4LNd16, VST4LNd32, VST4LNd8, VST4LNq16, VST4LNq32
    printNoHashImmediate(MI, 6, O); 
    O << "], "; 
    printOperand(MI, 4, O); 
    O << '['; 
    printNoHashImmediate(MI, 6, O); 
    O << "], "; 
    printOperand(MI, 5, O); 
    O << '['; 
    printNoHashImmediate(MI, 6, O); 
    O << "]}, "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 10:
    // VST4d16, VST4d32, VST4d8, VST4q16, VST4q32, VST4q8
    printOperand(MI, 5, O); 
    O << "}, "; 
    printAddrMode6Operand(MI, 0, O); 
    return;
    break;
  case 11:
    // t2SMLSLDX
    printOperand(MI, 2, O); 
    return;
    break;
  case 12:
    // t2STREXD
    printAddrMode7Operand(MI, 3, O); 
    return;
    break;
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 59) & 1) {
    // VLD4d16, VLD4d16_UPD, VLD4d32, VLD4d32_UPD, VLD4d8, VLD4d8_UPD, VLD4q1...
    O << "}, "; 
  } else {
    // MLA, MLS, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SMLALBT, SMLALD, SML...
    return;
  }


  // Fragment 10 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 60) & 1) {
    // VLD4d16_UPD, VLD4d32_UPD, VLD4d8_UPD, VLD4q16_UPD, VLD4q32_UPD, VLD4q8...
    printAddrMode6Operand(MI, 5, O); 
    printAddrMode6OffsetOperand(MI, 7, O); 
    return;
  } else {
    // VLD4d16, VLD4d32, VLD4d8, VLD4q16, VLD4q32, VLD4q8
    printAddrMode6Operand(MI, 4, O); 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *ARMInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 285 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'D', '4', '_', 'D', '6', '_', 'D', '8', '_', 'D', '1', '0', 0,
  /* 13 */ 'D', '7', '_', 'D', '8', '_', 'D', '9', '_', 'D', '1', '0', 0,
  /* 26 */ 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', 0,
  /* 39 */ 'd', '1', '0', 0,
  /* 43 */ 'q', '1', '0', 0,
  /* 47 */ 'r', '1', '0', 0,
  /* 51 */ 's', '1', '0', 0,
  /* 55 */ 'D', '1', '4', '_', 'D', '1', '6', '_', 'D', '1', '8', '_', 'D', '2', '0', 0,
  /* 71 */ 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', '_', 'D', '2', '0', 0,
  /* 87 */ 'd', '2', '0', 0,
  /* 91 */ 's', '2', '0', 0,
  /* 95 */ 'D', '2', '4', '_', 'D', '2', '6', '_', 'D', '2', '8', '_', 'D', '3', '0', 0,
  /* 111 */ 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', '_', 'D', '3', '0', 0,
  /* 127 */ 'd', '3', '0', 0,
  /* 131 */ 's', '3', '0', 0,
  /* 135 */ 'd', '0', 0,
  /* 138 */ 'q', '0', 0,
  /* 141 */ 'm', 'v', 'f', 'r', '0', 0,
  /* 147 */ 's', '0', 0,
  /* 150 */ 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', 0,
  /* 161 */ 'D', '5', '_', 'D', '7', '_', 'D', '9', '_', 'D', '1', '1', 0,
  /* 174 */ 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', 0,
  /* 188 */ 'R', '1', '0', '_', 'R', '1', '1', 0,
  /* 196 */ 'd', '1', '1', 0,
  /* 200 */ 'q', '1', '1', 0,
  /* 204 */ 'r', '1', '1', 0,
  /* 208 */ 's', '1', '1', 0,
  /* 212 */ 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', 0,
  /* 224 */ 'D', '1', '5', '_', 'D', '1', '7', '_', 'D', '1', '9', '_', 'D', '2', '1', 0,
  /* 240 */ 'd', '2', '1', 0,
  /* 244 */ 's', '2', '1', 0,
  /* 248 */ 'D', '2', '9', '_', 'D', '3', '0', '_', 'D', '3', '1', 0,
  /* 260 */ 'D', '2', '5', '_', 'D', '2', '7', '_', 'D', '2', '9', '_', 'D', '3', '1', 0,
  /* 276 */ 'd', '3', '1', 0,
  /* 280 */ 's', '3', '1', 0,
  /* 284 */ 'Q', '0', '_', 'Q', '1', 0,
  /* 290 */ 'R', '0', '_', 'R', '1', 0,
  /* 296 */ 'd', '1', 0,
  /* 299 */ 'q', '1', 0,
  /* 302 */ 'm', 'v', 'f', 'r', '1', 0,
  /* 308 */ 's', '1', 0,
  /* 311 */ 'D', '6', '_', 'D', '8', '_', 'D', '1', '0', '_', 'D', '1', '2', 0,
  /* 325 */ 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', '_', 'D', '1', '2', 0,
  /* 340 */ 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', 0,
  /* 355 */ 'd', '1', '2', 0,
  /* 359 */ 'q', '1', '2', 0,
  /* 363 */ 'r', '1', '2', 0,
  /* 367 */ 's', '1', '2', 0,
  /* 371 */ 'D', '1', '6', '_', 'D', '1', '8', '_', 'D', '2', '0', '_', 'D', '2', '2', 0,
  /* 387 */ 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', '_', 'D', '2', '2', 0,
  /* 403 */ 'd', '2', '2', 0,
  /* 407 */ 's', '2', '2', 0,
  /* 411 */ 'D', '0', '_', 'D', '2', 0,
  /* 417 */ 'D', '0', '_', 'D', '1', '_', 'D', '2', 0,
  /* 426 */ 'Q', '1', '_', 'Q', '2', 0,
  /* 432 */ 'd', '2', 0,
  /* 435 */ 'q', '2', 0,
  /* 438 */ 'r', '2', 0,
  /* 441 */ 's', '2', 0,
  /* 444 */ 'D', '7', '_', 'D', '9', '_', 'D', '1', '1', '_', 'D', '1', '3', 0,
  /* 458 */ 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', 0,
  /* 470 */ 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', 0,
  /* 486 */ 'd', '1', '3', 0,
  /* 490 */ 'q', '1', '3', 0,
  /* 494 */ 's', '1', '3', 0,
  /* 498 */ 'D', '1', '7', '_', 'D', '1', '9', '_', 'D', '2', '1', '_', 'D', '2', '3', 0,
  /* 514 */ 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', 0,
  /* 526 */ 'd', '2', '3', 0,
  /* 530 */ 's', '2', '3', 0,
  /* 534 */ 'D', '1', '_', 'D', '3', 0,
  /* 540 */ 'D', '1', '_', 'D', '2', '_', 'D', '3', 0,
  /* 549 */ 'Q', '0', '_', 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', 0,
  /* 561 */ 'R', '2', '_', 'R', '3', 0,
  /* 567 */ 'd', '3', 0,
  /* 570 */ 'q', '3', 0,
  /* 573 */ 'r', '3', 0,
  /* 576 */ 's', '3', 0,
  /* 579 */ 'D', '8', '_', 'D', '1', '0', '_', 'D', '1', '2', '_', 'D', '1', '4', 0,
  /* 594 */ 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', '_', 'D', '1', '4', 0,
  /* 610 */ 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', 0,
  /* 626 */ 'd', '1', '4', 0,
  /* 630 */ 'q', '1', '4', 0,
  /* 634 */ 's', '1', '4', 0,
  /* 638 */ 'D', '1', '8', '_', 'D', '2', '0', '_', 'D', '2', '2', '_', 'D', '2', '4', 0,
  /* 654 */ 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', '_', 'D', '2', '4', 0,
  /* 670 */ 'd', '2', '4', 0,
  /* 674 */ 's', '2', '4', 0,
  /* 678 */ 'D', '0', '_', 'D', '2', '_', 'D', '4', 0,
  /* 687 */ 'D', '1', '_', 'D', '2', '_', 'D', '3', '_', 'D', '4', 0,
  /* 699 */ 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', 0,
  /* 711 */ 'd', '4', 0,
  /* 714 */ 'q', '4', 0,
  /* 717 */ 'r', '4', 0,
  /* 720 */ 's', '4', 0,
  /* 723 */ 'D', '9', '_', 'D', '1', '1', '_', 'D', '1', '3', '_', 'D', '1', '5', 0,
  /* 738 */ 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', 0,
  /* 750 */ 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', '_', 'Q', '1', '5', 0,
  /* 766 */ 'd', '1', '5', 0,
  /* 770 */ 'q', '1', '5', 0,
  /* 774 */ 's', '1', '5', 0,
  /* 778 */ 'D', '1', '9', '_', 'D', '2', '1', '_', 'D', '2', '3', '_', 'D', '2', '5', 0,
  /* 794 */ 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', 0,
  /* 806 */ 'd', '2', '5', 0,
  /* 810 */ 's', '2', '5', 0,
  /* 814 */ 'D', '1', '_', 'D', '3', '_', 'D', '5', 0,
  /* 823 */ 'D', '3', '_', 'D', '4', '_', 'D', '5', 0,
  /* 832 */ 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', 0,
  /* 844 */ 'R', '4', '_', 'R', '5', 0,
  /* 850 */ 'd', '5', 0,
  /* 853 */ 'q', '5', 0,
  /* 856 */ 'r', '5', 0,
  /* 859 */ 's', '5', 0,
  /* 862 */ 'D', '1', '0', '_', 'D', '1', '2', '_', 'D', '1', '4', '_', 'D', '1', '6', 0,
  /* 878 */ 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', '_', 'D', '1', '6', 0,
  /* 894 */ 'd', '1', '6', 0,
  /* 898 */ 's', '1', '6', 0,
  /* 902 */ 'D', '2', '0', '_', 'D', '2', '2', '_', 'D', '2', '4', '_', 'D', '2', '6', 0,
  /* 918 */ 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', '_', 'D', '2', '6', 0,
  /* 934 */ 'd', '2', '6', 0,
  /* 938 */ 's', '2', '6', 0,
  /* 942 */ 'D', '0', '_', 'D', '2', '_', 'D', '4', '_', 'D', '6', 0,
  /* 954 */ 'D', '3', '_', 'D', '4', '_', 'D', '5', '_', 'D', '6', 0,
  /* 966 */ 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', 0,
  /* 978 */ 'd', '6', 0,
  /* 981 */ 'q', '6', 0,
  /* 984 */ 'r', '6', 0,
  /* 987 */ 's', '6', 0,
  /* 990 */ 'D', '1', '1', '_', 'D', '1', '3', '_', 'D', '1', '5', '_', 'D', '1', '7', 0,
  /* 1006 */ 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', 0,
  /* 1018 */ 'd', '1', '7', 0,
  /* 1022 */ 's', '1', '7', 0,
  /* 1026 */ 'D', '2', '1', '_', 'D', '2', '3', '_', 'D', '2', '5', '_', 'D', '2', '7', 0,
  /* 1042 */ 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', 0,
  /* 1054 */ 'd', '2', '7', 0,
  /* 1058 */ 's', '2', '7', 0,
  /* 1062 */ 'D', '1', '_', 'D', '3', '_', 'D', '5', '_', 'D', '7', 0,
  /* 1074 */ 'D', '5', '_', 'D', '6', '_', 'D', '7', 0,
  /* 1083 */ 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', 0,
  /* 1095 */ 'R', '6', '_', 'R', '7', 0,
  /* 1101 */ 'd', '7', 0,
  /* 1104 */ 'q', '7', 0,
  /* 1107 */ 'r', '7', 0,
  /* 1110 */ 's', '7', 0,
  /* 1113 */ 'D', '1', '2', '_', 'D', '1', '4', '_', 'D', '1', '6', '_', 'D', '1', '8', 0,
  /* 1129 */ 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', '_', 'D', '1', '8', 0,
  /* 1145 */ 'd', '1', '8', 0,
  /* 1149 */ 's', '1', '8', 0,
  /* 1153 */ 'D', '2', '2', '_', 'D', '2', '4', '_', 'D', '2', '6', '_', 'D', '2', '8', 0,
  /* 1169 */ 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', '_', 'D', '2', '8', 0,
  /* 1185 */ 'd', '2', '8', 0,
  /* 1189 */ 's', '2', '8', 0,
  /* 1193 */ 'D', '2', '_', 'D', '4', '_', 'D', '6', '_', 'D', '8', 0,
  /* 1205 */ 'D', '5', '_', 'D', '6', '_', 'D', '7', '_', 'D', '8', 0,
  /* 1217 */ 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', 0,
  /* 1229 */ 'd', '8', 0,
  /* 1232 */ 'q', '8', 0,
  /* 1235 */ 'r', '8', 0,
  /* 1238 */ 's', '8', 0,
  /* 1241 */ 'D', '1', '3', '_', 'D', '1', '5', '_', 'D', '1', '7', '_', 'D', '1', '9', 0,
  /* 1257 */ 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', 0,
  /* 1269 */ 'd', '1', '9', 0,
  /* 1273 */ 's', '1', '9', 0,
  /* 1277 */ 'D', '2', '3', '_', 'D', '2', '5', '_', 'D', '2', '7', '_', 'D', '2', '9', 0,
  /* 1293 */ 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', 0,
  /* 1305 */ 'd', '2', '9', 0,
  /* 1309 */ 's', '2', '9', 0,
  /* 1313 */ 'D', '3', '_', 'D', '5', '_', 'D', '7', '_', 'D', '9', 0,
  /* 1325 */ 'D', '7', '_', 'D', '8', '_', 'D', '9', 0,
  /* 1334 */ 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', 0,
  /* 1346 */ 'R', '8', '_', 'R', '9', 0,
  /* 1352 */ 'd', '9', 0,
  /* 1355 */ 'q', '9', 0,
  /* 1358 */ 'r', '9', 0,
  /* 1361 */ 's', '9', 0,
  /* 1364 */ 'R', '1', '2', '_', 'S', 'P', 0,
  /* 1371 */ 'p', 'c', 0,
  /* 1374 */ 'f', 'p', 'e', 'x', 'c', 0,
  /* 1380 */ 'f', 'p', 's', 'i', 'd', 0,
  /* 1386 */ 'i', 't', 's', 't', 'a', 't', 'e', 0,
  /* 1394 */ 's', 'p', 0,
  /* 1397 */ 'f', 'p', 's', 'c', 'r', 0,
  /* 1403 */ 'l', 'r', 0,
  /* 1406 */ 'a', 'p', 's', 'r', 0,
  /* 1411 */ 'c', 'p', 's', 'r', 0,
  /* 1416 */ 's', 'p', 's', 'r', 0,
  /* 1421 */ 'f', 'p', 's', 'c', 'r', '_', 'n', 'z', 'c', 'v', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    1406, 1411, 135, 296, 432, 567, 711, 850, 978, 1101, 1229, 1352, 39, 196, 
    355, 486, 626, 766, 894, 1018, 1145, 1269, 87, 240, 403, 526, 670, 806, 
    934, 1054, 1185, 1305, 127, 276, 1374, 1397, 1421, 1380, 1386, 1403, 141, 302, 
    1371, 138, 299, 435, 570, 714, 853, 981, 1104, 1232, 1355, 43, 200, 359, 
    490, 630, 770, 144, 305, 438, 573, 717, 856, 984, 1107, 1235, 1358, 47, 
    204, 363, 147, 308, 441, 576, 720, 859, 987, 1110, 1238, 1361, 51, 208, 
    367, 494, 634, 774, 898, 1022, 1149, 1273, 91, 244, 407, 530, 674, 810, 
    938, 1058, 1189, 1309, 131, 280, 1394, 1416, 411, 534, 681, 817, 948, 1068, 
    1199, 1319, 6, 167, 317, 450, 586, 730, 870, 998, 1121, 1249, 63, 232, 
    379, 506, 646, 786, 910, 1034, 1161, 1285, 103, 268, 284, 426, 555, 705, 
    838, 972, 1089, 1223, 1340, 32, 180, 347, 478, 618, 758, 549, 699, 832, 
    966, 1083, 1217, 1334, 26, 174, 340, 470, 610, 750, 290, 561, 844, 1095, 
    1346, 188, 1364, 417, 540, 690, 823, 957, 1074, 1208, 1325, 16, 150, 328, 
    458, 598, 738, 882, 1006, 1133, 1257, 75, 212, 391, 514, 658, 794, 922, 
    1042, 1173, 1293, 115, 248, 678, 814, 945, 1065, 1196, 1316, 3, 164, 314, 
    447, 582, 726, 866, 994, 1117, 1245, 59, 228, 375, 502, 642, 782, 906, 
    1030, 1157, 1281, 99, 264, 942, 1062, 1193, 1313, 0, 161, 311, 444, 579, 
    723, 862, 990, 1113, 1241, 55, 224, 371, 498, 638, 778, 902, 1026, 1153, 
    1277, 95, 260, 420, 693, 960, 1211, 19, 332, 602, 886, 1137, 79, 395, 
    662, 926, 1177, 119, 687, 954, 1205, 13, 325, 594, 878, 1129, 71, 387, 
    654, 918, 1169, 111, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static unsigned getMapOperandNumber(const SmallVectorImpl<std::pair<StringRef, unsigned> > &OpMap,
                                    StringRef Name) {
  for (SmallVectorImpl<std::pair<StringRef, unsigned> >::const_iterator
         I = OpMap.begin(), E = OpMap.end(); I != E; ++I)
    if (I->first == Name)
      return I->second;
  llvm_unreachable("Operand not in map!");
}

bool ARMInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  StringRef AsmString;
  SmallVector<std::pair<StringRef, unsigned>, 4> OpMap;
  switch (MI->getOpcode()) {
  default: return false;
  case ARM::DMB:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 15) {
      // (DMB 15)
      AsmString = "dmb";
      break;
    }
    return false;
  case ARM::DSB:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 15) {
      // (DSB 15)
      AsmString = "dsb";
      break;
    }
    return false;
  case ARM::ISB:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 15) {
      // (ISB 15)
      AsmString = "isb";
      break;
    }
    return false;
  case ARM::t2DMB:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 15) {
      // (t2DMB 15)
      AsmString = "dmb";
      break;
    }
    return false;
  case ARM::t2DSB:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 15) {
      // (t2DSB 15)
      AsmString = "dsb";
      break;
    }
    return false;
  case ARM::t2ISB:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 15) {
      // (t2ISB 15)
      AsmString = "isb";
      break;
    }
    return false;
  case ARM::tMOVr:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).getReg() == ARM::R8 &&
        MI->getOperand(1).getReg() == ARM::R8 &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 14 &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (tMOVr R8, R8, 14, 0)
      AsmString = "nop";
      break;
    }
    return false;
  }

  std::pair<StringRef, StringRef> ASM = AsmString.split(' ');
  OS << '\t' << ASM.first;
  if (!ASM.second.empty()) {
    OS << '\t';
    for (StringRef::iterator
         I = ASM.second.begin(), E = ASM.second.end(); I != E; ) {
      if (*I == '$') {
        StringRef::iterator Start = ++I;
        while (I != E &&
               ((*I >= 'a' && *I <= 'z') ||
                (*I >= 'A' && *I <= 'Z') ||
                (*I >= '0' && *I <= '9') ||
                *I == '_'))
          ++I;
        StringRef Name(Start, I - Start);
        printOperand(MI, getMapOperandNumber(OpMap, Name), OS);
      } else {
        OS << *I++;
      }
    }
  }

  return true;
}

#endif // PRINT_ALIAS_INSTR
