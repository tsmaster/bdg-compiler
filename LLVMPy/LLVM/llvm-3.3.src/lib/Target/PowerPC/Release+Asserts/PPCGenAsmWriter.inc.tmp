/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void PPCInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    4648U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    4641U,	// BUNDLE
    4836U,	// LIFETIME_START
    4628U,	// LIFETIME_END
    9579U,	// ADD4
    8343U,	// ADD4o
    9579U,	// ADD8
    2147493227U,	// ADD8TLS
    8343U,	// ADD8o
    9519U,	// ADDC
    9519U,	// ADDC8
    8299U,	// ADDC8o
    8299U,	// ADDCo
    9694U,	// ADDE
    9694U,	// ADDE8
    8435U,	// ADDE8o
    8435U,	// ADDEo
    268445475U,	// ADDI
    268445475U,	// ADDI8
    536880451U,	// ADDIC
    536880451U,	// ADDIC8
    536879233U,	// ADDICo
    805317253U,	// ADDIS
    805317253U,	// ADDIS8
    4587U,	// ADDISdtprelHA
    4570U,	// ADDISgotTprelHA
    4542U,	// ADDIStlsgdHA
    4556U,	// ADDIStlsldHA
    4530U,	// ADDIStocHA
    4753U,	// ADDIdtprelL
    4716U,	// ADDItlsgdL
    4728U,	// ADDItlsldL
    4706U,	// ADDItocL
    33564139U,	// ADDME
    33564139U,	// ADDME8
    33562882U,	// ADDME8o
    33562882U,	// ADDMEo
    33564168U,	// ADDZE
    33564168U,	// ADDZE8
    33562915U,	// ADDZE8o
    33562915U,	// ADDZEo
    148489U,	// ADJCALLSTACKDOWN
    2376732U,	// ADJCALLSTACKUP
    9644U,	// AND
    9644U,	// AND8
    8397U,	// AND8o
    9526U,	// ANDC
    9526U,	// ANDC8
    8306U,	// ANDC8o
    8306U,	// ANDCo
    1073750662U,	// ANDISo
    1073750662U,	// ANDISo8
    1073750387U,	// ANDIo
    1073750387U,	// ANDIo8
    8397U,	// ANDo
    71574458U,	// ATOMIC_CMP_SWAP_I16
    71574436U,	// ATOMIC_CMP_SWAP_I32
    4004U,	// ATOMIC_CMP_SWAP_I64
    4443U,	// ATOMIC_CMP_SWAP_I8
    4201U,	// ATOMIC_LOAD_ADD_I16
    3764U,	// ATOMIC_LOAD_ADD_I32
    3944U,	// ATOMIC_LOAD_ADD_I64
    4382U,	// ATOMIC_LOAD_ADD_I8
    4244U,	// ATOMIC_LOAD_AND_I16
    3807U,	// ATOMIC_LOAD_AND_I32
    4103U,	// ATOMIC_LOAD_AND_I64
    4423U,	// ATOMIC_LOAD_AND_I8
    4222U,	// ATOMIC_LOAD_NAND_I16
    3785U,	// ATOMIC_LOAD_NAND_I32
    3965U,	// ATOMIC_LOAD_NAND_I64
    4402U,	// ATOMIC_LOAD_NAND_I8
    4303U,	// ATOMIC_LOAD_OR_I16
    3866U,	// ATOMIC_LOAD_OR_I32
    4046U,	// ATOMIC_LOAD_OR_I64
    4482U,	// ATOMIC_LOAD_OR_I8
    4180U,	// ATOMIC_LOAD_SUB_I16
    3743U,	// ATOMIC_LOAD_SUB_I32
    3923U,	// ATOMIC_LOAD_SUB_I64
    4348U,	// ATOMIC_LOAD_SUB_I8
    4282U,	// ATOMIC_LOAD_XOR_I16
    3845U,	// ATOMIC_LOAD_XOR_I32
    4025U,	// ATOMIC_LOAD_XOR_I64
    4463U,	// ATOMIC_LOAD_XOR_I8
    4265U,	// ATOMIC_SWAP_I16
    3828U,	// ATOMIC_SWAP_I32
    3987U,	// ATOMIC_SWAP_I64
    4514U,	// ATOMIC_SWAP_I8
    25683U,	// B
    6591219U,	// BCC
    430835U,	// BCCTR
    430835U,	// BCCTR8
    561907U,	// BCCTRL
    561907U,	// BCCTRL8
    692979U,	// BCLR
    24593U,	// BCLalways
    4928U,	// BCTR
    4928U,	// BCTR8
    4896U,	// BCTRL
    4896U,	// BCTRL8
    28261U,	// BDNZ
    28261U,	// BDNZ8
    4921U,	// BDNZLR
    4921U,	// BDNZLR8
    28230U,	// BDZ
    28230U,	// BDZ8
    4915U,	// BDZLR
    4915U,	// BDZLR8
    141195U,	// BL
    141195U,	// BL8
    796555U,	// BL8_NOP
    927627U,	// BL8_NOP_TLSGD
    927627U,	// BL8_NOP_TLSLD
    173125U,	// BLA
    173125U,	// BLA8
    828485U,	// BLA8_NOP
    4911U,	// BLR
    9655U,	// CMPD
    536880951U,	// CMPDI
    9631U,	// CMPLD
    1073751849U,	// CMPLDI
    11293U,	// CMPLW
    1073751920U,	// CMPLWI
    11312U,	// CMPW
    536881022U,	// CMPWI
    33564118U,	// CNTLZD
    33562858U,	// CNTLZDo
    33565897U,	// CNTLZW
    33563470U,	// CNTLZWo
    4166U,	// CR6SET
    4152U,	// CR6UNSET
    11249U,	// CREQV
    10587U,	// CROR
    8399857U,	// CRSET
    8399206U,	// CRUNSET
    50234U,	// DCBA
    50711U,	// DCBF
    50960U,	// DCBI
    52038U,	// DCBST
    52025U,	// DCBT
    52050U,	// DCBTST
    52795U,	// DCBZ
    51145U,	// DCBZL
    9680U,	// DIVD
    11171U,	// DIVDU
    8907U,	// DIVDUo
    8419U,	// DIVDo
    11459U,	// DIVW
    11218U,	// DIVWU
    8924U,	// DIVWUo
    9031U,	// DIVWo
    60063U,	// DSS
    4889U,	// DSSALL
    68429U,	// DST
    68429U,	// DST64
    68442U,	// DSTST
    68442U,	// DSTST64
    68455U,	// DSTSTT
    68455U,	// DSTSTT64
    68449U,	// DSTT
    68449U,	// DSTT64
    4602U,	// DYNALLOC
    4323U,	// DYNALLOC8
    3886U,	// EH_SjLj_LongJmp32
    4066U,	// EH_SjLj_LongJmp64
    3905U,	// EH_SjLj_SetJmp32
    4085U,	// EH_SjLj_SetJmp64
    24577U,	// EH_SjLj_Setup
    11251U,	// EQV
    11251U,	// EQV8
    8939U,	// EQV8o
    8939U,	// EQVo
    33563840U,	// EXTSB
    33563840U,	// EXTSB8
    33562677U,	// EXTSB8o
    33562677U,	// EXTSBo
    33564342U,	// EXTSH
    33564342U,	// EXTSH8
    33562957U,	// EXTSH8o
    33562957U,	// EXTSHo
    33565792U,	// EXTSW
    33565792U,	// EXTSW_32_64
    33563423U,	// EXTSW_32_64o
    33563423U,	// EXTSWo
    33565070U,	// FABSD
    33563174U,	// FABSDo
    33565070U,	// FABSS
    33563174U,	// FABSSo
    9578U,	// FADD
    10731U,	// FADDS
    8784U,	// FADDSo
    8342U,	// FADDo
    0U,	// FADDrtz
    33564049U,	// FCFID
    33565187U,	// FCFIDS
    33563243U,	// FCFIDSo
    33565584U,	// FCFIDU
    33565374U,	// FCFIDUS
    33563295U,	// FCFIDUSo
    33563330U,	// FCFIDUo
    33562806U,	// FCFIDo
    11184U,	// FCMPUD
    11184U,	// FCMPUS
    33566315U,	// FCTIDUZ
    33563511U,	// FCTIDUZo
    33566283U,	// FCTIDZ
    33563495U,	// FCTIDZo
    33566324U,	// FCTIWUZ
    33563521U,	// FCTIWUZo
    33566333U,	// FCTIWZ
    33563531U,	// FCTIWZo
    11243U,	// FDIV
    10987U,	// FDIVS
    8873U,	// FDIVSo
    8932U,	// FDIVo
    9584U,	// FMADD
    10738U,	// FMADDS
    8792U,	// FMADDSo
    8349U,	// FMADDo
    33565008U,	// FMR
    33563156U,	// FMRo
    9486U,	// FMSUB
    10714U,	// FMSUBS
    8765U,	// FMSUBSo
    8271U,	// FMSUBo
    10166U,	// FMUL
    10904U,	// FMULS
    8846U,	// FMULSo
    8620U,	// FMULo
    33565076U,	// FNABSD
    33563181U,	// FNABSDo
    33565076U,	// FNABSS
    33563181U,	// FNABSSo
    33564223U,	// FNEGD
    33562939U,	// FNEGDo
    33564223U,	// FNEGS
    33562939U,	// FNEGSo
    9591U,	// FNMADD
    10746U,	// FNMADDS
    8801U,	// FNMADDSo
    8357U,	// FNMADDo
    9493U,	// FNMSUB
    10722U,	// FNMSUBS
    8774U,	// FNMSUBSo
    8279U,	// FNMSUBo
    33564154U,	// FRE
    33565195U,	// FRES
    33563252U,	// FRESo
    33562899U,	// FREo
    33564718U,	// FRIMD
    33563059U,	// FRIMDo
    33564718U,	// FRIMS
    33563059U,	// FRIMSo
    33564789U,	// FRIND
    33563083U,	// FRINDo
    4933U,	// FRINDrint
    33564789U,	// FRINS
    33563083U,	// FRINSo
    4944U,	// FRINSrint
    33564941U,	// FRIPD
    33563133U,	// FRIPDo
    33564941U,	// FRIPS
    33563133U,	// FRIPSo
    33566303U,	// FRIZD
    33563504U,	// FRIZDo
    33566303U,	// FRIZS
    33563504U,	// FRIZSo
    33564947U,	// FRSP
    33563140U,	// FRSPo
    33564159U,	// FRSQRTE
    33565201U,	// FRSQRTES
    33563259U,	// FRSQRTESo
    33562905U,	// FRSQRTEo
    10142U,	// FSELD
    8613U,	// FSELDo
    10142U,	// FSELS
    8613U,	// FSELSo
    33565503U,	// FSQRT
    33565366U,	// FSQRTS
    33563286U,	// FSQRTSo
    33563313U,	// FSQRTo
    9480U,	// FSUB
    10707U,	// FSUBS
    8757U,	// FSUBSo
    8264U,	// FSUBo
    4802U,	// GETtlsADDR
    4788U,	// GETtlsldADDR
    50966U,	// ICBI
    10148U,	// ISEL
    10148U,	// ISEL8
    4853U,	// ISYNC
    10495046U,	// LA
    12594753U,	// LBZ
    12594753U,	// LBZ8
    14691289U,	// LBZU
    14691289U,	// LBZU8
    16788964U,	// LBZUX
    16788964U,	// LBZUX8
    37760545U,	// LBZX
    37760545U,	// LBZX8
    18883995U,	// LD
    37760320U,	// LDARX
    37760334U,	// LDBRX
    20982680U,	// LDU
    16788915U,	// LDUX
    37760263U,	// LDX
    4740U,	// LDgotTprelL
    1060490U,	// LDinto_toc
    4859U,	// LDtoc
    4826U,	// LDtocCPT
    4688U,	// LDtocJTI
    4698U,	// LDtocL
    3731U,	// LDtoc_restore
    12592511U,	// LFD
    14691195U,	// LFDU
    16788900U,	// LFDUX
    37760250U,	// LFDX
    37760215U,	// LFIWAX
    37760557U,	// LFIWZX
    12593697U,	// LFS
    14691255U,	// LFSU
    16788942U,	// LFSUX
    37760386U,	// LFSX
    12592192U,	// LHA
    12592192U,	// LHA8
    14691183U,	// LHAU
    14691183U,	// LHAU8
    16788879U,	// LHAUX
    16788879U,	// LHAUX8
    37760209U,	// LHAX
    37760209U,	// LHAX8
    37760349U,	// LHBRX
    12594771U,	// LHZ
    12594771U,	// LHZ8
    14691295U,	// LHZU
    14691295U,	// LHZU8
    16788971U,	// LHZUX
    16788971U,	// LHZUX8
    37760551U,	// LHZX
    37760551U,	// LHZX8
    23078727U,	// LI
    23078727U,	// LI8
    25176716U,	// LIS
    25176716U,	// LIS8
    37760229U,	// LVEBX
    37760274U,	// LVEHX
    37760516U,	// LVEWX
    37758896U,	// LVSL
    37759354U,	// LVSR
    37760505U,	// LVX
    37758908U,	// LVXL
    18883658U,	// LWA
    37760327U,	// LWARX
    16788886U,	// LWAUX
    37760223U,	// LWAX
    37760364U,	// LWBRX
    12594821U,	// LWZ
    12594821U,	// LWZ8
    14691301U,	// LWZU
    14691301U,	// LWZU8
    16788978U,	// LWZUX
    16788978U,	// LWZUX8
    37760565U,	// LWZX
    37760565U,	// LWZX8
    33564195U,	// MCRF
    141606U,	// MFCR
    141606U,	// MFCR8
    4866U,	// MFCR8pseud
    4878U,	// MFCRpseud
    141696U,	// MFCTR
    141696U,	// MFCTR8
    141851U,	// MFFS
    141636U,	// MFLR
    141636U,	// MFLR8
    27272745U,	// MFOCRF
    1190259U,	// MFTB8
    1321331U,	// MFVRSAVE
    1321331U,	// MFVRSAVEv
    141620U,	// MFVSCR
    75313U,	// MTCRF
    75313U,	// MTCRF8
    141703U,	// MTCTR
    141703U,	// MTCTR8
    82836U,	// MTFSB0
    82844U,	// MTFSB1
    33564216U,	// MTFSF
    141642U,	// MTLR
    141642U,	// MTLR8
    139294U,	// MTVRSAVE
    221214U,	// MTVRSAVEv
    141628U,	// MTVSCR
    9610U,	// MULHD
    11144U,	// MULHDU
    8889U,	// MULHDUo
    8366U,	// MULHDo
    11271U,	// MULHW
    11204U,	// MULHWU
    8915U,	// MULHWUo
    8952U,	// MULHWo
    9624U,	// MULLD
    8382U,	// MULLDo
    536880964U,	// MULLI
    11286U,	// MULLW
    8960U,	// MULLWo
    4814U,	// MovePCtoLR
    4501U,	// MovePCtoLR8
    9643U,	// NAND
    9643U,	// NAND8
    8396U,	// NAND8o
    8396U,	// NANDo
    33564224U,	// NEG
    33564224U,	// NEG8
    33562940U,	// NEG8o
    33562940U,	// NEGo
    4907U,	// NOP
    10582U,	// NOR
    10582U,	// NOR8
    8730U,	// NOR8o
    8730U,	// NORo
    10583U,	// OR
    10583U,	// OR8
    8731U,	// OR8o
    9554U,	// ORC
    9554U,	// ORC8
    8329U,	// ORC8o
    8329U,	// ORCo
    1073751908U,	// ORI
    1073751908U,	// ORI8
    1073752722U,	// ORIS
    1073752722U,	// ORIS8
    8731U,	// ORo
    33564098U,	// POPCNTD
    33562841U,	// POPCNTDo
    33565815U,	// POPCNTW
    33563431U,	// POPCNTWo
    4766U,	// RESTORE_CR
    4658U,	// RESTORE_VRSAVE
    10127U,	// RLDCL
    8596U,	// RLDCLo
    1342187414U,	// RLDICL
    1342185884U,	// RLDICLo
    1342187820U,	// RLDICR
    1342185995U,	// RLDICRo
    130033483U,	// RLDIMI
    130031994U,	// RLDIMIo
    163587923U,	// RLWIMI
    163586435U,	// RLWIMIo
    1610623028U,	// RLWINM
    1610623028U,	// RLWINM8
    1610621370U,	// RLWINM8o
    1610621370U,	// RLWINMo
    10300U,	// RLWNM
    8643U,	// RLWNMo
    4124U,	// SELECT_CC_F4
    4334U,	// SELECT_CC_F8
    4138U,	// SELECT_CC_I4
    4368U,	// SELECT_CC_I8
    4612U,	// SELECT_CC_VRRC
    9638U,	// SLD
    1342187313U,	// SLDI
    8390U,	// SLDo
    11307U,	// SLW
    1610622840U,	// SLWI
    8968U,	// SLWo
    4778U,	// SPILL_CR
    4674U,	// SPILL_VRSAVE
    9572U,	// SRAD
    1342187292U,	// SRADI
    1342185835U,	// SRADIo
    8335U,	// SRADo
    11257U,	// SRAW
    1610622825U,	// SRAWI
    1610621324U,	// SRAWIo
    8945U,	// SRAWo
    9661U,	// SRD
    1342187326U,	// SRDI
    8403U,	// SRDo
    11319U,	// SRW
    1610622853U,	// SRWI
    8974U,	// SRWo
    12592343U,	// STB
    12592343U,	// STB8
    14773109U,	// STBU
    14773109U,	// STBU8
    16870813U,	// STBUX
    16870813U,	// STBUX8
    37760244U,	// STBX
    37760244U,	// STBX8
    18884043U,	// STD
    37760341U,	// STDBRX
    37757783U,	// STDCX
    21064605U,	// STDU
    16870841U,	// STDUX
    37760268U,	// STDX
    12592516U,	// STFD
    14773121U,	// STFDU
    16870827U,	// STFDUX
    37760256U,	// STFDX
    37760531U,	// STFIWX
    12593702U,	// STFS
    14773181U,	// STFSU
    16870869U,	// STFSUX
    37760392U,	// STFSX
    12592845U,	// STH
    12592845U,	// STH8
    37760356U,	// STHBRX
    14773162U,	// STHU
    14773162U,	// STHU8
    16870855U,	// STHUX
    16870855U,	// STHUX8
    37760289U,	// STHX
    37760289U,	// STHX8
    37760236U,	// STVEBX
    37760281U,	// STVEHX
    37760523U,	// STVEWX
    37760510U,	// STVX
    37758914U,	// STVXL
    12594304U,	// STW
    12594304U,	// STW8
    37760371U,	// STWBRX
    37757791U,	// STWCX
    14773196U,	// STWU
    14773196U,	// STWU8
    16870877U,	// STWUX
    16870877U,	// STWUX8
    37760539U,	// STWX
    37760539U,	// STWX8
    9757U,	// SUBF
    9757U,	// SUBF8
    8500U,	// SUBF8o
    9532U,	// SUBFC
    9532U,	// SUBFC8
    8313U,	// SUBFC8o
    8313U,	// SUBFCo
    9700U,	// SUBFE
    9700U,	// SUBFE8
    8442U,	// SUBFE8o
    8442U,	// SUBFEo
    536880458U,	// SUBFIC
    536880458U,	// SUBFIC8
    33564146U,	// SUBFME
    33564146U,	// SUBFME8
    33562890U,	// SUBFME8o
    33562890U,	// SUBFMEo
    33564175U,	// SUBFZE
    33564175U,	// SUBFZE8
    33562923U,	// SUBFZE8o
    33562923U,	// SUBFZEo
    8500U,	// SUBFo
    4854U,	// SYNC
    140371U,	// TAILB
    140371U,	// TAILB8
    173116U,	// TAILBA
    173116U,	// TAILBA8
    4928U,	// TAILBCTR
    4928U,	// TAILBCTR8
    33858605U,	// TCRETURNai
    33858512U,	// TCRETURNai8
    33826135U,	// TCRETURNdi
    33825758U,	// TCRETURNdi8
    33827097U,	// TCRETURNri
    33825772U,	// TCRETURNri8
    4902U,	// TRAP
    33563642U,	// UPDATE_VRSAVE
    11406U,	// VADDCUW
    10411U,	// VADDFP
    10670U,	// VADDSBS
    10838U,	// VADDSHS
    11013U,	// VADDSWS
    10211U,	// VADDUBM
    10698U,	// VADDUBS
    10260U,	// VADDUHM
    10866U,	// VADDUHS
    10341U,	// VADDUWM
    11040U,	// VADDUWS
    9649U,	// VAND
    9525U,	// VANDC
    9345U,	// VAVGSB
    9847U,	// VAVGSH
    11324U,	// VAVGSW
    9445U,	// VAVGUB
    9947U,	// VAVGUH
    11415U,	// VAVGUW
    197143931U,	// VCFSX
    201338235U,	// VCFSX_0
    197144000U,	// VCFUX
    201338304U,	// VCFUX_0
    10375U,	// VCMPBFP
    8658U,	// VCMPBFPo
    10474U,	// VCMPEQFP
    8679U,	// VCMPEQFPo
    9470U,	// VCMPEQUB
    8253U,	// VCMPEQUBo
    9972U,	// VCMPEQUH
    8533U,	// VCMPEQUHo
    11431U,	// VCMPEQUW
    9009U,	// VCMPEQUWo
    10428U,	// VCMPGEFP
    8668U,	// VCMPGEFPo
    10484U,	// VCMPGTFP
    8690U,	// VCMPGTFPo
    9398U,	// VCMPGTSB
    8234U,	// VCMPGTSBo
    9900U,	// VCMPGTSH
    8514U,	// VCMPGTSHo
    11350U,	// VCMPGTSW
    8980U,	// VCMPGTSWo
    9501U,	// VCMPGTUB
    8288U,	// VCMPGTUBo
    9982U,	// VCMPGTUH
    8544U,	// VCMPGTUHo
    11441U,	// VCMPGTUW
    9020U,	// VCMPGTUWo
    197143337U,	// VCTSXS
    201337641U,	// VCTSXS_0
    197143345U,	// VCTUXS
    201337649U,	// VCTUXS_0
    33564877U,	// VEXPTEFP
    33564851U,	// VLOGEFP
    10402U,	// VMADDFP
    10494U,	// VMAXFP
    9415U,	// VMAXSB
    9917U,	// VMAXSH
    11367U,	// VMAXSW
    9511U,	// VMAXUB
    9992U,	// VMAXUH
    11451U,	// VMAXUW
    10815U,	// VMHADDSHS
    10826U,	// VMHRADDSHS
    10466U,	// VMINFP
    9381U,	// VMINSB
    9883U,	// VMINSH
    11342U,	// VMINSW
    9453U,	// VMINUB
    9955U,	// VMINUH
    11423U,	// VMINUW
    10249U,	// VMLADDUHM
    9302U,	// VMRGHB
    9804U,	// VMRGHH
    11263U,	// VMRGHW
    9310U,	// VMRGLB
    9812U,	// VMRGLH
    11278U,	// VMRGLW
    10192U,	// VMSUMMBM
    10230U,	// VMSUMSHM
    10847U,	// VMSUMSHS
    10220U,	// VMSUMUBM
    10269U,	// VMSUMUHM
    10875U,	// VMSUMUHS
    9336U,	// VMULESB
    9838U,	// VMULESH
    9436U,	// VMULEUB
    9938U,	// VMULEUH
    9389U,	// VMULOSB
    9891U,	// VMULOSH
    9461U,	// VMULOUB
    9963U,	// VMULOUH
    10384U,	// VNMSUBFP
    10581U,	// VNOR
    10593U,	// VOR
    10307U,	// VPERM
    11568U,	// VPKPX
    10916U,	// VPKSHSS
    10951U,	// VPKSHUS
    10925U,	// VPKSWSS
    10969U,	// VPKSWUS
    10314U,	// VPKUHUM
    10960U,	// VPKUHUS
    10323U,	// VPKUWUM
    10978U,	// VPKUWUS
    33564870U,	// VREFP
    33564711U,	// VRFIM
    33564782U,	// VRFIN
    33564934U,	// VRFIP
    33566296U,	// VRFIZ
    9318U,	// VRLB
    9820U,	// VRLH
    11300U,	// VRLW
    33564887U,	// VRSQRTEFP
    10154U,	// VSEL
    10161U,	// VSL
    9324U,	// VSLB
    10075U,	// VSLDOI
    9826U,	// VSLH
    10363U,	// VSLO
    11306U,	// VSLW
    197141711U,	// VSPLTB
    197142213U,	// VSPLTH
    31466642U,	// VSPLTISB
    31467144U,	// VSPLTISH
    31468612U,	// VSPLTISW
    197143663U,	// VSPLTW
    10619U,	// VSR
    9295U,	// VSRAB
    9797U,	// VSRAH
    11256U,	// VSRAW
    9330U,	// VSRB
    9832U,	// VSRH
    10369U,	// VSRO
    11318U,	// VSRW
    11397U,	// VSUBCUW
    10394U,	// VSUBFP
    10661U,	// VSUBSBS
    10806U,	// VSUBSHS
    11004U,	// VSUBSWS
    10202U,	// VSUBUBM
    10689U,	// VSUBUBS
    10240U,	// VSUBUHM
    10857U,	// VSUBUHS
    10332U,	// VSUBUWM
    11031U,	// VSUBUWS
    10994U,	// VSUM2SWS
    10651U,	// VSUM4SBS
    10796U,	// VSUM4SHS
    10679U,	// VSUM4UBS
    11022U,	// VSUMSWS
    33565991U,	// VUPKHPX
    33563785U,	// VUPKHSB
    33564287U,	// VUPKHSH
    33566007U,	// VUPKLPX
    33563804U,	// VUPKLSB
    33564306U,	// VUPKLSH
    10605U,	// VXOR
    8399213U,	// V_SET0
    1453124U,	// V_SETALLONES
    10600U,	// XOR
    10600U,	// XOR8
    8736U,	// XOR8o
    1073751907U,	// XORI
    1073751907U,	// XORI8
    1073752721U,	// XORIS
    1073752721U,	// XORIS8
    8736U,	// XORo
    0U
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// ADD4
    0U,	// ADD4o
    0U,	// ADD8
    0U,	// ADD8TLS
    0U,	// ADD8o
    0U,	// ADDC
    0U,	// ADDC8
    0U,	// ADDC8o
    0U,	// ADDCo
    0U,	// ADDE
    0U,	// ADDE8
    0U,	// ADDE8o
    0U,	// ADDEo
    0U,	// ADDI
    0U,	// ADDI8
    0U,	// ADDIC
    0U,	// ADDIC8
    0U,	// ADDICo
    0U,	// ADDIS
    0U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIdtprelL
    0U,	// ADDItlsgdL
    0U,	// ADDItlsldL
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8o
    0U,	// ADDMEo
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8o
    0U,	// ADDZEo
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND8
    0U,	// AND8o
    0U,	// ANDC
    0U,	// ANDC8
    0U,	// ANDC8o
    0U,	// ANDCo
    0U,	// ANDISo
    0U,	// ANDISo8
    0U,	// ANDIo
    0U,	// ANDIo8
    0U,	// ANDo
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// B
    0U,	// BCC
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCLR
    0U,	// BCLalways
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_TLSGD
    0U,	// BL8_NOP_TLSLD
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLR
    0U,	// CMPD
    0U,	// CMPDI
    0U,	// CMPLD
    0U,	// CMPLDI
    0U,	// CMPLW
    0U,	// CMPLWI
    0U,	// CMPW
    0U,	// CMPWI
    0U,	// CNTLZD
    0U,	// CNTLZDo
    0U,	// CNTLZW
    0U,	// CNTLZWo
    0U,	// CR6SET
    0U,	// CR6UNSET
    0U,	// CREQV
    0U,	// CROR
    0U,	// CRSET
    0U,	// CRUNSET
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBT
    0U,	// DCBTST
    0U,	// DCBZ
    0U,	// DCBZL
    0U,	// DIVD
    0U,	// DIVDU
    0U,	// DIVDUo
    0U,	// DIVDo
    0U,	// DIVW
    0U,	// DIVWU
    0U,	// DIVWUo
    0U,	// DIVWo
    0U,	// DSS
    0U,	// DSSALL
    0U,	// DST
    0U,	// DST64
    0U,	// DSTST
    0U,	// DSTST64
    0U,	// DSTSTT
    0U,	// DSTSTT64
    0U,	// DSTT
    0U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    0U,	// EQV
    0U,	// EQV8
    0U,	// EQV8o
    0U,	// EQVo
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8o
    0U,	// EXTSBo
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8o
    0U,	// EXTSHo
    0U,	// EXTSW
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64o
    0U,	// EXTSWo
    0U,	// FABSD
    0U,	// FABSDo
    0U,	// FABSS
    0U,	// FABSSo
    0U,	// FADD
    0U,	// FADDS
    0U,	// FADDSo
    0U,	// FADDo
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDSo
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUSo
    0U,	// FCFIDUo
    0U,	// FCFIDo
    0U,	// FCMPUD
    0U,	// FCMPUS
    0U,	// FCTIDUZ
    0U,	// FCTIDUZo
    0U,	// FCTIDZ
    0U,	// FCTIDZo
    0U,	// FCTIWUZ
    0U,	// FCTIWUZo
    0U,	// FCTIWZ
    0U,	// FCTIWZo
    0U,	// FDIV
    0U,	// FDIVS
    0U,	// FDIVSo
    0U,	// FDIVo
    1U,	// FMADD
    1U,	// FMADDS
    1U,	// FMADDSo
    1U,	// FMADDo
    0U,	// FMR
    0U,	// FMRo
    1U,	// FMSUB
    1U,	// FMSUBS
    1U,	// FMSUBSo
    1U,	// FMSUBo
    0U,	// FMUL
    0U,	// FMULS
    0U,	// FMULSo
    0U,	// FMULo
    0U,	// FNABSD
    0U,	// FNABSDo
    0U,	// FNABSS
    0U,	// FNABSSo
    0U,	// FNEGD
    0U,	// FNEGDo
    0U,	// FNEGS
    0U,	// FNEGSo
    1U,	// FNMADD
    1U,	// FNMADDS
    1U,	// FNMADDSo
    1U,	// FNMADDo
    1U,	// FNMSUB
    1U,	// FNMSUBS
    1U,	// FNMSUBSo
    1U,	// FNMSUBo
    0U,	// FRE
    0U,	// FRES
    0U,	// FRESo
    0U,	// FREo
    0U,	// FRIMD
    0U,	// FRIMDo
    0U,	// FRIMS
    0U,	// FRIMSo
    0U,	// FRIND
    0U,	// FRINDo
    0U,	// FRINDrint
    0U,	// FRINS
    0U,	// FRINSo
    0U,	// FRINSrint
    0U,	// FRIPD
    0U,	// FRIPDo
    0U,	// FRIPS
    0U,	// FRIPSo
    0U,	// FRIZD
    0U,	// FRIZDo
    0U,	// FRIZS
    0U,	// FRIZSo
    0U,	// FRSP
    0U,	// FRSPo
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTESo
    0U,	// FRSQRTEo
    1U,	// FSELD
    1U,	// FSELDo
    1U,	// FSELS
    1U,	// FSELSo
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTSo
    0U,	// FSQRTo
    0U,	// FSUB
    0U,	// FSUBS
    0U,	// FSUBSo
    0U,	// FSUBo
    0U,	// GETtlsADDR
    0U,	// GETtlsldADDR
    0U,	// ICBI
    1U,	// ISEL
    1U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LBZ
    0U,	// LBZ8
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    0U,	// LD
    0U,	// LDARX
    0U,	// LDBRX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    0U,	// LDgotTprelL
    0U,	// LDinto_toc
    0U,	// LDtoc
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LDtoc_restore
    0U,	// LFD
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHZ
    0U,	// LHZ8
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWBRX
    0U,	// LWZ
    0U,	// LWZ8
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    0U,	// MCRF
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCR8pseud
    0U,	// MFCRpseud
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFFS
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFOCRF
    0U,	// MFTB8
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVSCR
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTFSB0
    0U,	// MTFSB1
    0U,	// MTFSF
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVSCR
    0U,	// MULHD
    0U,	// MULHDU
    0U,	// MULHDUo
    0U,	// MULHDo
    0U,	// MULHW
    0U,	// MULHWU
    0U,	// MULHWUo
    0U,	// MULHWo
    0U,	// MULLD
    0U,	// MULLDo
    0U,	// MULLI
    0U,	// MULLW
    0U,	// MULLWo
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    0U,	// NAND
    0U,	// NAND8
    0U,	// NAND8o
    0U,	// NANDo
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8o
    0U,	// NEGo
    0U,	// NOP
    0U,	// NOR
    0U,	// NOR8
    0U,	// NOR8o
    0U,	// NORo
    0U,	// OR
    0U,	// OR8
    0U,	// OR8o
    0U,	// ORC
    0U,	// ORC8
    0U,	// ORC8o
    0U,	// ORCo
    0U,	// ORI
    0U,	// ORI8
    0U,	// ORIS
    0U,	// ORIS8
    0U,	// ORo
    0U,	// POPCNTD
    0U,	// POPCNTDo
    0U,	// POPCNTW
    0U,	// POPCNTWo
    0U,	// RESTORE_CR
    0U,	// RESTORE_VRSAVE
    3U,	// RLDCL
    3U,	// RLDCLo
    3U,	// RLDICL
    3U,	// RLDICLo
    3U,	// RLDICR
    3U,	// RLDICRo
    0U,	// RLDIMI
    0U,	// RLDIMIo
    0U,	// RLWIMI
    0U,	// RLWIMIo
    5U,	// RLWINM
    5U,	// RLWINM8
    5U,	// RLWINM8o
    5U,	// RLWINMo
    5U,	// RLWNM
    5U,	// RLWNMo
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_VRRC
    0U,	// SLD
    0U,	// SLDI
    0U,	// SLDo
    0U,	// SLW
    0U,	// SLWI
    0U,	// SLWo
    0U,	// SPILL_CR
    0U,	// SPILL_VRSAVE
    0U,	// SRAD
    0U,	// SRADI
    0U,	// SRADIo
    0U,	// SRADo
    0U,	// SRAW
    0U,	// SRAWI
    0U,	// SRAWIo
    0U,	// SRAWo
    0U,	// SRD
    0U,	// SRDI
    0U,	// SRDo
    0U,	// SRW
    0U,	// SRWI
    0U,	// SRWo
    0U,	// STB
    0U,	// STB8
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    0U,	// STD
    0U,	// STDBRX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    0U,	// STFD
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    0U,	// STWBRX
    0U,	// STWCX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    0U,	// SUBF
    0U,	// SUBF8
    0U,	// SUBF8o
    0U,	// SUBFC
    0U,	// SUBFC8
    0U,	// SUBFC8o
    0U,	// SUBFCo
    0U,	// SUBFE
    0U,	// SUBFE8
    0U,	// SUBFE8o
    0U,	// SUBFEo
    0U,	// SUBFIC
    0U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8o
    0U,	// SUBFMEo
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8o
    0U,	// SUBFZEo
    0U,	// SUBFo
    0U,	// SYNC
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    0U,	// TRAP
    0U,	// UPDATE_VRSAVE
    0U,	// VADDCUW
    0U,	// VADDFP
    0U,	// VADDSBS
    0U,	// VADDSHS
    0U,	// VADDSWS
    0U,	// VADDUBM
    0U,	// VADDUBS
    0U,	// VADDUHM
    0U,	// VADDUHS
    0U,	// VADDUWM
    0U,	// VADDUWS
    0U,	// VAND
    0U,	// VANDC
    0U,	// VAVGSB
    0U,	// VAVGSH
    0U,	// VAVGSW
    0U,	// VAVGUB
    0U,	// VAVGUH
    0U,	// VAVGUW
    0U,	// VCFSX
    0U,	// VCFSX_0
    0U,	// VCFUX
    0U,	// VCFUX_0
    0U,	// VCMPBFP
    0U,	// VCMPBFPo
    0U,	// VCMPEQFP
    0U,	// VCMPEQFPo
    0U,	// VCMPEQUB
    0U,	// VCMPEQUBo
    0U,	// VCMPEQUH
    0U,	// VCMPEQUHo
    0U,	// VCMPEQUW
    0U,	// VCMPEQUWo
    0U,	// VCMPGEFP
    0U,	// VCMPGEFPo
    0U,	// VCMPGTFP
    0U,	// VCMPGTFPo
    0U,	// VCMPGTSB
    0U,	// VCMPGTSBo
    0U,	// VCMPGTSH
    0U,	// VCMPGTSHo
    0U,	// VCMPGTSW
    0U,	// VCMPGTSWo
    0U,	// VCMPGTUB
    0U,	// VCMPGTUBo
    0U,	// VCMPGTUH
    0U,	// VCMPGTUHo
    0U,	// VCMPGTUW
    0U,	// VCMPGTUWo
    0U,	// VCTSXS
    0U,	// VCTSXS_0
    0U,	// VCTUXS
    0U,	// VCTUXS_0
    0U,	// VEXPTEFP
    0U,	// VLOGEFP
    1U,	// VMADDFP
    0U,	// VMAXFP
    0U,	// VMAXSB
    0U,	// VMAXSH
    0U,	// VMAXSW
    0U,	// VMAXUB
    0U,	// VMAXUH
    0U,	// VMAXUW
    1U,	// VMHADDSHS
    1U,	// VMHRADDSHS
    0U,	// VMINFP
    0U,	// VMINSB
    0U,	// VMINSH
    0U,	// VMINSW
    0U,	// VMINUB
    0U,	// VMINUH
    0U,	// VMINUW
    1U,	// VMLADDUHM
    0U,	// VMRGHB
    0U,	// VMRGHH
    0U,	// VMRGHW
    0U,	// VMRGLB
    0U,	// VMRGLH
    0U,	// VMRGLW
    1U,	// VMSUMMBM
    1U,	// VMSUMSHM
    1U,	// VMSUMSHS
    1U,	// VMSUMUBM
    1U,	// VMSUMUHM
    1U,	// VMSUMUHS
    0U,	// VMULESB
    0U,	// VMULESH
    0U,	// VMULEUB
    0U,	// VMULEUH
    0U,	// VMULOSB
    0U,	// VMULOSH
    0U,	// VMULOUB
    0U,	// VMULOUH
    1U,	// VNMSUBFP
    0U,	// VNOR
    0U,	// VOR
    1U,	// VPERM
    0U,	// VPKPX
    0U,	// VPKSHSS
    0U,	// VPKSHUS
    0U,	// VPKSWSS
    0U,	// VPKSWUS
    0U,	// VPKUHUM
    0U,	// VPKUHUS
    0U,	// VPKUWUM
    0U,	// VPKUWUS
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    0U,	// VRLB
    0U,	// VRLH
    0U,	// VRLW
    0U,	// VRSQRTEFP
    1U,	// VSEL
    0U,	// VSL
    0U,	// VSLB
    13U,	// VSLDOI
    0U,	// VSLH
    0U,	// VSLO
    0U,	// VSLW
    0U,	// VSPLTB
    0U,	// VSPLTH
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    0U,	// VSPLTW
    0U,	// VSR
    0U,	// VSRAB
    0U,	// VSRAH
    0U,	// VSRAW
    0U,	// VSRB
    0U,	// VSRH
    0U,	// VSRO
    0U,	// VSRW
    0U,	// VSUBCUW
    0U,	// VSUBFP
    0U,	// VSUBSBS
    0U,	// VSUBSHS
    0U,	// VSUBSWS
    0U,	// VSUBUBM
    0U,	// VSUBUBS
    0U,	// VSUBUHM
    0U,	// VSUBUHS
    0U,	// VSUBUWM
    0U,	// VSUBUWS
    0U,	// VSUM2SWS
    0U,	// VSUM4SBS
    0U,	// VSUM4SHS
    0U,	// VSUM4UBS
    0U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VXOR
    0U,	// V_SET0
    0U,	// V_SETALLONES
    0U,	// XOR
    0U,	// XOR8
    0U,	// XOR8o
    0U,	// XORI
    0U,	// XORI8
    0U,	// XORIS
    0U,	// XORIS8
    0U,	// XORo
    0U
  };

  const char AsmStrs[] = {
  /* 0 */ '#', 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 9, 0,
  /* 16 */ 'b', 'c', 'l', 32, '2', '0', ',', 32, '3', '1', ',', 32, 0,
  /* 29 */ 'm', 't', 's', 'p', 'r', 32, '2', '5', '6', ',', 32, 0,
  /* 41 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', '.', 32, 0,
  /* 52 */ 'e', 'x', 't', 's', 'b', '.', 32, 0,
  /* 60 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', '.', 32, 0,
  /* 71 */ 'f', 's', 'u', 'b', '.', 32, 0,
  /* 78 */ 'f', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 86 */ 'f', 'n', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 95 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', '.', 32, 0,
  /* 106 */ 'a', 'd', 'd', 'c', '.', 32, 0,
  /* 113 */ 'a', 'n', 'd', 'c', '.', 32, 0,
  /* 120 */ 's', 'u', 'b', 'f', 'c', '.', 32, 0,
  /* 128 */ 'a', 'd', 'd', 'i', 'c', '.', 32, 0,
  /* 136 */ 'o', 'r', 'c', '.', 32, 0,
  /* 142 */ 's', 'r', 'a', 'd', '.', 32, 0,
  /* 149 */ 'f', 'a', 'd', 'd', '.', 32, 0,
  /* 156 */ 'f', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 164 */ 'f', 'n', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 173 */ 'm', 'u', 'l', 'h', 'd', '.', 32, 0,
  /* 181 */ 'f', 'c', 'f', 'i', 'd', '.', 32, 0,
  /* 189 */ 'm', 'u', 'l', 'l', 'd', '.', 32, 0,
  /* 197 */ 's', 'l', 'd', '.', 32, 0,
  /* 203 */ 'n', 'a', 'n', 'd', '.', 32, 0,
  /* 210 */ 's', 'r', 'd', '.', 32, 0,
  /* 216 */ 'p', 'o', 'p', 'c', 'n', 't', 'd', '.', 32, 0,
  /* 226 */ 'd', 'i', 'v', 'd', '.', 32, 0,
  /* 233 */ 'c', 'n', 't', 'l', 'z', 'd', '.', 32, 0,
  /* 242 */ 'a', 'd', 'd', 'e', '.', 32, 0,
  /* 249 */ 's', 'u', 'b', 'f', 'e', '.', 32, 0,
  /* 257 */ 'a', 'd', 'd', 'm', 'e', '.', 32, 0,
  /* 265 */ 's', 'u', 'b', 'f', 'm', 'e', '.', 32, 0,
  /* 274 */ 'f', 'r', 'e', '.', 32, 0,
  /* 280 */ 'f', 'r', 's', 'q', 'r', 't', 'e', '.', 32, 0,
  /* 290 */ 'a', 'd', 'd', 'z', 'e', '.', 32, 0,
  /* 298 */ 's', 'u', 'b', 'f', 'z', 'e', '.', 32, 0,
  /* 307 */ 's', 'u', 'b', 'f', '.', 32, 0,
  /* 314 */ 'f', 'n', 'e', 'g', '.', 32, 0,
  /* 321 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', '.', 32, 0,
  /* 332 */ 'e', 'x', 't', 's', 'h', '.', 32, 0,
  /* 340 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', '.', 32, 0,
  /* 351 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', '.', 32, 0,
  /* 362 */ 's', 'r', 'a', 'd', 'i', '.', 32, 0,
  /* 370 */ 'a', 'n', 'd', 'i', '.', 32, 0,
  /* 377 */ 'r', 'l', 'd', 'i', 'm', 'i', '.', 32, 0,
  /* 386 */ 'r', 'l', 'w', 'i', 'm', 'i', '.', 32, 0,
  /* 395 */ 's', 'r', 'a', 'w', 'i', '.', 32, 0,
  /* 403 */ 'r', 'l', 'd', 'c', 'l', '.', 32, 0,
  /* 411 */ 'r', 'l', 'd', 'i', 'c', 'l', '.', 32, 0,
  /* 420 */ 'f', 's', 'e', 'l', '.', 32, 0,
  /* 427 */ 'f', 'm', 'u', 'l', '.', 32, 0,
  /* 434 */ 'f', 'r', 'i', 'm', '.', 32, 0,
  /* 441 */ 'r', 'l', 'w', 'i', 'n', 'm', '.', 32, 0,
  /* 450 */ 'r', 'l', 'w', 'n', 'm', '.', 32, 0,
  /* 458 */ 'f', 'r', 'i', 'n', '.', 32, 0,
  /* 465 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', '.', 32, 0,
  /* 475 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', '.', 32, 0,
  /* 486 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', '.', 32, 0,
  /* 497 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', '.', 32, 0,
  /* 508 */ 'f', 'r', 'i', 'p', '.', 32, 0,
  /* 515 */ 'f', 'r', 's', 'p', '.', 32, 0,
  /* 522 */ 'r', 'l', 'd', 'i', 'c', 'r', '.', 32, 0,
  /* 531 */ 'f', 'm', 'r', '.', 32, 0,
  /* 537 */ 'n', 'o', 'r', '.', 32, 0,
  /* 543 */ 'x', 'o', 'r', '.', 32, 0,
  /* 549 */ 'f', 'a', 'b', 's', '.', 32, 0,
  /* 556 */ 'f', 'n', 'a', 'b', 's', '.', 32, 0,
  /* 564 */ 'f', 's', 'u', 'b', 's', '.', 32, 0,
  /* 572 */ 'f', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 581 */ 'f', 'n', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 591 */ 'f', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 599 */ 'f', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 608 */ 'f', 'n', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 618 */ 'f', 'c', 'f', 'i', 'd', 's', '.', 32, 0,
  /* 627 */ 'f', 'r', 'e', 's', '.', 32, 0,
  /* 634 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 's', '.', 32, 0,
  /* 645 */ 'a', 'n', 'd', 'i', 's', '.', 32, 0,
  /* 653 */ 'f', 'm', 'u', 'l', 's', '.', 32, 0,
  /* 661 */ 'f', 's', 'q', 'r', 't', 's', '.', 32, 0,
  /* 670 */ 'f', 'c', 'f', 'i', 'd', 'u', 's', '.', 32, 0,
  /* 680 */ 'f', 'd', 'i', 'v', 's', '.', 32, 0,
  /* 688 */ 'f', 's', 'q', 'r', 't', '.', 32, 0,
  /* 696 */ 'm', 'u', 'l', 'h', 'd', 'u', '.', 32, 0,
  /* 705 */ 'f', 'c', 'f', 'i', 'd', 'u', '.', 32, 0,
  /* 714 */ 'd', 'i', 'v', 'd', 'u', '.', 32, 0,
  /* 722 */ 'm', 'u', 'l', 'h', 'w', 'u', '.', 32, 0,
  /* 731 */ 'd', 'i', 'v', 'w', 'u', '.', 32, 0,
  /* 739 */ 'f', 'd', 'i', 'v', '.', 32, 0,
  /* 746 */ 'e', 'q', 'v', '.', 32, 0,
  /* 752 */ 's', 'r', 'a', 'w', '.', 32, 0,
  /* 759 */ 'm', 'u', 'l', 'h', 'w', '.', 32, 0,
  /* 767 */ 'm', 'u', 'l', 'l', 'w', '.', 32, 0,
  /* 775 */ 's', 'l', 'w', '.', 32, 0,
  /* 781 */ 's', 'r', 'w', '.', 32, 0,
  /* 787 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', '.', 32, 0,
  /* 798 */ 'e', 'x', 't', 's', 'w', '.', 32, 0,
  /* 806 */ 'p', 'o', 'p', 'c', 'n', 't', 'w', '.', 32, 0,
  /* 816 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', '.', 32, 0,
  /* 827 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', '.', 32, 0,
  /* 838 */ 'd', 'i', 'v', 'w', '.', 32, 0,
  /* 845 */ 'c', 'n', 't', 'l', 'z', 'w', '.', 32, 0,
  /* 854 */ 's', 't', 'd', 'c', 'x', '.', 32, 0,
  /* 862 */ 's', 't', 'w', 'c', 'x', '.', 32, 0,
  /* 870 */ 'f', 'c', 't', 'i', 'd', 'z', '.', 32, 0,
  /* 879 */ 'f', 'r', 'i', 'z', '.', 32, 0,
  /* 886 */ 'f', 'c', 't', 'i', 'd', 'u', 'z', '.', 32, 0,
  /* 896 */ 'f', 'c', 't', 'i', 'w', 'u', 'z', '.', 32, 0,
  /* 906 */ 'f', 'c', 't', 'i', 'w', 'z', '.', 32, 0,
  /* 915 */ 'm', 't', 'f', 's', 'b', '0', 32, 0,
  /* 923 */ 'm', 't', 'f', 's', 'b', '1', 32, 0,
  /* 931 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 32, 0,
  /* 953 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 32, 0,
  /* 975 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', '8', 32, 0,
  /* 989 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', '8', 32, 0,
  /* 1003 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', '8', 32, 0,
  /* 1017 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 32, 0,
  /* 1032 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 32, 0,
  /* 1051 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 32, 0,
  /* 1068 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 32, 0,
  /* 1081 */ 'd', 'c', 'b', 'a', 32, 0,
  /* 1087 */ 'l', 'h', 'a', 32, 0,
  /* 1092 */ 'b', 'l', 'a', 32, 0,
  /* 1097 */ 'l', 'w', 'a', 32, 0,
  /* 1102 */ 'v', 's', 'r', 'a', 'b', 32, 0,
  /* 1109 */ 'v', 'm', 'r', 'g', 'h', 'b', 32, 0,
  /* 1117 */ 'v', 'm', 'r', 'g', 'l', 'b', 32, 0,
  /* 1125 */ 'v', 'r', 'l', 'b', 32, 0,
  /* 1131 */ 'v', 's', 'l', 'b', 32, 0,
  /* 1137 */ 'v', 's', 'r', 'b', 32, 0,
  /* 1143 */ 'v', 'm', 'u', 'l', 'e', 's', 'b', 32, 0,
  /* 1152 */ 'v', 'a', 'v', 'g', 's', 'b', 32, 0,
  /* 1160 */ 'v', 'u', 'p', 'k', 'h', 's', 'b', 32, 0,
  /* 1169 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'b', 32, 0,
  /* 1179 */ 'v', 'u', 'p', 'k', 'l', 's', 'b', 32, 0,
  /* 1188 */ 'v', 'm', 'i', 'n', 's', 'b', 32, 0,
  /* 1196 */ 'v', 'm', 'u', 'l', 'o', 's', 'b', 32, 0,
  /* 1205 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', 32, 0,
  /* 1215 */ 'e', 'x', 't', 's', 'b', 32, 0,
  /* 1222 */ 'v', 'm', 'a', 'x', 's', 'b', 32, 0,
  /* 1230 */ 'v', 's', 'p', 'l', 't', 'b', 32, 0,
  /* 1238 */ 's', 't', 'b', 32, 0,
  /* 1243 */ 'v', 'm', 'u', 'l', 'e', 'u', 'b', 32, 0,
  /* 1252 */ 'v', 'a', 'v', 'g', 'u', 'b', 32, 0,
  /* 1260 */ 'v', 'm', 'i', 'n', 'u', 'b', 32, 0,
  /* 1268 */ 'v', 'm', 'u', 'l', 'o', 'u', 'b', 32, 0,
  /* 1277 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', 32, 0,
  /* 1287 */ 'f', 's', 'u', 'b', 32, 0,
  /* 1293 */ 'f', 'm', 's', 'u', 'b', 32, 0,
  /* 1300 */ 'f', 'n', 'm', 's', 'u', 'b', 32, 0,
  /* 1308 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', 32, 0,
  /* 1318 */ 'v', 'm', 'a', 'x', 'u', 'b', 32, 0,
  /* 1326 */ 'a', 'd', 'd', 'c', 32, 0,
  /* 1332 */ 'v', 'a', 'n', 'd', 'c', 32, 0,
  /* 1339 */ 's', 'u', 'b', 'f', 'c', 32, 0,
  /* 1346 */ 'a', 'd', 'd', 'i', 'c', 32, 0,
  /* 1353 */ 's', 'u', 'b', 'f', 'i', 'c', 32, 0,
  /* 1361 */ 'o', 'r', 'c', 32, 0,
  /* 1366 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 32, 0,
  /* 1379 */ 's', 'r', 'a', 'd', 32, 0,
  /* 1385 */ 'f', 'a', 'd', 'd', 32, 0,
  /* 1391 */ 'f', 'm', 'a', 'd', 'd', 32, 0,
  /* 1398 */ 'f', 'n', 'm', 'a', 'd', 'd', 32, 0,
  /* 1406 */ 'l', 'f', 'd', 32, 0,
  /* 1411 */ 's', 't', 'f', 'd', 32, 0,
  /* 1417 */ 'm', 'u', 'l', 'h', 'd', 32, 0,
  /* 1424 */ 'f', 'c', 'f', 'i', 'd', 32, 0,
  /* 1431 */ 'm', 'u', 'l', 'l', 'd', 32, 0,
  /* 1438 */ 'c', 'm', 'p', 'l', 'd', 32, 0,
  /* 1445 */ 's', 'l', 'd', 32, 0,
  /* 1450 */ 'n', 'a', 'n', 'd', 32, 0,
  /* 1456 */ 'v', 'a', 'n', 'd', 32, 0,
  /* 1462 */ 'c', 'm', 'p', 'd', 32, 0,
  /* 1468 */ 's', 'r', 'd', 32, 0,
  /* 1473 */ 'p', 'o', 'p', 'c', 'n', 't', 'd', 32, 0,
  /* 1482 */ 's', 't', 'd', 32, 0,
  /* 1487 */ 'd', 'i', 'v', 'd', 32, 0,
  /* 1493 */ 'c', 'n', 't', 'l', 'z', 'd', 32, 0,
  /* 1501 */ 'a', 'd', 'd', 'e', 32, 0,
  /* 1507 */ 's', 'u', 'b', 'f', 'e', 32, 0,
  /* 1514 */ 'a', 'd', 'd', 'm', 'e', 32, 0,
  /* 1521 */ 's', 'u', 'b', 'f', 'm', 'e', 32, 0,
  /* 1529 */ 'f', 'r', 'e', 32, 0,
  /* 1534 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 32, 0,
  /* 1543 */ 'a', 'd', 'd', 'z', 'e', 32, 0,
  /* 1550 */ 's', 'u', 'b', 'f', 'z', 'e', 32, 0,
  /* 1558 */ 'd', 'c', 'b', 'f', 32, 0,
  /* 1564 */ 's', 'u', 'b', 'f', 32, 0,
  /* 1570 */ 'm', 'c', 'r', 'f', 32, 0,
  /* 1576 */ 'm', 'f', 'o', 'c', 'r', 'f', 32, 0,
  /* 1584 */ 'm', 't', 'c', 'r', 'f', 32, 0,
  /* 1591 */ 'm', 't', 'f', 's', 'f', 32, 0,
  /* 1598 */ 'f', 'n', 'e', 'g', 32, 0,
  /* 1604 */ 'v', 's', 'r', 'a', 'h', 32, 0,
  /* 1611 */ 'v', 'm', 'r', 'g', 'h', 'h', 32, 0,
  /* 1619 */ 'v', 'm', 'r', 'g', 'l', 'h', 32, 0,
  /* 1627 */ 'v', 'r', 'l', 'h', 32, 0,
  /* 1633 */ 'v', 's', 'l', 'h', 32, 0,
  /* 1639 */ 'v', 's', 'r', 'h', 32, 0,
  /* 1645 */ 'v', 'm', 'u', 'l', 'e', 's', 'h', 32, 0,
  /* 1654 */ 'v', 'a', 'v', 'g', 's', 'h', 32, 0,
  /* 1662 */ 'v', 'u', 'p', 'k', 'h', 's', 'h', 32, 0,
  /* 1671 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'h', 32, 0,
  /* 1681 */ 'v', 'u', 'p', 'k', 'l', 's', 'h', 32, 0,
  /* 1690 */ 'v', 'm', 'i', 'n', 's', 'h', 32, 0,
  /* 1698 */ 'v', 'm', 'u', 'l', 'o', 's', 'h', 32, 0,
  /* 1707 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', 32, 0,
  /* 1717 */ 'e', 'x', 't', 's', 'h', 32, 0,
  /* 1724 */ 'v', 'm', 'a', 'x', 's', 'h', 32, 0,
  /* 1732 */ 'v', 's', 'p', 'l', 't', 'h', 32, 0,
  /* 1740 */ 's', 't', 'h', 32, 0,
  /* 1745 */ 'v', 'm', 'u', 'l', 'e', 'u', 'h', 32, 0,
  /* 1754 */ 'v', 'a', 'v', 'g', 'u', 'h', 32, 0,
  /* 1762 */ 'v', 'm', 'i', 'n', 'u', 'h', 32, 0,
  /* 1770 */ 'v', 'm', 'u', 'l', 'o', 'u', 'h', 32, 0,
  /* 1779 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', 32, 0,
  /* 1789 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', 32, 0,
  /* 1799 */ 'v', 'm', 'a', 'x', 'u', 'h', 32, 0,
  /* 1807 */ 'd', 'c', 'b', 'i', 32, 0,
  /* 1813 */ 'i', 'c', 'b', 'i', 32, 0,
  /* 1819 */ 's', 'r', 'a', 'd', 'i', 32, 0,
  /* 1826 */ 'a', 'd', 'd', 'i', 32, 0,
  /* 1832 */ 'c', 'm', 'p', 'l', 'd', 'i', 32, 0,
  /* 1840 */ 's', 'l', 'd', 'i', 32, 0,
  /* 1846 */ 'c', 'm', 'p', 'd', 'i', 32, 0,
  /* 1853 */ 's', 'r', 'd', 'i', 32, 0,
  /* 1859 */ 'm', 'u', 'l', 'l', 'i', 32, 0,
  /* 1866 */ 'r', 'l', 'd', 'i', 'm', 'i', 32, 0,
  /* 1874 */ 'r', 'l', 'w', 'i', 'm', 'i', 32, 0,
  /* 1882 */ 'v', 's', 'l', 'd', 'o', 'i', 32, 0,
  /* 1890 */ 'x', 'o', 'r', 'i', 32, 0,
  /* 1896 */ 's', 'r', 'a', 'w', 'i', 32, 0,
  /* 1903 */ 'c', 'm', 'p', 'l', 'w', 'i', 32, 0,
  /* 1911 */ 's', 'l', 'w', 'i', 32, 0,
  /* 1917 */ 'c', 'm', 'p', 'w', 'i', 32, 0,
  /* 1924 */ 's', 'r', 'w', 'i', 32, 0,
  /* 1930 */ 'b', 'l', 32, 0,
  /* 1934 */ 'r', 'l', 'd', 'c', 'l', 32, 0,
  /* 1941 */ 'r', 'l', 'd', 'i', 'c', 'l', 32, 0,
  /* 1949 */ 'f', 's', 'e', 'l', 32, 0,
  /* 1955 */ 'i', 's', 'e', 'l', 32, 0,
  /* 1961 */ 'v', 's', 'e', 'l', 32, 0,
  /* 1967 */ 'l', 'v', 's', 'l', 32, 0,
  /* 1973 */ 'f', 'm', 'u', 'l', 32, 0,
  /* 1979 */ 'l', 'v', 'x', 'l', 32, 0,
  /* 1985 */ 's', 't', 'v', 'x', 'l', 32, 0,
  /* 1992 */ 'd', 'c', 'b', 'z', 'l', 32, 0,
  /* 1999 */ 'v', 'm', 's', 'u', 'm', 'm', 'b', 'm', 32, 0,
  /* 2009 */ 'v', 's', 'u', 'b', 'u', 'b', 'm', 32, 0,
  /* 2018 */ 'v', 'a', 'd', 'd', 'u', 'b', 'm', 32, 0,
  /* 2027 */ 'v', 'm', 's', 'u', 'm', 'u', 'b', 'm', 32, 0,
  /* 2037 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 'm', 32, 0,
  /* 2047 */ 'v', 's', 'u', 'b', 'u', 'h', 'm', 32, 0,
  /* 2056 */ 'v', 'm', 'l', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 2067 */ 'v', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 2076 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 'm', 32, 0,
  /* 2086 */ 'v', 'r', 'f', 'i', 'm', 32, 0,
  /* 2093 */ 'f', 'r', 'i', 'm', 32, 0,
  /* 2099 */ 'r', 'l', 'w', 'i', 'n', 'm', 32, 0,
  /* 2107 */ 'r', 'l', 'w', 'n', 'm', 32, 0,
  /* 2114 */ 'v', 'p', 'e', 'r', 'm', 32, 0,
  /* 2121 */ 'v', 'p', 'k', 'u', 'h', 'u', 'm', 32, 0,
  /* 2130 */ 'v', 'p', 'k', 'u', 'w', 'u', 'm', 32, 0,
  /* 2139 */ 'v', 's', 'u', 'b', 'u', 'w', 'm', 32, 0,
  /* 2148 */ 'v', 'a', 'd', 'd', 'u', 'w', 'm', 32, 0,
  /* 2157 */ 'v', 'r', 'f', 'i', 'n', 32, 0,
  /* 2164 */ 'f', 'r', 'i', 'n', 32, 0,
  /* 2170 */ 'v', 's', 'l', 'o', 32, 0,
  /* 2176 */ 'v', 's', 'r', 'o', 32, 0,
  /* 2182 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', 32, 0,
  /* 2191 */ 'v', 'n', 'm', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 2201 */ 'v', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 2209 */ 'v', 'm', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 2218 */ 'v', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 2226 */ 'v', 'l', 'o', 'g', 'e', 'f', 'p', 32, 0,
  /* 2235 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', 32, 0,
  /* 2245 */ 'v', 'r', 'e', 'f', 'p', 32, 0,
  /* 2252 */ 'v', 'e', 'x', 'p', 't', 'e', 'f', 'p', 32, 0,
  /* 2262 */ 'v', 'r', 's', 'q', 'r', 't', 'e', 'f', 'p', 32, 0,
  /* 2273 */ 'v', 'm', 'i', 'n', 'f', 'p', 32, 0,
  /* 2281 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', 32, 0,
  /* 2291 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', 32, 0,
  /* 2301 */ 'v', 'm', 'a', 'x', 'f', 'p', 32, 0,
  /* 2309 */ 'v', 'r', 'f', 'i', 'p', 32, 0,
  /* 2316 */ 'f', 'r', 'i', 'p', 32, 0,
  /* 2322 */ 'f', 'r', 's', 'p', 32, 0,
  /* 2328 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 32, 0,
  /* 2341 */ 'm', 'f', 'c', 'r', 32, 0,
  /* 2347 */ 'r', 'l', 'd', 'i', 'c', 'r', 32, 0,
  /* 2355 */ 'm', 'f', 'v', 's', 'c', 'r', 32, 0,
  /* 2363 */ 'm', 't', 'v', 's', 'c', 'r', 32, 0,
  /* 2371 */ 'm', 'f', 'l', 'r', 32, 0,
  /* 2377 */ 'm', 't', 'l', 'r', 32, 0,
  /* 2383 */ 'f', 'm', 'r', 32, 0,
  /* 2388 */ 'v', 'n', 'o', 'r', 32, 0,
  /* 2394 */ 'c', 'r', 'o', 'r', 32, 0,
  /* 2400 */ 'v', 'o', 'r', 32, 0,
  /* 2405 */ 'c', 'r', 'x', 'o', 'r', 32, 0,
  /* 2412 */ 'v', 'x', 'o', 'r', 32, 0,
  /* 2418 */ 'm', 'f', 's', 'p', 'r', 32, 0,
  /* 2425 */ 'l', 'v', 's', 'r', 32, 0,
  /* 2431 */ 'm', 'f', 'c', 't', 'r', 32, 0,
  /* 2438 */ 'm', 't', 'c', 't', 'r', 32, 0,
  /* 2445 */ 'f', 'a', 'b', 's', 32, 0,
  /* 2451 */ 'f', 'n', 'a', 'b', 's', 32, 0,
  /* 2458 */ 'v', 's', 'u', 'm', '4', 's', 'b', 's', 32, 0,
  /* 2468 */ 'v', 's', 'u', 'b', 's', 'b', 's', 32, 0,
  /* 2477 */ 'v', 'a', 'd', 'd', 's', 'b', 's', 32, 0,
  /* 2486 */ 'v', 's', 'u', 'm', '4', 'u', 'b', 's', 32, 0,
  /* 2496 */ 'v', 's', 'u', 'b', 'u', 'b', 's', 32, 0,
  /* 2505 */ 'v', 'a', 'd', 'd', 'u', 'b', 's', 32, 0,
  /* 2514 */ 'f', 's', 'u', 'b', 's', 32, 0,
  /* 2521 */ 'f', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 2529 */ 'f', 'n', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 2538 */ 'f', 'a', 'd', 'd', 's', 32, 0,
  /* 2545 */ 'f', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 2553 */ 'f', 'n', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 2562 */ 'f', 'c', 'f', 'i', 'd', 's', 32, 0,
  /* 2570 */ 'f', 'r', 'e', 's', 32, 0,
  /* 2576 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 's', 32, 0,
  /* 2586 */ 'm', 'f', 'f', 's', 32, 0,
  /* 2592 */ 'l', 'f', 's', 32, 0,
  /* 2597 */ 's', 't', 'f', 's', 32, 0,
  /* 2603 */ 'v', 's', 'u', 'm', '4', 's', 'h', 's', 32, 0,
  /* 2613 */ 'v', 's', 'u', 'b', 's', 'h', 's', 32, 0,
  /* 2622 */ 'v', 'm', 'h', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 2633 */ 'v', 'm', 'h', 'r', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 2645 */ 'v', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 2654 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 's', 32, 0,
  /* 2664 */ 'v', 's', 'u', 'b', 'u', 'h', 's', 32, 0,
  /* 2673 */ 'v', 'a', 'd', 'd', 'u', 'h', 's', 32, 0,
  /* 2682 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 's', 32, 0,
  /* 2692 */ 'a', 'd', 'd', 'i', 's', 32, 0,
  /* 2699 */ 'l', 'i', 's', 32, 0,
  /* 2704 */ 'x', 'o', 'r', 'i', 's', 32, 0,
  /* 2711 */ 'f', 'm', 'u', 'l', 's', 32, 0,
  /* 2718 */ 'd', 's', 's', 32, 0,
  /* 2723 */ 'v', 'p', 'k', 's', 'h', 's', 's', 32, 0,
  /* 2732 */ 'v', 'p', 'k', 's', 'w', 's', 's', 32, 0,
  /* 2741 */ 'f', 's', 'q', 'r', 't', 's', 32, 0,
  /* 2749 */ 'f', 'c', 'f', 'i', 'd', 'u', 's', 32, 0,
  /* 2758 */ 'v', 'p', 'k', 's', 'h', 'u', 's', 32, 0,
  /* 2767 */ 'v', 'p', 'k', 'u', 'h', 'u', 's', 32, 0,
  /* 2776 */ 'v', 'p', 'k', 's', 'w', 'u', 's', 32, 0,
  /* 2785 */ 'v', 'p', 'k', 'u', 'w', 'u', 's', 32, 0,
  /* 2794 */ 'f', 'd', 'i', 'v', 's', 32, 0,
  /* 2801 */ 'v', 's', 'u', 'm', '2', 's', 'w', 's', 32, 0,
  /* 2811 */ 'v', 's', 'u', 'b', 's', 'w', 's', 32, 0,
  /* 2820 */ 'v', 'a', 'd', 'd', 's', 'w', 's', 32, 0,
  /* 2829 */ 'v', 's', 'u', 'm', 's', 'w', 's', 32, 0,
  /* 2838 */ 'v', 's', 'u', 'b', 'u', 'w', 's', 32, 0,
  /* 2847 */ 'v', 'a', 'd', 'd', 'u', 'w', 's', 32, 0,
  /* 2856 */ 'v', 'c', 't', 's', 'x', 's', 32, 0,
  /* 2864 */ 'v', 'c', 't', 'u', 'x', 's', 32, 0,
  /* 2872 */ 'd', 'c', 'b', 't', 32, 0,
  /* 2878 */ 'f', 's', 'q', 'r', 't', 32, 0,
  /* 2885 */ 'd', 'c', 'b', 's', 't', 32, 0,
  /* 2892 */ 'd', 's', 't', 32, 0,
  /* 2897 */ 'd', 'c', 'b', 't', 's', 't', 32, 0,
  /* 2905 */ 'd', 's', 't', 's', 't', 32, 0,
  /* 2912 */ 'd', 's', 't', 't', 32, 0,
  /* 2918 */ 'd', 's', 't', 's', 't', 't', 32, 0,
  /* 2926 */ 'l', 'h', 'a', 'u', 32, 0,
  /* 2932 */ 's', 't', 'b', 'u', 32, 0,
  /* 2938 */ 'l', 'f', 'd', 'u', 32, 0,
  /* 2944 */ 's', 't', 'f', 'd', 'u', 32, 0,
  /* 2951 */ 'm', 'u', 'l', 'h', 'd', 'u', 32, 0,
  /* 2959 */ 'f', 'c', 'f', 'i', 'd', 'u', 32, 0,
  /* 2967 */ 'l', 'd', 'u', 32, 0,
  /* 2972 */ 's', 't', 'd', 'u', 32, 0,
  /* 2978 */ 'd', 'i', 'v', 'd', 'u', 32, 0,
  /* 2985 */ 's', 't', 'h', 'u', 32, 0,
  /* 2991 */ 'f', 'c', 'm', 'p', 'u', 32, 0,
  /* 2998 */ 'l', 'f', 's', 'u', 32, 0,
  /* 3004 */ 's', 't', 'f', 's', 'u', 32, 0,
  /* 3011 */ 'm', 'u', 'l', 'h', 'w', 'u', 32, 0,
  /* 3019 */ 's', 't', 'w', 'u', 32, 0,
  /* 3025 */ 'd', 'i', 'v', 'w', 'u', 32, 0,
  /* 3032 */ 'l', 'b', 'z', 'u', 32, 0,
  /* 3038 */ 'l', 'h', 'z', 'u', 32, 0,
  /* 3044 */ 'l', 'w', 'z', 'u', 32, 0,
  /* 3050 */ 'f', 'd', 'i', 'v', 32, 0,
  /* 3056 */ 'c', 'r', 'e', 'q', 'v', 32, 0,
  /* 3063 */ 'v', 's', 'r', 'a', 'w', 32, 0,
  /* 3070 */ 'v', 'm', 'r', 'g', 'h', 'w', 32, 0,
  /* 3078 */ 'm', 'u', 'l', 'h', 'w', 32, 0,
  /* 3085 */ 'v', 'm', 'r', 'g', 'l', 'w', 32, 0,
  /* 3093 */ 'm', 'u', 'l', 'l', 'w', 32, 0,
  /* 3100 */ 'c', 'm', 'p', 'l', 'w', 32, 0,
  /* 3107 */ 'v', 'r', 'l', 'w', 32, 0,
  /* 3113 */ 'v', 's', 'l', 'w', 32, 0,
  /* 3119 */ 'c', 'm', 'p', 'w', 32, 0,
  /* 3125 */ 'v', 's', 'r', 'w', 32, 0,
  /* 3131 */ 'v', 'a', 'v', 'g', 's', 'w', 32, 0,
  /* 3139 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'w', 32, 0,
  /* 3149 */ 'v', 'm', 'i', 'n', 's', 'w', 32, 0,
  /* 3157 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', 32, 0,
  /* 3167 */ 'e', 'x', 't', 's', 'w', 32, 0,
  /* 3174 */ 'v', 'm', 'a', 'x', 's', 'w', 32, 0,
  /* 3182 */ 'v', 's', 'p', 'l', 't', 'w', 32, 0,
  /* 3190 */ 'p', 'o', 'p', 'c', 'n', 't', 'w', 32, 0,
  /* 3199 */ 's', 't', 'w', 32, 0,
  /* 3204 */ 'v', 's', 'u', 'b', 'c', 'u', 'w', 32, 0,
  /* 3213 */ 'v', 'a', 'd', 'd', 'c', 'u', 'w', 32, 0,
  /* 3222 */ 'v', 'a', 'v', 'g', 'u', 'w', 32, 0,
  /* 3230 */ 'v', 'm', 'i', 'n', 'u', 'w', 32, 0,
  /* 3238 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', 32, 0,
  /* 3248 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', 32, 0,
  /* 3258 */ 'v', 'm', 'a', 'x', 'u', 'w', 32, 0,
  /* 3266 */ 'd', 'i', 'v', 'w', 32, 0,
  /* 3272 */ 'c', 'n', 't', 'l', 'z', 'w', 32, 0,
  /* 3280 */ 'l', 'h', 'a', 'x', 32, 0,
  /* 3286 */ 'l', 'f', 'i', 'w', 'a', 'x', 32, 0,
  /* 3294 */ 'l', 'w', 'a', 'x', 32, 0,
  /* 3300 */ 'l', 'v', 'e', 'b', 'x', 32, 0,
  /* 3307 */ 's', 't', 'v', 'e', 'b', 'x', 32, 0,
  /* 3315 */ 's', 't', 'b', 'x', 32, 0,
  /* 3321 */ 'l', 'f', 'd', 'x', 32, 0,
  /* 3327 */ 's', 't', 'f', 'd', 'x', 32, 0,
  /* 3334 */ 'l', 'd', 'x', 32, 0,
  /* 3339 */ 's', 't', 'd', 'x', 32, 0,
  /* 3345 */ 'l', 'v', 'e', 'h', 'x', 32, 0,
  /* 3352 */ 's', 't', 'v', 'e', 'h', 'x', 32, 0,
  /* 3360 */ 's', 't', 'h', 'x', 32, 0,
  /* 3366 */ 'v', 'u', 'p', 'k', 'h', 'p', 'x', 32, 0,
  /* 3375 */ 'v', 'p', 'k', 'p', 'x', 32, 0,
  /* 3382 */ 'v', 'u', 'p', 'k', 'l', 'p', 'x', 32, 0,
  /* 3391 */ 'l', 'd', 'a', 'r', 'x', 32, 0,
  /* 3398 */ 'l', 'w', 'a', 'r', 'x', 32, 0,
  /* 3405 */ 'l', 'd', 'b', 'r', 'x', 32, 0,
  /* 3412 */ 's', 't', 'd', 'b', 'r', 'x', 32, 0,
  /* 3420 */ 'l', 'h', 'b', 'r', 'x', 32, 0,
  /* 3427 */ 's', 't', 'h', 'b', 'r', 'x', 32, 0,
  /* 3435 */ 'l', 'w', 'b', 'r', 'x', 32, 0,
  /* 3442 */ 's', 't', 'w', 'b', 'r', 'x', 32, 0,
  /* 3450 */ 'v', 'c', 'f', 's', 'x', 32, 0,
  /* 3457 */ 'l', 'f', 's', 'x', 32, 0,
  /* 3463 */ 's', 't', 'f', 's', 'x', 32, 0,
  /* 3470 */ 'l', 'h', 'a', 'u', 'x', 32, 0,
  /* 3477 */ 'l', 'w', 'a', 'u', 'x', 32, 0,
  /* 3484 */ 's', 't', 'b', 'u', 'x', 32, 0,
  /* 3491 */ 'l', 'f', 'd', 'u', 'x', 32, 0,
  /* 3498 */ 's', 't', 'f', 'd', 'u', 'x', 32, 0,
  /* 3506 */ 'l', 'd', 'u', 'x', 32, 0,
  /* 3512 */ 's', 't', 'd', 'u', 'x', 32, 0,
  /* 3519 */ 'v', 'c', 'f', 'u', 'x', 32, 0,
  /* 3526 */ 's', 't', 'h', 'u', 'x', 32, 0,
  /* 3533 */ 'l', 'f', 's', 'u', 'x', 32, 0,
  /* 3540 */ 's', 't', 'f', 's', 'u', 'x', 32, 0,
  /* 3548 */ 's', 't', 'w', 'u', 'x', 32, 0,
  /* 3555 */ 'l', 'b', 'z', 'u', 'x', 32, 0,
  /* 3562 */ 'l', 'h', 'z', 'u', 'x', 32, 0,
  /* 3569 */ 'l', 'w', 'z', 'u', 'x', 32, 0,
  /* 3576 */ 'l', 'v', 'x', 32, 0,
  /* 3581 */ 's', 't', 'v', 'x', 32, 0,
  /* 3587 */ 'l', 'v', 'e', 'w', 'x', 32, 0,
  /* 3594 */ 's', 't', 'v', 'e', 'w', 'x', 32, 0,
  /* 3602 */ 's', 't', 'f', 'i', 'w', 'x', 32, 0,
  /* 3610 */ 's', 't', 'w', 'x', 32, 0,
  /* 3616 */ 'l', 'b', 'z', 'x', 32, 0,
  /* 3622 */ 'l', 'h', 'z', 'x', 32, 0,
  /* 3628 */ 'l', 'f', 'i', 'w', 'z', 'x', 32, 0,
  /* 3636 */ 'l', 'w', 'z', 'x', 32, 0,
  /* 3642 */ 'd', 'c', 'b', 'z', 32, 0,
  /* 3648 */ 'l', 'b', 'z', 32, 0,
  /* 3653 */ 'b', 'd', 'z', 32, 0,
  /* 3658 */ 'f', 'c', 't', 'i', 'd', 'z', 32, 0,
  /* 3666 */ 'l', 'h', 'z', 32, 0,
  /* 3671 */ 'v', 'r', 'f', 'i', 'z', 32, 0,
  /* 3678 */ 'f', 'r', 'i', 'z', 32, 0,
  /* 3684 */ 'b', 'd', 'n', 'z', 32, 0,
  /* 3690 */ 'f', 'c', 't', 'i', 'd', 'u', 'z', 32, 0,
  /* 3699 */ 'f', 'c', 't', 'i', 'w', 'u', 'z', 32, 0,
  /* 3708 */ 'f', 'c', 't', 'i', 'w', 'z', 32, 0,
  /* 3716 */ 'l', 'w', 'z', 32, 0,
  /* 3721 */ 'l', 'd', 32, '2', ',', 32, '8', '(', 0,
  /* 3730 */ 'l', 'd', 32, '2', ',', 32, '4', '0', '(', '1', ')', 0,
  /* 3742 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 3763 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 3784 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 3806 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 3827 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 3844 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 3865 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 3885 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 0,
  /* 3904 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 0,
  /* 3922 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 3943 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 3964 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 3986 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 4003 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 4024 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 4045 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 4065 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '6', '4', 0,
  /* 4084 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '6', '4', 0,
  /* 4102 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'i', '6', '4', 0,
  /* 4123 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 4137 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 4151 */ 'c', 'r', 'x', 'o', 'r', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 4165 */ 'c', 'r', 'e', 'q', 'v', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 4179 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 4200 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 4221 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 4243 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 4264 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 4281 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 4302 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 4322 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 4333 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 4347 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 4367 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 4381 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 4401 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 4422 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 4442 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 4462 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 4481 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 4500 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 4513 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'i', '8', 0,
  /* 4529 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 4541 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 4555 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 4569 */ '#', 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 4586 */ '#', 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 4601 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 4611 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 4627 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4640 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4647 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4657 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4673 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4687 */ '#', 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 4697 */ '#', 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 4705 */ '#', 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 4715 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 4727 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 4739 */ '#', 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 4752 */ '#', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 4765 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 4777 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 4787 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 4801 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 4813 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 4825 */ '#', 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 4835 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 4850 */ 'b', 0,
  /* 4852 */ 'i', 's', 'y', 'n', 'c', 0,
  /* 4858 */ '#', 'L', 'D', 't', 'o', 'c', 0,
  /* 4865 */ '#', 'M', 'F', 'C', 'R', '8', 'p', 's', 'e', 'u', 'd', 0,
  /* 4877 */ '#', 'M', 'F', 'C', 'R', 'p', 's', 'e', 'u', 'd', 0,
  /* 4888 */ 'd', 's', 's', 'a', 'l', 'l', 0,
  /* 4895 */ 'b', 'c', 't', 'r', 'l', 0,
  /* 4901 */ 't', 'r', 'a', 'p', 0,
  /* 4906 */ 'n', 'o', 'p', 0,
  /* 4910 */ 'b', 'l', 'r', 0,
  /* 4914 */ 'b', 'd', 'z', 'l', 'r', 0,
  /* 4920 */ 'b', 'd', 'n', 'z', 'l', 'r', 0,
  /* 4927 */ 'b', 'c', 't', 'r', 0,
  /* 4932 */ '#', 'F', 'R', 'I', 'N', 'D', 'r', 'i', 'n', 't', 0,
  /* 4943 */ '#', 'F', 'R', 'I', 'N', 'S', 'r', 'i', 'n', 't', 0,
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits1 = OpInfo[MI->getOpcode()];
  uint64_t Bits2 = OpInfo2[MI->getOpcode()];
  uint64_t Bits = (Bits2 << 32) | Bits1;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 13) & 15) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, ADDISdtprelHA, ADDISg...
    return;
    break;
  case 1:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // ADJCALLSTACKDOWN, ADJCALLSTACKUP
    printU16ImmOperand(MI, 0, O); 
    break;
  case 3:
    // B, BCLalways, BDNZ, BDNZ8, BDZ, BDZ8, EH_SjLj_Setup
    printBranchOperand(MI, 0, O); 
    return;
    break;
  case 4:
    // BCC, BCCTR, BCCTR8, BCCTRL, BCCTRL8, BCLR
    printPredicateOperand(MI, 0, O, "cc"); 
    break;
  case 5:
    // BLA, BLA8, BLA8_NOP, TAILBA, TAILBA8, TCRETURNai, TCRETURNai8
    printAbsAddrOperand(MI, 0, O); 
    break;
  case 6:
    // DCBA, DCBF, DCBI, DCBST, DCBT, DCBTST, DCBZ, DCBZL, ICBI
    printMemRegReg(MI, 0, O); 
    return;
    break;
  case 7:
    // DSS
    printU5ImmOperand(MI, 1, O); 
    return;
    break;
  case 8:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << ", "; 
    printU5ImmOperand(MI, 1, O); 
    return;
    break;
  case 9:
    // MTCRF, MTCRF8
    printcrbitm(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 10:
    // MTFSB0, MTFSB1
    printU5ImmOperand(MI, 0, O); 
    return;
    break;
  case 11:
    // MTVRSAVEv, STBU, STBU8, STBUX, STBUX8, STDU, STDUX, STFDU, STFDUX, STF...
    printOperand(MI, 1, O); 
    break;
  }


  // Fragment 1 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 17) & 15) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    O << ", "; 
    break;
  case 1:
    // ADJCALLSTACKDOWN, BL, BL8, BLA, BLA8, MFCR, MFCR8, MFCTR, MFCTR8, MFFS...
    return;
    break;
  case 2:
    // ADJCALLSTACKUP, ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, BCC, TCRETUR...
    O << ' '; 
    break;
  case 3:
    // BCCTR, BCCTR8
    O << "ctr "; 
    printPredicateOperand(MI, 0, O, "reg"); 
    return;
    break;
  case 4:
    // BCCTRL, BCCTRL8
    O << "ctrl "; 
    printPredicateOperand(MI, 0, O, "reg"); 
    return;
    break;
  case 5:
    // BCLR
    O << "lr "; 
    printPredicateOperand(MI, 0, O, "reg"); 
    return;
    break;
  case 6:
    // BL8_NOP, BLA8_NOP
    O << "\n\tnop"; 
    return;
    break;
  case 7:
    // BL8_NOP_TLSGD, BL8_NOP_TLSLD
    O << '('; 
    printOperand(MI, 1, O); 
    O << ")\n\tnop"; 
    return;
    break;
  case 8:
    // LDinto_toc
    O << ')'; 
    return;
    break;
  case 9:
    // MFTB8
    O << ", 268"; 
    return;
    break;
  case 10:
    // MFVRSAVE, MFVRSAVEv
    O << ", 256"; 
    return;
    break;
  case 11:
    // V_SETALLONES
    O << ", -1"; 
    return;
    break;
  }


  // Fragment 2 encoded into 4 bits for 16 unique commands.
  switch ((Bits >> 21) & 15) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // ADJCALLSTACKUP
    printU16ImmOperand(MI, 1, O); 
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, LBZX, LBZX8, LDARX, LDBRX, L...
    printMemRegReg(MI, 1, O); 
    break;
  case 3:
    // BCC
    printPredicateOperand(MI, 0, O, "reg"); 
    O << ", "; 
    printBranchOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // CRSET, CRUNSET, V_SET0
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 5:
    // LA
    printSymbolLo(MI, 2, O); 
    O << '('; 
    printOperand(MI, 1, O); 
    O << ')'; 
    return;
    break;
  case 6:
    // LBZ, LBZ8, LFD, LFS, LHA, LHA8, LHZ, LHZ8, LWZ, LWZ8, STB, STB8, STFD,...
    printMemRegImm(MI, 1, O); 
    return;
    break;
  case 7:
    // LBZU, LBZU8, LFDU, LFSU, LHAU, LHAU8, LHZU, LHZU8, LWZU, LWZU8, STBU, ...
    printMemRegImm(MI, 2, O); 
    return;
    break;
  case 8:
    // LBZUX, LBZUX8, LDUX, LFDUX, LFSUX, LHAUX, LHAUX8, LHZUX, LHZUX8, LWAUX...
    printMemRegReg(MI, 2, O); 
    return;
    break;
  case 9:
    // LD, LWA, STD
    printMemRegImmShifted(MI, 1, O); 
    return;
    break;
  case 10:
    // LDU, STDU
    printMemRegImmShifted(MI, 2, O); 
    return;
    break;
  case 11:
    // LI, LI8
    printSymbolLo(MI, 1, O); 
    return;
    break;
  case 12:
    // LIS, LIS8
    printSymbolHi(MI, 1, O); 
    return;
    break;
  case 13:
    // MFOCRF
    printcrbitm(MI, 1, O); 
    return;
    break;
  case 14:
    // RLDIMI, RLDIMIo, RLWIMI, RLWIMIo, VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB...
    printOperand(MI, 2, O); 
    O << ", "; 
    break;
  case 15:
    // VSPLTISB, VSPLTISH, VSPLTISW
    printS5ImmOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 25) & 7) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    O << ", "; 
    break;
  case 1:
    // ADDME, ADDME8, ADDME8o, ADDMEo, ADDZE, ADDZE8, ADDZE8o, ADDZEo, CNTLZD...
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32
    O << ' '; 
    printOperand(MI, 3, O); 
    O << ' '; 
    printOperand(MI, 4, O); 
    return;
    break;
  case 3:
    // RLDIMI, RLDIMIo
    printU6ImmOperand(MI, 3, O); 
    O << ", "; 
    printU6ImmOperand(MI, 4, O); 
    return;
    break;
  case 4:
    // RLWIMI, RLWIMIo
    printU5ImmOperand(MI, 3, O); 
    O << ", "; 
    printU5ImmOperand(MI, 4, O); 
    O << ", "; 
    printU5ImmOperand(MI, 5, O); 
    return;
    break;
  case 5:
    // VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB, VSPLTH, VSPLTW
    printU5ImmOperand(MI, 1, O); 
    return;
    break;
  case 6:
    // VCFSX_0, VCFUX_0, VCTSXS_0, VCTUXS_0
    O << ", 0"; 
    return;
    break;
  }


  // Fragment 4 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 28) & 7) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    printOperand(MI, 2, O); 
    break;
  case 1:
    // ADDI, ADDI8
    printSymbolLo(MI, 2, O); 
    return;
    break;
  case 2:
    // ADDIC, ADDIC8, ADDICo, CMPDI, CMPWI, MULLI, SUBFIC, SUBFIC8
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 3:
    // ADDIS, ADDIS8
    printSymbolHi(MI, 2, O); 
    return;
    break;
  case 4:
    // ANDISo, ANDISo8, ANDIo, ANDIo8, CMPLDI, CMPLWI, ORI, ORI8, ORIS, ORIS8...
    printU16ImmOperand(MI, 2, O); 
    return;
    break;
  case 5:
    // RLDICL, RLDICLo, RLDICR, RLDICRo, SLDI, SRADI, SRADIo, SRDI
    printU6ImmOperand(MI, 2, O); 
    break;
  case 6:
    // RLWINM, RLWINM8, RLWINM8o, RLWINMo, SLWI, SRAWI, SRAWIo, SRWI
    printU5ImmOperand(MI, 2, O); 
    break;
  }


  // Fragment 5 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 31) & 3) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, ADDE8, ADD...
    return;
    break;
  case 1:
    // ADD8TLS
    O << "@tls"; 
    return;
    break;
  case 2:
    // FMADD, FMADDS, FMADDSo, FMADDo, FMSUB, FMSUBS, FMSUBSo, FMSUBo, FNMADD...
    O << ", "; 
    break;
  }


  // Fragment 6 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 33) & 3) {
  default:   // unreachable.
  case 0:
    // FMADD, FMADDS, FMADDSo, FMADDo, FMSUB, FMSUBS, FMSUBSo, FMSUBo, FNMADD...
    printOperand(MI, 3, O); 
    return;
    break;
  case 1:
    // RLDCL, RLDCLo, RLDICL, RLDICLo, RLDICR, RLDICRo
    printU6ImmOperand(MI, 3, O); 
    return;
    break;
  case 2:
    // RLWINM, RLWINM8, RLWINM8o, RLWINMo, RLWNM, RLWNMo, VSLDOI
    printU5ImmOperand(MI, 3, O); 
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 35) & 1) {
    // VSLDOI
    return;
  } else {
    // RLWINM, RLWINM8, RLWINM8o, RLWINMo, RLWNM, RLWNMo
    O << ", "; 
    printU5ImmOperand(MI, 4, O); 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *PPCInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 180 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ '*', '*', 'R', 'O', 'U', 'N', 'D', 'I', 'N', 'G', 32, 'M', 'O', 'D', 'E', '*', '*', 0,
  /* 18 */ '*', '*', 'F', 'R', 'A', 'M', 'E', 32, 'P', 'O', 'I', 'N', 'T', 'E', 'R', '*', '*', 0,
  /* 36 */ 'f', '1', '0', 0,
  /* 40 */ 'r', '1', '0', 0,
  /* 44 */ 'v', '1', '0', 0,
  /* 48 */ 'f', '2', '0', 0,
  /* 52 */ 'r', '2', '0', 0,
  /* 56 */ 'v', '2', '0', 0,
  /* 60 */ 'f', '3', '0', 0,
  /* 64 */ 'r', '3', '0', 0,
  /* 68 */ 'v', '3', '0', 0,
  /* 72 */ 'f', '0', 0,
  /* 75 */ 'c', 'r', '0', 0,
  /* 79 */ 'v', '0', 0,
  /* 82 */ 'f', '1', '1', 0,
  /* 86 */ 'r', '1', '1', 0,
  /* 90 */ 'v', '1', '1', 0,
  /* 94 */ 'f', '2', '1', 0,
  /* 98 */ 'r', '2', '1', 0,
  /* 102 */ 'v', '2', '1', 0,
  /* 106 */ 'f', '3', '1', 0,
  /* 110 */ 'r', '3', '1', 0,
  /* 114 */ 'v', '3', '1', 0,
  /* 118 */ 'f', '1', 0,
  /* 121 */ 'c', 'r', '1', 0,
  /* 125 */ 'v', '1', 0,
  /* 128 */ 'f', '1', '2', 0,
  /* 132 */ 'r', '1', '2', 0,
  /* 136 */ 'v', '1', '2', 0,
  /* 140 */ 'f', '2', '2', 0,
  /* 144 */ 'r', '2', '2', 0,
  /* 148 */ 'v', '2', '2', 0,
  /* 152 */ 'f', '2', 0,
  /* 155 */ 'c', 'r', '2', 0,
  /* 159 */ 'v', '2', 0,
  /* 162 */ 'f', '1', '3', 0,
  /* 166 */ 'r', '1', '3', 0,
  /* 170 */ 'v', '1', '3', 0,
  /* 174 */ 'f', '2', '3', 0,
  /* 178 */ 'r', '2', '3', 0,
  /* 182 */ 'v', '2', '3', 0,
  /* 186 */ 'f', '3', 0,
  /* 189 */ 'c', 'r', '3', 0,
  /* 193 */ 'v', '3', 0,
  /* 196 */ 'f', '1', '4', 0,
  /* 200 */ 'r', '1', '4', 0,
  /* 204 */ 'v', '1', '4', 0,
  /* 208 */ 'f', '2', '4', 0,
  /* 212 */ 'r', '2', '4', 0,
  /* 216 */ 'v', '2', '4', 0,
  /* 220 */ 'f', '4', 0,
  /* 223 */ 'c', 'r', '4', 0,
  /* 227 */ 'v', '4', 0,
  /* 230 */ 'f', '1', '5', 0,
  /* 234 */ 'r', '1', '5', 0,
  /* 238 */ 'v', '1', '5', 0,
  /* 242 */ 'f', '2', '5', 0,
  /* 246 */ 'r', '2', '5', 0,
  /* 250 */ 'v', '2', '5', 0,
  /* 254 */ 'f', '5', 0,
  /* 257 */ 'c', 'r', '5', 0,
  /* 261 */ 'v', '5', 0,
  /* 264 */ 'f', '1', '6', 0,
  /* 268 */ 'r', '1', '6', 0,
  /* 272 */ 'v', '1', '6', 0,
  /* 276 */ 'f', '2', '6', 0,
  /* 280 */ 'r', '2', '6', 0,
  /* 284 */ 'v', '2', '6', 0,
  /* 288 */ 'f', '6', 0,
  /* 291 */ 'c', 'r', '6', 0,
  /* 295 */ 'v', '6', 0,
  /* 298 */ 'f', '1', '7', 0,
  /* 302 */ 'r', '1', '7', 0,
  /* 306 */ 'v', '1', '7', 0,
  /* 310 */ 'f', '2', '7', 0,
  /* 314 */ 'r', '2', '7', 0,
  /* 318 */ 'v', '2', '7', 0,
  /* 322 */ 'f', '7', 0,
  /* 325 */ 'c', 'r', '7', 0,
  /* 329 */ 'v', '7', 0,
  /* 332 */ 'f', '1', '8', 0,
  /* 336 */ 'r', '1', '8', 0,
  /* 340 */ 'v', '1', '8', 0,
  /* 344 */ 'f', '2', '8', 0,
  /* 348 */ 'r', '2', '8', 0,
  /* 352 */ 'v', '2', '8', 0,
  /* 356 */ 'f', '8', 0,
  /* 359 */ 'r', '8', 0,
  /* 362 */ 'v', '8', 0,
  /* 365 */ 'f', '1', '9', 0,
  /* 369 */ 'r', '1', '9', 0,
  /* 373 */ 'v', '1', '9', 0,
  /* 377 */ 'f', '2', '9', 0,
  /* 381 */ 'r', '2', '9', 0,
  /* 385 */ 'v', '2', '9', 0,
  /* 389 */ 'f', '9', 0,
  /* 392 */ 'r', '9', 0,
  /* 395 */ 'v', '9', 0,
  /* 398 */ 'c', 'a', 0,
  /* 401 */ 'V', 'R', 's', 'a', 'v', 'e', 0,
  /* 408 */ 'l', 'r', 0,
  /* 411 */ 'c', 't', 'r', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    398, 75, 130, 84, 38, 164, 121, 266, 232, 198, 300, 155, 37, 367, 
    334, 83, 189, 197, 163, 129, 231, 223, 333, 299, 265, 366, 257, 141, 
    95, 49, 175, 291, 277, 243, 209, 311, 325, 61, 378, 345, 107, 411, 
    411, 72, 118, 152, 186, 220, 254, 288, 322, 356, 389, 36, 82, 128, 
    162, 196, 230, 264, 298, 332, 365, 48, 94, 140, 174, 208, 242, 276, 
    310, 344, 377, 60, 106, 18, 18, 408, 408, 76, 122, 156, 190, 224, 
    258, 292, 326, 359, 392, 40, 86, 132, 166, 200, 234, 268, 302, 336, 
    369, 52, 98, 144, 178, 212, 246, 280, 314, 348, 381, 64, 110, 0, 
    79, 125, 159, 193, 227, 261, 295, 329, 362, 395, 44, 90, 136, 170, 
    204, 238, 272, 306, 340, 373, 56, 102, 148, 182, 216, 250, 284, 318, 
    352, 385, 68, 114, 401, 76, 122, 156, 190, 224, 258, 292, 326, 359, 
    392, 40, 86, 132, 166, 200, 234, 268, 302, 336, 369, 52, 98, 144, 
    178, 212, 246, 280, 314, 348, 381, 64, 110, 38, 38, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool PPCInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
