Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> toplevelgroup
Rule 1     toplevelgroup -> funcdecl toplevelgroup
Rule 2     toplevelgroup -> funcdef toplevelgroup
Rule 3     toplevelgroup -> globalvardecl toplevelgroup
Rule 4     toplevelgroup -> empty
Rule 5     funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON
Rule 6     funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE
Rule 7     type -> INT
Rule 8     type -> FLOAT
Rule 9     type -> STRING
Rule 10    type -> VOID
Rule 11    type -> IDENTIFIER
Rule 12    argdecllist -> empty
Rule 13    argdecllist -> argdecl
Rule 14    argdecllist -> argdecl COMMA argdecllist
Rule 15    argdecl -> type IDENTIFIER
Rule 16    empty -> <empty>
Rule 17    arglist -> empty
Rule 18    arglist -> expression
Rule 19    arglist -> expression COMMA arglist
Rule 20    globalvardecl -> type IDENTIFIER SEMICOLON
Rule 21    statementlist -> empty
Rule 22    statementlist -> statement statementlist
Rule 23    statement -> expression SEMICOLON
Rule 24    statement -> ifelse
Rule 25    statement -> RETURN expression SEMICOLON
Rule 26    statement -> LOOP LBRACE statementlist RBRACE
Rule 27    statement -> BREAK SEMICOLON
Rule 28    statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
Rule 29    statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 30    expression -> LPAREN expression RPAREN
Rule 31    expression -> IDENTIFIER LPAREN arglist RPAREN
Rule 32    expression -> expression ISEQUAL expression
Rule 33    expression -> expression NOTEQUAL expression
Rule 34    expression -> expression LESSTHAN expression
Rule 35    expression -> expression GREATERTHAN expression
Rule 36    expression -> expression LESSEQUAL expression
Rule 37    expression -> expression GREATEREQUAL expression
Rule 38    expression -> expression LOGICAND expression
Rule 39    expression -> expression LOGICOR expression
Rule 40    expression -> expression PLUS expression
Rule 41    expression -> expression MINUS expression
Rule 42    expression -> expression TIMES expression
Rule 43    expression -> expression DIVIDE expression
Rule 44    expression -> IDENTIFIER
Rule 45    expression -> MINUS expression
Rule 46    expression -> NUMBER
Rule 47    elifgroup -> empty
Rule 48    elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup
Rule 49    optelse -> empty
Rule 50    optelse -> ELSE LBRACE statementlist RBRACE
Rule 51    ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

Terminals, with rules where they appear

ASSIGN               : 29
BREAK                : 27
COMMA                : 14 19
DIVIDE               : 43
ELIF                 : 48
ELSE                 : 50
FLOAT                : 8
GREATEREQUAL         : 37
GREATERTHAN          : 35
IDENTIFIER           : 5 6 11 15 20 29 31 44
IF                   : 51
INT                  : 7
ISEQUAL              : 32
LBRACE               : 6 26 28 48 50 51
LESSEQUAL            : 36
LESSTHAN             : 34
LOGICAND             : 38
LOGICOR              : 39
LOOP                 : 26
LPAREN               : 5 6 28 30 31 48 51
MINUS                : 41 45
NOTEQUAL             : 33
NUMBER               : 46
PLUS                 : 40
RBRACE               : 6 26 28 48 50 51
RETURN               : 25
RPAREN               : 5 6 28 30 31 48 51
SEMICOLON            : 5 20 23 25 27 29
STRING               : 9
TIMES                : 42
VOID                 : 10
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

argdecl              : 13 14
argdecllist          : 5 6 14
arglist              : 19 31
elifgroup            : 48 51
empty                : 4 12 17 21 47 49
expression           : 18 19 23 25 28 29 30 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 45 48 51
funcdecl             : 1
funcdef              : 2
globalvardecl        : 3
ifelse               : 24
optelse              : 51
statement            : 22
statementlist        : 6 22 26 28 48 50 51
toplevelgroup        : 1 2 3 0
type                 : 5 6 15 20

Parsing method: LALR

state 0

    (0) S' -> . toplevelgroup
    (1) toplevelgroup -> . funcdecl toplevelgroup
    (2) toplevelgroup -> . funcdef toplevelgroup
    (3) toplevelgroup -> . globalvardecl toplevelgroup
    (4) toplevelgroup -> . empty
    (5) funcdecl -> . type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON
    (6) funcdef -> . type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE
    (20) globalvardecl -> . type IDENTIFIER SEMICOLON
    (16) empty -> .
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . VOID
    (11) type -> . IDENTIFIER

    $end            reduce using rule 16 (empty -> .)
    INT             shift and go to state 1
    FLOAT           shift and go to state 4
    STRING          shift and go to state 11
    VOID            shift and go to state 5
    IDENTIFIER      shift and go to state 7

    funcdecl                       shift and go to state 2
    toplevelgroup                  shift and go to state 3
    funcdef                        shift and go to state 6
    type                           shift and go to state 8
    globalvardecl                  shift and go to state 9
    empty                          shift and go to state 10

state 1

    (7) type -> INT .

    IDENTIFIER      reduce using rule 7 (type -> INT .)


state 2

    (1) toplevelgroup -> funcdecl . toplevelgroup
    (1) toplevelgroup -> . funcdecl toplevelgroup
    (2) toplevelgroup -> . funcdef toplevelgroup
    (3) toplevelgroup -> . globalvardecl toplevelgroup
    (4) toplevelgroup -> . empty
    (5) funcdecl -> . type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON
    (6) funcdef -> . type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE
    (20) globalvardecl -> . type IDENTIFIER SEMICOLON
    (16) empty -> .
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . VOID
    (11) type -> . IDENTIFIER

    $end            reduce using rule 16 (empty -> .)
    INT             shift and go to state 1
    FLOAT           shift and go to state 4
    STRING          shift and go to state 11
    VOID            shift and go to state 5
    IDENTIFIER      shift and go to state 7

    funcdecl                       shift and go to state 2
    toplevelgroup                  shift and go to state 12
    funcdef                        shift and go to state 6
    type                           shift and go to state 8
    globalvardecl                  shift and go to state 9
    empty                          shift and go to state 10

state 3

    (0) S' -> toplevelgroup .



state 4

    (8) type -> FLOAT .

    IDENTIFIER      reduce using rule 8 (type -> FLOAT .)


state 5

    (10) type -> VOID .

    IDENTIFIER      reduce using rule 10 (type -> VOID .)


state 6

    (2) toplevelgroup -> funcdef . toplevelgroup
    (1) toplevelgroup -> . funcdecl toplevelgroup
    (2) toplevelgroup -> . funcdef toplevelgroup
    (3) toplevelgroup -> . globalvardecl toplevelgroup
    (4) toplevelgroup -> . empty
    (5) funcdecl -> . type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON
    (6) funcdef -> . type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE
    (20) globalvardecl -> . type IDENTIFIER SEMICOLON
    (16) empty -> .
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . VOID
    (11) type -> . IDENTIFIER

    $end            reduce using rule 16 (empty -> .)
    INT             shift and go to state 1
    FLOAT           shift and go to state 4
    STRING          shift and go to state 11
    VOID            shift and go to state 5
    IDENTIFIER      shift and go to state 7

    funcdecl                       shift and go to state 2
    toplevelgroup                  shift and go to state 13
    funcdef                        shift and go to state 6
    type                           shift and go to state 8
    globalvardecl                  shift and go to state 9
    empty                          shift and go to state 10

state 7

    (11) type -> IDENTIFIER .

    IDENTIFIER      reduce using rule 11 (type -> IDENTIFIER .)


state 8

    (5) funcdecl -> type . IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON
    (6) funcdef -> type . IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE
    (20) globalvardecl -> type . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 14


state 9

    (3) toplevelgroup -> globalvardecl . toplevelgroup
    (1) toplevelgroup -> . funcdecl toplevelgroup
    (2) toplevelgroup -> . funcdef toplevelgroup
    (3) toplevelgroup -> . globalvardecl toplevelgroup
    (4) toplevelgroup -> . empty
    (5) funcdecl -> . type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON
    (6) funcdef -> . type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE
    (20) globalvardecl -> . type IDENTIFIER SEMICOLON
    (16) empty -> .
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . VOID
    (11) type -> . IDENTIFIER

    $end            reduce using rule 16 (empty -> .)
    INT             shift and go to state 1
    FLOAT           shift and go to state 4
    STRING          shift and go to state 11
    VOID            shift and go to state 5
    IDENTIFIER      shift and go to state 7

    funcdecl                       shift and go to state 2
    toplevelgroup                  shift and go to state 15
    funcdef                        shift and go to state 6
    type                           shift and go to state 8
    globalvardecl                  shift and go to state 9
    empty                          shift and go to state 10

state 10

    (4) toplevelgroup -> empty .

    $end            reduce using rule 4 (toplevelgroup -> empty .)


state 11

    (9) type -> STRING .

    IDENTIFIER      reduce using rule 9 (type -> STRING .)


state 12

    (1) toplevelgroup -> funcdecl toplevelgroup .

    $end            reduce using rule 1 (toplevelgroup -> funcdecl toplevelgroup .)


state 13

    (2) toplevelgroup -> funcdef toplevelgroup .

    $end            reduce using rule 2 (toplevelgroup -> funcdef toplevelgroup .)


state 14

    (5) funcdecl -> type IDENTIFIER . LPAREN argdecllist RPAREN SEMICOLON
    (6) funcdef -> type IDENTIFIER . LPAREN argdecllist RPAREN LBRACE statementlist RBRACE
    (20) globalvardecl -> type IDENTIFIER . SEMICOLON

    LPAREN          shift and go to state 17
    SEMICOLON       shift and go to state 16


state 15

    (3) toplevelgroup -> globalvardecl toplevelgroup .

    $end            reduce using rule 3 (toplevelgroup -> globalvardecl toplevelgroup .)


state 16

    (20) globalvardecl -> type IDENTIFIER SEMICOLON .

    INT             reduce using rule 20 (globalvardecl -> type IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 20 (globalvardecl -> type IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 20 (globalvardecl -> type IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 20 (globalvardecl -> type IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (globalvardecl -> type IDENTIFIER SEMICOLON .)
    $end            reduce using rule 20 (globalvardecl -> type IDENTIFIER SEMICOLON .)


state 17

    (5) funcdecl -> type IDENTIFIER LPAREN . argdecllist RPAREN SEMICOLON
    (6) funcdef -> type IDENTIFIER LPAREN . argdecllist RPAREN LBRACE statementlist RBRACE
    (12) argdecllist -> . empty
    (13) argdecllist -> . argdecl
    (14) argdecllist -> . argdecl COMMA argdecllist
    (16) empty -> .
    (15) argdecl -> . type IDENTIFIER
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . VOID
    (11) type -> . IDENTIFIER

    RPAREN          reduce using rule 16 (empty -> .)
    INT             shift and go to state 1
    FLOAT           shift and go to state 4
    STRING          shift and go to state 11
    VOID            shift and go to state 5
    IDENTIFIER      shift and go to state 7

    argdecllist                    shift and go to state 18
    type                           shift and go to state 20
    empty                          shift and go to state 21
    argdecl                        shift and go to state 19

state 18

    (5) funcdecl -> type IDENTIFIER LPAREN argdecllist . RPAREN SEMICOLON
    (6) funcdef -> type IDENTIFIER LPAREN argdecllist . RPAREN LBRACE statementlist RBRACE

    RPAREN          shift and go to state 22


state 19

    (13) argdecllist -> argdecl .
    (14) argdecllist -> argdecl . COMMA argdecllist

    RPAREN          reduce using rule 13 (argdecllist -> argdecl .)
    COMMA           shift and go to state 23


state 20

    (15) argdecl -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 24


state 21

    (12) argdecllist -> empty .

    RPAREN          reduce using rule 12 (argdecllist -> empty .)


state 22

    (5) funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN . SEMICOLON
    (6) funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN . LBRACE statementlist RBRACE

    SEMICOLON       shift and go to state 25
    LBRACE          shift and go to state 26


state 23

    (14) argdecllist -> argdecl COMMA . argdecllist
    (12) argdecllist -> . empty
    (13) argdecllist -> . argdecl
    (14) argdecllist -> . argdecl COMMA argdecllist
    (16) empty -> .
    (15) argdecl -> . type IDENTIFIER
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . VOID
    (11) type -> . IDENTIFIER

    RPAREN          reduce using rule 16 (empty -> .)
    INT             shift and go to state 1
    FLOAT           shift and go to state 4
    STRING          shift and go to state 11
    VOID            shift and go to state 5
    IDENTIFIER      shift and go to state 7

    argdecllist                    shift and go to state 27
    type                           shift and go to state 20
    empty                          shift and go to state 21
    argdecl                        shift and go to state 19

state 24

    (15) argdecl -> type IDENTIFIER .

    COMMA           reduce using rule 15 (argdecl -> type IDENTIFIER .)
    RPAREN          reduce using rule 15 (argdecl -> type IDENTIFIER .)


state 25

    (5) funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON .

    INT             reduce using rule 5 (funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON .)
    FLOAT           reduce using rule 5 (funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON .)
    STRING          reduce using rule 5 (funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON .)
    VOID            reduce using rule 5 (funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 5 (funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON .)
    $end            reduce using rule 5 (funcdecl -> type IDENTIFIER LPAREN argdecllist RPAREN SEMICOLON .)


state 26

    (6) funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE . statementlist RBRACE
    (21) statementlist -> . empty
    (22) statementlist -> . statement statementlist
    (16) empty -> .
    (23) statement -> . expression SEMICOLON
    (24) statement -> . ifelse
    (25) statement -> . RETURN expression SEMICOLON
    (26) statement -> . LOOP LBRACE statementlist RBRACE
    (27) statement -> . BREAK SEMICOLON
    (28) statement -> . WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
    (29) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER
    (51) ifelse -> . IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    RBRACE          reduce using rule 16 (empty -> .)
    RETURN          shift and go to state 28
    LOOP            shift and go to state 41
    BREAK           shift and go to state 39
    WHILE           shift and go to state 38
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 36
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29
    IF              shift and go to state 37

    expression                     shift and go to state 40
    statementlist                  shift and go to state 30
    ifelse                         shift and go to state 32
    statement                      shift and go to state 33
    empty                          shift and go to state 35

state 27

    (14) argdecllist -> argdecl COMMA argdecllist .

    RPAREN          reduce using rule 14 (argdecllist -> argdecl COMMA argdecllist .)


state 28

    (25) statement -> RETURN . expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 43

state 29

    (46) expression -> NUMBER .

    ISEQUAL         reduce using rule 46 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 46 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 46 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 46 (expression -> NUMBER .)
    LESSEQUAL       reduce using rule 46 (expression -> NUMBER .)
    GREATEREQUAL    reduce using rule 46 (expression -> NUMBER .)
    LOGICAND        reduce using rule 46 (expression -> NUMBER .)
    LOGICOR         reduce using rule 46 (expression -> NUMBER .)
    PLUS            reduce using rule 46 (expression -> NUMBER .)
    MINUS           reduce using rule 46 (expression -> NUMBER .)
    TIMES           reduce using rule 46 (expression -> NUMBER .)
    DIVIDE          reduce using rule 46 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 46 (expression -> NUMBER .)
    RPAREN          reduce using rule 46 (expression -> NUMBER .)
    COMMA           reduce using rule 46 (expression -> NUMBER .)


state 30

    (6) funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist . RBRACE

    RBRACE          shift and go to state 44


state 31

    (45) expression -> MINUS . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 45

state 32

    (24) statement -> ifelse .

    RETURN          reduce using rule 24 (statement -> ifelse .)
    LOOP            reduce using rule 24 (statement -> ifelse .)
    BREAK           reduce using rule 24 (statement -> ifelse .)
    WHILE           reduce using rule 24 (statement -> ifelse .)
    IDENTIFIER      reduce using rule 24 (statement -> ifelse .)
    LPAREN          reduce using rule 24 (statement -> ifelse .)
    MINUS           reduce using rule 24 (statement -> ifelse .)
    NUMBER          reduce using rule 24 (statement -> ifelse .)
    IF              reduce using rule 24 (statement -> ifelse .)
    RBRACE          reduce using rule 24 (statement -> ifelse .)


state 33

    (22) statementlist -> statement . statementlist
    (21) statementlist -> . empty
    (22) statementlist -> . statement statementlist
    (16) empty -> .
    (23) statement -> . expression SEMICOLON
    (24) statement -> . ifelse
    (25) statement -> . RETURN expression SEMICOLON
    (26) statement -> . LOOP LBRACE statementlist RBRACE
    (27) statement -> . BREAK SEMICOLON
    (28) statement -> . WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
    (29) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER
    (51) ifelse -> . IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    RBRACE          reduce using rule 16 (empty -> .)
    RETURN          shift and go to state 28
    LOOP            shift and go to state 41
    BREAK           shift and go to state 39
    WHILE           shift and go to state 38
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 36
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29
    IF              shift and go to state 37

    statementlist                  shift and go to state 46
    ifelse                         shift and go to state 32
    statement                      shift and go to state 33
    expression                     shift and go to state 40
    empty                          shift and go to state 35

state 34

    (29) statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (31) expression -> IDENTIFIER . LPAREN arglist RPAREN
    (44) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 48
    LPAREN          shift and go to state 47
    SEMICOLON       reduce using rule 44 (expression -> IDENTIFIER .)
    ISEQUAL         reduce using rule 44 (expression -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 44 (expression -> IDENTIFIER .)
    LESSTHAN        reduce using rule 44 (expression -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 44 (expression -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 44 (expression -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 44 (expression -> IDENTIFIER .)
    LOGICAND        reduce using rule 44 (expression -> IDENTIFIER .)
    LOGICOR         reduce using rule 44 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 44 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 44 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 44 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 44 (expression -> IDENTIFIER .)


state 35

    (21) statementlist -> empty .

    RBRACE          reduce using rule 21 (statementlist -> empty .)


state 36

    (30) expression -> LPAREN . expression RPAREN
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 49

state 37

    (51) ifelse -> IF . LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    LPAREN          shift and go to state 50


state 38

    (28) statement -> WHILE . LPAREN expression RPAREN LBRACE statementlist RBRACE

    LPAREN          shift and go to state 51


state 39

    (27) statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 52


state 40

    (23) statement -> expression . SEMICOLON
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 56
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 41

    (26) statement -> LOOP . LBRACE statementlist RBRACE

    LBRACE          shift and go to state 66


state 42

    (31) expression -> IDENTIFIER . LPAREN arglist RPAREN
    (44) expression -> IDENTIFIER .

    LPAREN          shift and go to state 47
    ISEQUAL         reduce using rule 44 (expression -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 44 (expression -> IDENTIFIER .)
    LESSTHAN        reduce using rule 44 (expression -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 44 (expression -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 44 (expression -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 44 (expression -> IDENTIFIER .)
    LOGICAND        reduce using rule 44 (expression -> IDENTIFIER .)
    LOGICOR         reduce using rule 44 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 44 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 44 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 44 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 44 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 44 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 44 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 44 (expression -> IDENTIFIER .)


state 43

    (25) statement -> RETURN expression . SEMICOLON
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 67
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 44

    (6) funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE .

    INT             reduce using rule 6 (funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE .)
    FLOAT           reduce using rule 6 (funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE .)
    STRING          reduce using rule 6 (funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE .)
    VOID            reduce using rule 6 (funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE .)
    IDENTIFIER      reduce using rule 6 (funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE .)
    $end            reduce using rule 6 (funcdef -> type IDENTIFIER LPAREN argdecllist RPAREN LBRACE statementlist RBRACE .)


state 45

    (45) expression -> MINUS expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 45 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 45 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 45 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 45 (expression -> MINUS expression .)
    LESSEQUAL       reduce using rule 45 (expression -> MINUS expression .)
    GREATEREQUAL    reduce using rule 45 (expression -> MINUS expression .)
    LOGICAND        reduce using rule 45 (expression -> MINUS expression .)
    LOGICOR         reduce using rule 45 (expression -> MINUS expression .)
    PLUS            reduce using rule 45 (expression -> MINUS expression .)
    MINUS           reduce using rule 45 (expression -> MINUS expression .)
    TIMES           reduce using rule 45 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 45 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 45 (expression -> MINUS expression .)
    RPAREN          reduce using rule 45 (expression -> MINUS expression .)
    COMMA           reduce using rule 45 (expression -> MINUS expression .)

  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 55 ]


state 46

    (22) statementlist -> statement statementlist .

    RBRACE          reduce using rule 22 (statementlist -> statement statementlist .)


state 47

    (31) expression -> IDENTIFIER LPAREN . arglist RPAREN
    (17) arglist -> . empty
    (18) arglist -> . expression
    (19) arglist -> . expression COMMA arglist
    (16) empty -> .
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    RPAREN          reduce using rule 16 (empty -> .)
    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    arglist                        shift and go to state 68
    expression                     shift and go to state 69
    empty                          shift and go to state 70

state 48

    (29) statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 71

state 49

    (30) expression -> LPAREN expression . RPAREN
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 72
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 50

    (51) ifelse -> IF LPAREN . expression RPAREN LBRACE statementlist RBRACE elifgroup optelse
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 73

state 51

    (28) statement -> WHILE LPAREN . expression RPAREN LBRACE statementlist RBRACE
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 74

state 52

    (27) statement -> BREAK SEMICOLON .

    RETURN          reduce using rule 27 (statement -> BREAK SEMICOLON .)
    LOOP            reduce using rule 27 (statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 27 (statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (statement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 27 (statement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 27 (statement -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 27 (statement -> BREAK SEMICOLON .)
    IF              reduce using rule 27 (statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 27 (statement -> BREAK SEMICOLON .)


state 53

    (33) expression -> expression NOTEQUAL . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 75

state 54

    (37) expression -> expression GREATEREQUAL . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 76

state 55

    (43) expression -> expression DIVIDE . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 77

state 56

    (23) statement -> expression SEMICOLON .

    RETURN          reduce using rule 23 (statement -> expression SEMICOLON .)
    LOOP            reduce using rule 23 (statement -> expression SEMICOLON .)
    BREAK           reduce using rule 23 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 23 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 23 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 23 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 23 (statement -> expression SEMICOLON .)
    IF              reduce using rule 23 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 23 (statement -> expression SEMICOLON .)


state 57

    (38) expression -> expression LOGICAND . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 78

state 58

    (42) expression -> expression TIMES . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 79

state 59

    (34) expression -> expression LESSTHAN . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 80

state 60

    (35) expression -> expression GREATERTHAN . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 81

state 61

    (32) expression -> expression ISEQUAL . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 82

state 62

    (36) expression -> expression LESSEQUAL . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 83

state 63

    (40) expression -> expression PLUS . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 84

state 64

    (41) expression -> expression MINUS . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 85

state 65

    (39) expression -> expression LOGICOR . expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 86

state 66

    (26) statement -> LOOP LBRACE . statementlist RBRACE
    (21) statementlist -> . empty
    (22) statementlist -> . statement statementlist
    (16) empty -> .
    (23) statement -> . expression SEMICOLON
    (24) statement -> . ifelse
    (25) statement -> . RETURN expression SEMICOLON
    (26) statement -> . LOOP LBRACE statementlist RBRACE
    (27) statement -> . BREAK SEMICOLON
    (28) statement -> . WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
    (29) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER
    (51) ifelse -> . IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    RBRACE          reduce using rule 16 (empty -> .)
    RETURN          shift and go to state 28
    LOOP            shift and go to state 41
    BREAK           shift and go to state 39
    WHILE           shift and go to state 38
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 36
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29
    IF              shift and go to state 37

    statementlist                  shift and go to state 87
    ifelse                         shift and go to state 32
    statement                      shift and go to state 33
    expression                     shift and go to state 40
    empty                          shift and go to state 35

state 67

    (25) statement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    LOOP            reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 25 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 25 (statement -> RETURN expression SEMICOLON .)


state 68

    (31) expression -> IDENTIFIER LPAREN arglist . RPAREN

    RPAREN          shift and go to state 88


state 69

    (18) arglist -> expression .
    (19) arglist -> expression . COMMA arglist
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 18 (arglist -> expression .)
    COMMA           shift and go to state 89
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 70

    (17) arglist -> empty .

    RPAREN          reduce using rule 17 (arglist -> empty .)


state 71

    (29) statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 90
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 72

    (30) expression -> LPAREN expression RPAREN .

    ISEQUAL         reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LOGICAND        reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LOGICOR         reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (expression -> LPAREN expression RPAREN .)


state 73

    (51) ifelse -> IF LPAREN expression . RPAREN LBRACE statementlist RBRACE elifgroup optelse
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 91
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 74

    (28) statement -> WHILE LPAREN expression . RPAREN LBRACE statementlist RBRACE
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 92
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 75

    (33) expression -> expression NOTEQUAL expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    LESSTHAN        reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    GREATERTHAN     reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    LESSEQUAL       reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    GREATEREQUAL    reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    LOGICAND        reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    LOGICOR         reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]


state 76

    (37) expression -> expression GREATEREQUAL expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    NOTEQUAL        reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    LESSTHAN        reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    GREATERTHAN     reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    LESSEQUAL       reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    LOGICAND        reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    LOGICOR         reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    RPAREN          reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    COMMA           reduce using rule 37 (expression -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 37 (expression -> expression GREATEREQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression GREATEREQUAL expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression GREATEREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression GREATEREQUAL expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]


state 77

    (43) expression -> expression DIVIDE expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 43 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 43 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 43 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 43 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 43 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 43 (expression -> expression DIVIDE expression .)
    LOGICAND        reduce using rule 43 (expression -> expression DIVIDE expression .)
    LOGICOR         reduce using rule 43 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 43 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 43 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 43 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 43 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 43 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 43 (expression -> expression DIVIDE expression .)

  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 55 ]


state 78

    (38) expression -> expression LOGICAND expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 38 (expression -> expression LOGICAND expression .)
    RPAREN          reduce using rule 38 (expression -> expression LOGICAND expression .)
    COMMA           reduce using rule 38 (expression -> expression LOGICAND expression .)
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! ISEQUAL         [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! NOTEQUAL        [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! LESSTHAN        [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! GREATERTHAN     [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! LESSEQUAL       [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! GREATEREQUAL    [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! LOGICAND        [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! LOGICOR         [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression LOGICAND expression .) ]


state 79

    (42) expression -> expression TIMES expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 42 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 42 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 42 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 42 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 42 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 42 (expression -> expression TIMES expression .)
    LOGICAND        reduce using rule 42 (expression -> expression TIMES expression .)
    LOGICOR         reduce using rule 42 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 42 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 42 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 42 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 42 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 42 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 42 (expression -> expression TIMES expression .)

  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 55 ]


state 80

    (34) expression -> expression LESSTHAN expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 34 (expression -> expression LESSTHAN expression .)
    NOTEQUAL        reduce using rule 34 (expression -> expression LESSTHAN expression .)
    LESSTHAN        reduce using rule 34 (expression -> expression LESSTHAN expression .)
    GREATERTHAN     reduce using rule 34 (expression -> expression LESSTHAN expression .)
    LESSEQUAL       reduce using rule 34 (expression -> expression LESSTHAN expression .)
    GREATEREQUAL    reduce using rule 34 (expression -> expression LESSTHAN expression .)
    LOGICAND        reduce using rule 34 (expression -> expression LESSTHAN expression .)
    LOGICOR         reduce using rule 34 (expression -> expression LESSTHAN expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 34 (expression -> expression LESSTHAN expression .)
    COMMA           reduce using rule 34 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 34 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression LESSTHAN expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression LESSTHAN expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]


state 81

    (35) expression -> expression GREATERTHAN expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    LESSTHAN        reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    GREATERTHAN     reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    LESSEQUAL       reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    GREATEREQUAL    reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    LOGICAND        reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    LOGICOR         reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    COMMA           reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]


state 82

    (32) expression -> expression ISEQUAL expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 32 (expression -> expression ISEQUAL expression .)
    NOTEQUAL        reduce using rule 32 (expression -> expression ISEQUAL expression .)
    LESSTHAN        reduce using rule 32 (expression -> expression ISEQUAL expression .)
    GREATERTHAN     reduce using rule 32 (expression -> expression ISEQUAL expression .)
    LESSEQUAL       reduce using rule 32 (expression -> expression ISEQUAL expression .)
    GREATEREQUAL    reduce using rule 32 (expression -> expression ISEQUAL expression .)
    LOGICAND        reduce using rule 32 (expression -> expression ISEQUAL expression .)
    LOGICOR         reduce using rule 32 (expression -> expression ISEQUAL expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 32 (expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 32 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]


state 83

    (36) expression -> expression LESSEQUAL expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    LESSTHAN        reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    GREATERTHAN     reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    LESSEQUAL       reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    GREATEREQUAL    reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    LOGICAND        reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    LOGICOR         reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    RPAREN          reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    COMMA           reduce using rule 36 (expression -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 36 (expression -> expression LESSEQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression LESSEQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression LESSEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression LESSEQUAL expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]


state 84

    (40) expression -> expression PLUS expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 40 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 40 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 40 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 40 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 40 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 40 (expression -> expression PLUS expression .)
    LOGICAND        reduce using rule 40 (expression -> expression PLUS expression .)
    LOGICOR         reduce using rule 40 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 40 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 40 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 40 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]


state 85

    (41) expression -> expression MINUS expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    ISEQUAL         reduce using rule 41 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 41 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 41 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 41 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 41 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 41 (expression -> expression MINUS expression .)
    LOGICAND        reduce using rule 41 (expression -> expression MINUS expression .)
    LOGICOR         reduce using rule 41 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 41 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 41 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 41 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! ISEQUAL         [ shift and go to state 61 ]
  ! NOTEQUAL        [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! LESSEQUAL       [ shift and go to state 62 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]
  ! LOGICAND        [ shift and go to state 57 ]
  ! LOGICOR         [ shift and go to state 65 ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]


state 86

    (39) expression -> expression LOGICOR expression .
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 39 (expression -> expression LOGICOR expression .)
    RPAREN          reduce using rule 39 (expression -> expression LOGICOR expression .)
    COMMA           reduce using rule 39 (expression -> expression LOGICOR expression .)
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55

  ! ISEQUAL         [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! NOTEQUAL        [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! LESSTHAN        [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! GREATERTHAN     [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! LESSEQUAL       [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! GREATEREQUAL    [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! LOGICAND        [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! LOGICOR         [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression LOGICOR expression .) ]


state 87

    (26) statement -> LOOP LBRACE statementlist . RBRACE

    RBRACE          shift and go to state 93


state 88

    (31) expression -> IDENTIFIER LPAREN arglist RPAREN .

    ISEQUAL         reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    NOTEQUAL        reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    LESSTHAN        reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    GREATERTHAN     reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    LESSEQUAL       reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    GREATEREQUAL    reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    LOGICAND        reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    LOGICOR         reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    PLUS            reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    MINUS           reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    TIMES           reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    SEMICOLON       reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)
    COMMA           reduce using rule 31 (expression -> IDENTIFIER LPAREN arglist RPAREN .)


state 89

    (19) arglist -> expression COMMA . arglist
    (17) arglist -> . empty
    (18) arglist -> . expression
    (19) arglist -> . expression COMMA arglist
    (16) empty -> .
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    RPAREN          reduce using rule 16 (empty -> .)
    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    arglist                        shift and go to state 94
    expression                     shift and go to state 69
    empty                          shift and go to state 70

state 90

    (29) statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    RETURN          reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    LOOP            reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 29 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 91

    (51) ifelse -> IF LPAREN expression RPAREN . LBRACE statementlist RBRACE elifgroup optelse

    LBRACE          shift and go to state 95


state 92

    (28) statement -> WHILE LPAREN expression RPAREN . LBRACE statementlist RBRACE

    LBRACE          shift and go to state 96


state 93

    (26) statement -> LOOP LBRACE statementlist RBRACE .

    RETURN          reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    LOOP            reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    BREAK           reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    WHILE           reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    IDENTIFIER      reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    LPAREN          reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    MINUS           reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    NUMBER          reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    IF              reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)
    RBRACE          reduce using rule 26 (statement -> LOOP LBRACE statementlist RBRACE .)


state 94

    (19) arglist -> expression COMMA arglist .

    RPAREN          reduce using rule 19 (arglist -> expression COMMA arglist .)


state 95

    (51) ifelse -> IF LPAREN expression RPAREN LBRACE . statementlist RBRACE elifgroup optelse
    (21) statementlist -> . empty
    (22) statementlist -> . statement statementlist
    (16) empty -> .
    (23) statement -> . expression SEMICOLON
    (24) statement -> . ifelse
    (25) statement -> . RETURN expression SEMICOLON
    (26) statement -> . LOOP LBRACE statementlist RBRACE
    (27) statement -> . BREAK SEMICOLON
    (28) statement -> . WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
    (29) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER
    (51) ifelse -> . IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    RBRACE          reduce using rule 16 (empty -> .)
    RETURN          shift and go to state 28
    LOOP            shift and go to state 41
    BREAK           shift and go to state 39
    WHILE           shift and go to state 38
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 36
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29
    IF              shift and go to state 37

    statementlist                  shift and go to state 97
    ifelse                         shift and go to state 32
    statement                      shift and go to state 33
    expression                     shift and go to state 40
    empty                          shift and go to state 35

state 96

    (28) statement -> WHILE LPAREN expression RPAREN LBRACE . statementlist RBRACE
    (21) statementlist -> . empty
    (22) statementlist -> . statement statementlist
    (16) empty -> .
    (23) statement -> . expression SEMICOLON
    (24) statement -> . ifelse
    (25) statement -> . RETURN expression SEMICOLON
    (26) statement -> . LOOP LBRACE statementlist RBRACE
    (27) statement -> . BREAK SEMICOLON
    (28) statement -> . WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
    (29) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER
    (51) ifelse -> . IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    RBRACE          reduce using rule 16 (empty -> .)
    RETURN          shift and go to state 28
    LOOP            shift and go to state 41
    BREAK           shift and go to state 39
    WHILE           shift and go to state 38
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 36
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29
    IF              shift and go to state 37

    statementlist                  shift and go to state 98
    ifelse                         shift and go to state 32
    statement                      shift and go to state 33
    expression                     shift and go to state 40
    empty                          shift and go to state 35

state 97

    (51) ifelse -> IF LPAREN expression RPAREN LBRACE statementlist . RBRACE elifgroup optelse

    RBRACE          shift and go to state 99


state 98

    (28) statement -> WHILE LPAREN expression RPAREN LBRACE statementlist . RBRACE

    RBRACE          shift and go to state 100


state 99

    (51) ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE . elifgroup optelse
    (47) elifgroup -> . empty
    (48) elifgroup -> . ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup
    (16) empty -> .

    ELIF            shift and go to state 101
    ELSE            reduce using rule 16 (empty -> .)
    RETURN          reduce using rule 16 (empty -> .)
    LOOP            reduce using rule 16 (empty -> .)
    BREAK           reduce using rule 16 (empty -> .)
    WHILE           reduce using rule 16 (empty -> .)
    IDENTIFIER      reduce using rule 16 (empty -> .)
    LPAREN          reduce using rule 16 (empty -> .)
    MINUS           reduce using rule 16 (empty -> .)
    NUMBER          reduce using rule 16 (empty -> .)
    IF              reduce using rule 16 (empty -> .)
    RBRACE          reduce using rule 16 (empty -> .)

    empty                          shift and go to state 102
    elifgroup                      shift and go to state 103

state 100

    (28) statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .

    RETURN          reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    LOOP            reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    BREAK           reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    WHILE           reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    IDENTIFIER      reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    LPAREN          reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    MINUS           reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    NUMBER          reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    IF              reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)
    RBRACE          reduce using rule 28 (statement -> WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE .)


state 101

    (48) elifgroup -> ELIF . LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup

    LPAREN          shift and go to state 104


state 102

    (47) elifgroup -> empty .

    ELSE            reduce using rule 47 (elifgroup -> empty .)
    RETURN          reduce using rule 47 (elifgroup -> empty .)
    LOOP            reduce using rule 47 (elifgroup -> empty .)
    BREAK           reduce using rule 47 (elifgroup -> empty .)
    WHILE           reduce using rule 47 (elifgroup -> empty .)
    IDENTIFIER      reduce using rule 47 (elifgroup -> empty .)
    LPAREN          reduce using rule 47 (elifgroup -> empty .)
    MINUS           reduce using rule 47 (elifgroup -> empty .)
    NUMBER          reduce using rule 47 (elifgroup -> empty .)
    IF              reduce using rule 47 (elifgroup -> empty .)
    RBRACE          reduce using rule 47 (elifgroup -> empty .)


state 103

    (51) ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup . optelse
    (49) optelse -> . empty
    (50) optelse -> . ELSE LBRACE statementlist RBRACE
    (16) empty -> .

    ELSE            shift and go to state 105
    RETURN          reduce using rule 16 (empty -> .)
    LOOP            reduce using rule 16 (empty -> .)
    BREAK           reduce using rule 16 (empty -> .)
    WHILE           reduce using rule 16 (empty -> .)
    IDENTIFIER      reduce using rule 16 (empty -> .)
    LPAREN          reduce using rule 16 (empty -> .)
    MINUS           reduce using rule 16 (empty -> .)
    NUMBER          reduce using rule 16 (empty -> .)
    IF              reduce using rule 16 (empty -> .)
    RBRACE          reduce using rule 16 (empty -> .)

    empty                          shift and go to state 107
    optelse                        shift and go to state 106

state 104

    (48) elifgroup -> ELIF LPAREN . expression RPAREN LBRACE statementlist RBRACE elifgroup
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER

    LPAREN          shift and go to state 36
    IDENTIFIER      shift and go to state 42
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29

    expression                     shift and go to state 108

state 105

    (50) optelse -> ELSE . LBRACE statementlist RBRACE

    LBRACE          shift and go to state 109


state 106

    (51) ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .

    RETURN          reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    LOOP            reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    BREAK           reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    WHILE           reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    IDENTIFIER      reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    LPAREN          reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    MINUS           reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    NUMBER          reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    IF              reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)
    RBRACE          reduce using rule 51 (ifelse -> IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse .)


state 107

    (49) optelse -> empty .

    RETURN          reduce using rule 49 (optelse -> empty .)
    LOOP            reduce using rule 49 (optelse -> empty .)
    BREAK           reduce using rule 49 (optelse -> empty .)
    WHILE           reduce using rule 49 (optelse -> empty .)
    IDENTIFIER      reduce using rule 49 (optelse -> empty .)
    LPAREN          reduce using rule 49 (optelse -> empty .)
    MINUS           reduce using rule 49 (optelse -> empty .)
    NUMBER          reduce using rule 49 (optelse -> empty .)
    IF              reduce using rule 49 (optelse -> empty .)
    RBRACE          reduce using rule 49 (optelse -> empty .)


state 108

    (48) elifgroup -> ELIF LPAREN expression . RPAREN LBRACE statementlist RBRACE elifgroup
    (32) expression -> expression . ISEQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . LESSTHAN expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . LESSEQUAL expression
    (37) expression -> expression . GREATEREQUAL expression
    (38) expression -> expression . LOGICAND expression
    (39) expression -> expression . LOGICOR expression
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 110
    ISEQUAL         shift and go to state 61
    NOTEQUAL        shift and go to state 53
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 54
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 65
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 55


state 109

    (50) optelse -> ELSE LBRACE . statementlist RBRACE
    (21) statementlist -> . empty
    (22) statementlist -> . statement statementlist
    (16) empty -> .
    (23) statement -> . expression SEMICOLON
    (24) statement -> . ifelse
    (25) statement -> . RETURN expression SEMICOLON
    (26) statement -> . LOOP LBRACE statementlist RBRACE
    (27) statement -> . BREAK SEMICOLON
    (28) statement -> . WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
    (29) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER
    (51) ifelse -> . IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    RBRACE          reduce using rule 16 (empty -> .)
    RETURN          shift and go to state 28
    LOOP            shift and go to state 41
    BREAK           shift and go to state 39
    WHILE           shift and go to state 38
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 36
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29
    IF              shift and go to state 37

    statementlist                  shift and go to state 111
    ifelse                         shift and go to state 32
    statement                      shift and go to state 33
    expression                     shift and go to state 40
    empty                          shift and go to state 35

state 110

    (48) elifgroup -> ELIF LPAREN expression RPAREN . LBRACE statementlist RBRACE elifgroup

    LBRACE          shift and go to state 112


state 111

    (50) optelse -> ELSE LBRACE statementlist . RBRACE

    RBRACE          shift and go to state 113


state 112

    (48) elifgroup -> ELIF LPAREN expression RPAREN LBRACE . statementlist RBRACE elifgroup
    (21) statementlist -> . empty
    (22) statementlist -> . statement statementlist
    (16) empty -> .
    (23) statement -> . expression SEMICOLON
    (24) statement -> . ifelse
    (25) statement -> . RETURN expression SEMICOLON
    (26) statement -> . LOOP LBRACE statementlist RBRACE
    (27) statement -> . BREAK SEMICOLON
    (28) statement -> . WHILE LPAREN expression RPAREN LBRACE statementlist RBRACE
    (29) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN arglist RPAREN
    (32) expression -> . expression ISEQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression LESSTHAN expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression LESSEQUAL expression
    (37) expression -> . expression GREATEREQUAL expression
    (38) expression -> . expression LOGICAND expression
    (39) expression -> . expression LOGICOR expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . IDENTIFIER
    (45) expression -> . MINUS expression
    (46) expression -> . NUMBER
    (51) ifelse -> . IF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup optelse

    RBRACE          reduce using rule 16 (empty -> .)
    RETURN          shift and go to state 28
    LOOP            shift and go to state 41
    BREAK           shift and go to state 39
    WHILE           shift and go to state 38
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 36
    MINUS           shift and go to state 31
    NUMBER          shift and go to state 29
    IF              shift and go to state 37

    statementlist                  shift and go to state 114
    ifelse                         shift and go to state 32
    statement                      shift and go to state 33
    expression                     shift and go to state 40
    empty                          shift and go to state 35

state 113

    (50) optelse -> ELSE LBRACE statementlist RBRACE .

    RETURN          reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    LOOP            reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    BREAK           reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    WHILE           reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    IDENTIFIER      reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    LPAREN          reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    MINUS           reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    NUMBER          reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    IF              reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)
    RBRACE          reduce using rule 50 (optelse -> ELSE LBRACE statementlist RBRACE .)


state 114

    (48) elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist . RBRACE elifgroup

    RBRACE          shift and go to state 115


state 115

    (48) elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE . elifgroup
    (47) elifgroup -> . empty
    (48) elifgroup -> . ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup
    (16) empty -> .

    ELIF            shift and go to state 101
    ELSE            reduce using rule 16 (empty -> .)
    RETURN          reduce using rule 16 (empty -> .)
    LOOP            reduce using rule 16 (empty -> .)
    BREAK           reduce using rule 16 (empty -> .)
    WHILE           reduce using rule 16 (empty -> .)
    IDENTIFIER      reduce using rule 16 (empty -> .)
    LPAREN          reduce using rule 16 (empty -> .)
    MINUS           reduce using rule 16 (empty -> .)
    NUMBER          reduce using rule 16 (empty -> .)
    IF              reduce using rule 16 (empty -> .)
    RBRACE          reduce using rule 16 (empty -> .)

    empty                          shift and go to state 102
    elifgroup                      shift and go to state 116

state 116

    (48) elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .

    ELSE            reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    RETURN          reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    LOOP            reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    BREAK           reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    WHILE           reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    IDENTIFIER      reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    LPAREN          reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    MINUS           reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    NUMBER          reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    IF              reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)
    RBRACE          reduce using rule 48 (elifgroup -> ELIF LPAREN expression RPAREN LBRACE statementlist RBRACE elifgroup .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ISEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 78 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 78 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 86 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 86 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 86 resolved as shift
